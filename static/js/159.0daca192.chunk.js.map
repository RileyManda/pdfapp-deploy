{"version":3,"sources":["app/routes/table/routes/data/Components/DataTable.js","app/routes/table/routes/data/Components/CustomTable.js","app/routes/table/routes/data/Components/CustomizedTable.js","app/routes/table/routes/data/index.js","components/CardBox/index.js"],"names":["counter","createData","name","calories","fat","carbs","protein","id","columnData","align","disablePadding","label","DataTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","TableHead","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","onChange","map","column","key","numeric","Tooltip","title","placement","enterDelay","TableSortLabel","active","direction","onClick","property","event","onRequestSort","DataTableToolbar","Toolbar","className","Typography","variant","IconButton","aria-label","DataTable","useState","setOrder","setOrderBy","selected","setSelected","sort","a","b","data","setData","page","setPage","rowsPerPage","setRowsPerPage","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","Paper","Table","n","items","TableBody","isSelect","hover","onKeyDown","keycode","handleKeyDown","role","aria-checked","tabIndex","TableFooter","TablePagination","count","onChangePage","onChangeRowsPerPage","target","value","TablePaginationActionsWrapped","withStyles","theme","root","flexShrink","palette","text","secondary","marginLeft","spacing","unit","withTheme","classes","disabled","Math","ceil","max","width","marginTop","table","minWidth","tableWrapper","overflowX","emptyRows","min","style","height","colSpan","ActionsComponent","CustomTableCell","head","backgroundColor","common","black","white","body","fontSize","row","background","default","DataTables","CardBox","styleName","cardStyle","heading","IntlMessages","headerOutside","children","childrenStyle","headingStyle","defaultProps"],"mappings":"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","file":"static/js/159.0daca192.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport keycode from \"keycode\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nlet counter = 0;\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  counter += 1;\r\n  return {id: counter, name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst columnData = [\r\n  {id: \"name\", align: false, disablePadding: true, label: \"Dessert (100g serving)\"},\r\n  {id: \"calories\", align: true, disablePadding: false, label: \"Calories\"},\r\n  {id: \"fat\", align: true, disablePadding: false, label: \"Fat (g)\"},\r\n  {id: \"carbs\", align: true, disablePadding: false, label: \"Carbs (g)\"},\r\n  {id: \"protein\", align: true, disablePadding: false, label: \"Protein (g)\"}\r\n];\r\n\r\nconst DataTableHead = (props) => {\r\n\r\n  const createSortHandler = property => event => {\r\n    props.onRequestSort(event, property);\r\n  };\r\n\r\n    const {onSelectAllClick, order, orderBy, numSelected, rowCount} = props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox color=\"primary\"\r\n                      indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                      checked={numSelected === rowCount}\r\n                      onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {columnData.map(column => {\r\n            return (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.numeric}\r\n                padding={column.disablePadding ? \"none\" : \"default\"}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={column.numeric ? \"bottom-end\" : \"bottom-start\"}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === column.id}\r\n                    direction={order}\r\n                    onClick={() => createSortHandler(column.id)}\r\n                  >\r\n                    {column.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            );\r\n          })}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n};\r\n\r\nDataTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\n\r\nlet DataTableToolbar = props => {\r\n  const {numSelected} = props;\r\n\r\n  return (\r\n    <Toolbar className=\"table-header\">\r\n      <div className=\"title\">\r\n        {numSelected > 0 ? (\r\n          <Typography variant=\"subheading\">{numSelected} selected</Typography>\r\n        ) : (\r\n          <Typography variant=\"title\">Nutrition</Typography>\r\n        )}\r\n      </div>\r\n      <div className=\"spacer\"/>\r\n      <div className=\"actions\">\r\n        {numSelected > 0 && (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nDataTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\n\r\nconst DataTable = () => {\r\n\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"calories\");\r\n  const [selected, setSelected] = useState([]);\r\n  const [data, setData] = useState([\r\n    createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n    createData(\"Donut\", 452, 25.0, 51, 4.9),\r\n    createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n    createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n    createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n    createData(\"Honeycomb\", 408, 3.2, 87, 6.5),\r\n    createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n    createData(\"Jelly Bean\", 375, 0.0, 94, 0.0),\r\n    createData(\"KitKat\", 518, 26.0, 65, 7.0),\r\n    createData(\"Lollipop\", 392, 0.2, 98, 0.0),\r\n    createData(\"Marshmallow\", 318, 0, 81, 2.0),\r\n    createData(\"Nougat\", 360, 19.0, 9, 37.0),\r\n    createData(\"Oreo\", 437, 18.0, 63, 4.0)\r\n  ].sort((a, b) => (a.calories < b.calories ? -1 : 1)));\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = \"desc\";\r\n\r\n    if (orderBy === property && order === \"desc\") {\r\n      order = \"asc\";\r\n    }\r\n\r\n    const items =\r\n      order === \"desc\"\r\n        ? data.sort((a, b) => (b[orderBy] < a[orderBy] ? -1 : 1))\r\n        : data.sort((a, b) => (a[orderBy] < b[orderBy] ? -1 : 1));\r\n\r\n    setData(items);\r\n    setOrder(order);\r\n    setOrderBy(orderBy);\r\n  };\r\n\r\n  const handleSelectAllClick = (event, checked) => {\r\n    if (checked) {\r\n      setSelected(data.map(n => n.id));\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleKeyDown = (event, id) => {\r\n    if (keycode(event) === \"space\") {\r\n      handleClick(event, id);\r\n    }\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  let isSelected = id => selected.indexOf(id) !== -1;\r\n\r\n  return (\r\n    <Paper>\r\n      <DataTableToolbar numSelected={selected.length}/>\r\n      <div className=\"flex-auto\">\r\n        <div className=\"table-responsive-material\">\r\n          <Table className=\"\">\r\n            <DataTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\r\n                const isSelect = isSelected(n.id);\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={event => handleClick(event, n.id)}\r\n                    onKeyDown={event => handleKeyDown(event, n.id)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isSelect}\r\n                    tabIndex={-1}\r\n                    key={n.id}\r\n                    selected={isSelect}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox color=\"primary\" checked={isSelect}/>\r\n                    </TableCell>\r\n                    <TableCell padding=\"none\">{n.name}</TableCell>\r\n                    <TableCell align=\"right\">{n.calories}</TableCell>\r\n                    <TableCell align=\"right\">{n.fat}</TableCell>\r\n                    <TableCell align=\"right\">{n.carbs}</TableCell>\r\n                    <TableCell align=\"right\">{n.protein}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  count={data.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing.unit * 2.5\r\n  }\r\n});\r\n\r\nconst TablePaginationActions = (props) => {\r\n  const handleFirstPageButtonClick = event => {\r\n    props.onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = event => {\r\n    props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = event => {\r\n    props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = event => {\r\n    props.onChangePage(\r\n      event,\r\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1)\r\n    );\r\n  };\r\n\r\n  const {classes, count, page, rowsPerPage, theme} = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"First Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ?\r\n          <i className=\"zmdi zmdi-skip-next\"/> : <i className=\"zmdi zmdi-skip-previous\"/>}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"Previous Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ?\r\n          <i className=\"zmdi zmdi-chevron-right\"/> : <i className=\"zmdi zmdi-chevron-left\"/>}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Next Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ?\r\n          <i className=\"zmdi zmdi-chevron-left\"/> : <i className=\"zmdi zmdi-chevron-right\"/>}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Last Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ?\r\n          <i className=\"zmdi zmdi-skip-previous\"/> : <i className=\"zmdi zmdi-skip-next\"/>}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nTablePaginationActions.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, {withTheme: true})(\r\n  TablePaginationActions\r\n);\r\n\r\nlet counter = 0;\r\n\r\nfunction createData(name, calories, fat) {\r\n  counter += 1;\r\n  return {id: counter, name, calories, fat};\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  table: {\r\n    minWidth: 500\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n});\r\n\r\nconst data = [\r\n  createData(\"Cupcake\", 305, 3.7),\r\n  createData(\"Donut\", 452, 25.0),\r\n  createData(\"Eclair\", 262, 16.0),\r\n  createData(\"Frozen yoghurt\", 159, 6.0),\r\n  createData(\"Gingerbread\", 356, 16.0),\r\n  createData(\"Honeycomb\", 408, 3.2),\r\n  createData(\"Ice cream sandwich\", 237, 9.0),\r\n  createData(\"Jelly Bean\", 375, 0.0),\r\n  createData(\"KitKat\", 518, 26.0),\r\n  createData(\"Lollipop\", 392, 0.2),\r\n  createData(\"Marshmallow\", 318, 0),\r\n  createData(\"Nougat\", 360, 19.0),\r\n  createData(\"Oreo\", 437, 18.0)\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\n\r\nconst CustomTable = (props) => {\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const {classes} = props;\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\r\n              return (\r\n                <TableRow key={n.id}>\r\n                  <TableCell>{n.name}</TableCell>\r\n                  <TableCell align=\"right\">{n.calories}</TableCell>\r\n                  <TableCell align=\"right\">{n.fat}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{height: 48 * emptyRows}}>\r\n                <TableCell colSpan={6}/>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                colSpan={3}\r\n                count={data.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActionsWrapped}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nCustomTable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CustomTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  },\r\n  row: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  }\r\n});\r\n\r\nlet id = 0;\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return { id, name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst data = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9)\r\n];\r\n\r\nfunction CustomizedTable(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <CustomTableCell>Dessert (100g serving)</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Calories</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Fat (g)</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Carbs (g)</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Protein (g)</CustomTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(n => {\r\n            return (\r\n              <TableRow className={classes.row} key={n.id}>\r\n                <CustomTableCell>{n.name}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.calories}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.fat}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.carbs}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.protein}</CustomTableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nCustomizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CustomizedTable);\r\n","import React from \"react\";\r\nimport CardBox from \"components/CardBox/index\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport DataTable from \"./Components/DataTable\";\r\nimport CustomTable from \"./Components/CustomTable\";\r\nimport CustomizedTable from \"./Components/CustomizedTable\";\r\n\r\nconst DataTables = () => {\r\n  return (\r\n    <div className=\"row animated slideInUpTiny animation-duration-3\">\r\n      <CardBox styleName=\"col-12\" cardStyle=\" p-0\" heading={<IntlMessages id=\"table.sortingTable\"/>}\r\n               headerOutside>\r\n        <DataTable/>\r\n      </CardBox>\r\n      <CardBox styleName=\"col-12\" cardStyle=\" p-0\" heading={<IntlMessages id=\"table.customTable\"/>}\r\n               headerOutside>\r\n        <CustomTable/>\r\n      </CardBox>\r\n      <CardBox styleName=\"col-12\" cardStyle=\"mb-0 p-0\" heading={<IntlMessages id=\"table.customizedTable\"/>}\r\n               headerOutside>\r\n        <CustomizedTable/>\r\n      </CardBox>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default DataTables;\r\n\r\n","import React from 'react';\r\n\r\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside, headingStyle}) => {\r\n\r\n  return (\r\n    <div className={`${styleName}`}>\r\n      {headerOutside &&\r\n      <div className=\"jr-entry-header\">\r\n        <h3 className=\"entry-heading\">{heading}</h3>\r\n        {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\r\n      </div>\r\n      }\r\n\r\n      <div className={`jr-card ${cardStyle}`}>\r\n        {!headerOutside &&\r\n        (heading &&\r\n          <div className={`jr-card-header ${headingStyle}`}>\r\n            <h3 className=\"card-heading\">{heading}</h3>\r\n            {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\r\n          </div>\r\n        )}\r\n        <div className={`jr-card-body ${childrenStyle}`}>\r\n          {children.length > 1 ? children[1] : children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardBox;\r\n\r\nCardBox.defaultProps = {\r\n  cardStyle: '',\r\n  headingStyle: '',\r\n  childrenStyle: '',\r\n  styleName: 'col-lg-6 col-sm-12'\r\n};"],"sourceRoot":""}