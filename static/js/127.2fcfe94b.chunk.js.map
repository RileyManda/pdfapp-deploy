{"version":3,"sources":["components/chatPanel/Conversation/ReceivedMessageCell/index.js","components/chatPanel/Conversation/SentMessageCell/index.js","components/chatPanel/Conversation/index.js","components/chatPanel/ChatUserList/UserCell/index.js","components/chatPanel/ChatUserList/index.js","components/chatPanel/ContactList/UserCell/index.js","components/chatPanel/ContactList/index.js","app/routes/chatPanel/redux/index.js"],"names":["ReceivedMessageCell","conversation","user","className","src","thumb","alt","message","sentAt","SentMessageCell","name","Conversation","conversationData","selectedUser","map","index","type","key","UserCell","chat","selectedSectionId","onSelectUser","id","onClick","status","lastMessage","substring","lastMessageTime","unreadMessage","ChatUserList","chatUsers","mood","ContactList","contactList","ChatPanelWithRedux","filterContacts","userName","props","filterUsers","_handleKeyPress","e","submitComment","setTimeout","hideLoader","updateMessageValue","evt","target","value","Communication","aria-label","onChatToggleDrawer","bind","style","height","width","maxHeight","onKeyUp","onChange","placeholder","AppUsersInfo","setState","userState","fullWidth","multiline","rows","defaultValue","margin","ChatUsers","userInfoState","updateSearchChatUser","searchChatUser","position","state","selectedTabIndex","handleChange","indicatorColor","textColor","label","onChangeIndex","handleChangeIndex","length","userNotFound","event","showCommunication","color","this","fetchChatUser","fetchChatUserConversation","loader","drawerState","open","onClose","Component","connect","chatData","settings","conversationList"],"mappings":"2HAkBeA,EAhBa,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,KAC1C,OACE,yBAAKC,UAAU,gCAEb,yBAAKA,UAAU,+CAA+CC,IAAKF,EAAKG,MACnEC,IAAI,KAET,yBAAKH,UAAU,UACb,yBAAKA,UAAU,WAAWF,EAAaM,SACvC,yBAAKJ,UAAU,mCAAmCF,EAAaO,WCQxDC,EAjBS,SAAC,GAAoB,IAAnBR,EAAkB,EAAlBA,aACxB,OACE,yBAAKE,UAAU,iDAEb,yBAAKA,UAAU,+CACVC,IAAK,sCACLE,IAAKL,EAAaS,OAEvB,yBAAKP,UAAU,qBACb,yBAAKA,UAAU,WAAWF,EAAaM,SACvC,yBAAKJ,UAAU,mCAAmCF,EAAaO,WCIxDG,IAZM,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,aAEvC,OACE,yBAAKV,UAAU,qBACZS,EAAiBE,KAAI,SAACb,EAAcc,GAAf,MAA+C,SAAtBd,EAAae,KAC1D,kBAAC,EAAD,CAAiBC,IAAKF,EAAOd,aAAcA,IAC3C,kBAAC,EAAD,CAAqBgB,IAAKF,EAAOd,aAAcA,EAAcC,KAAMW,U,sDCmB5DK,EA3BE,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,aAC1C,OACE,yBAAKJ,IAAKE,EAAKG,GAAInB,UAAS,yBAAoBiB,IAAsBD,EAAKG,GAAK,SAAW,IAAMC,QAAS,WACxGF,EAAaF,KAEb,yBAAKhB,UAAU,qBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,oBACb,yBAAKC,IAAKe,EAAKd,MAAOF,UAAU,yBAAyBG,IAAKa,EAAKT,OACnE,0BAAMP,UAAS,0BAAqBgB,EAAKK,YAI7C,yBAAKrB,UAAU,4BACb,0BAAMA,UAAU,WAAWgB,EAAKT,MAChC,yBAAKP,UAAU,iBAAiBgB,EAAKM,YAAYC,UAAU,EAAG,IAAM,OACpE,yBAAKvB,UAAU,qBAAqBgB,EAAKQ,kBAG3C,yBAAKxB,UAAU,4BACb,yBAAKA,UAAU,8CAA8CgB,EAAKS,mBCT7DC,IAVM,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,UAAWV,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,aACnD,OACE,yBAAKlB,UAAU,aACZ2B,EAAUhB,KAAI,SAACK,EAAMJ,GAAP,OACb,kBAAC,EAAD,CAAUE,IAAKF,EAAOI,KAAMA,EAAMC,kBAAmBA,EAAmBC,aAAcA,U,sDCiB/EH,EAtBE,SAAC,GAA6C,IAA5CG,EAA2C,EAA3CA,aAAcD,EAA6B,EAA7BA,kBAAmBlB,EAAU,EAAVA,KAClD,OACE,yBAAKC,UAAS,yBAAoBiB,IAAsBlB,EAAKoB,GAAK,SAAW,IAAMC,QAAS,WAC1FF,EAAanB,KAEb,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,oBACb,yBAAKC,IAAKF,EAAKG,MAAOF,UAAU,yBAAyBG,IAAI,WAC7D,0BAAMH,UAAS,6BAAwBD,EAAKsB,YAIhD,yBAAKrB,UAAU,oCACb,yBAAKA,UAAU,WAAWD,EAAKQ,MAC/B,yBAAKP,UAAU,iBAAiBD,EAAK6B,KAAKL,UAAU,EAAG,IAAM,WCJxDM,IAVK,SAAC,GAAoD,IAAnDX,EAAkD,EAAlDA,aAAcD,EAAoC,EAApCA,kBAAmBa,EAAiB,EAAjBA,YACrD,OACE,yBAAK9B,UAAU,aACZ8B,EAAYnB,KAAI,SAACZ,EAAMa,GAAP,OACf,kBAAC,EAAD,CAAUE,IAAKF,EAAOb,KAAMA,EAAMkB,kBAAmBA,EAAmBC,aAAcA,U,qQCwBxFa,E,kDAsPJ,aAAe,IAAD,8BACZ,gBAtPFC,eAAiB,SAACC,GAChB,EAAKC,MAAMF,eAAeC,IAoPd,EAlPdE,YAAc,SAACF,GACb,EAAKC,MAAMC,YAAYF,IAiPX,EA/OdG,gBAAkB,SAACC,GACH,UAAVA,EAAEvB,KACJ,EAAKwB,iBA6OK,EAzOdpB,aAAe,SAACnB,GACd,EAAKmC,MAAMhB,aAAanB,GAExBwC,YAAW,WACT,EAAKL,MAAMM,eACV,OAoOS,EAhOdF,cAAgB,WACa,KAAvB,EAAKJ,MAAM9B,SACb,EAAK8B,MAAMI,iBA8ND,EA1NdG,mBAAqB,SAACC,GACpB,EAAKR,MAAMO,mBAAmBC,EAAIC,OAAOC,QAyN7B,EArNdC,cAAgB,WAAO,IAAD,EAC0B,EAAKX,MAA5C9B,EADa,EACbA,QAASM,EADI,EACJA,aACTD,EAFa,EACUX,aACvBW,iBACP,OAAO,yBAAKT,UAAU,aACpB,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAYA,UAAU,6BAA6B8C,aAAW,OAClD1B,QAAS,EAAK2B,mBAAmBC,KAAxB,iBACnB,uBAAGhD,UAAU,4BAEf,yBAAKA,UAAU,yBAEb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,yBAAKC,IAAKS,EAAaR,MAClBF,UAAU,yBACVG,IAAI,KAET,0BAAMH,UAAS,oBAAeU,EAAaW,YAI/C,yBAAKrB,UAAU,qBACZU,EAAaH,QAMpB,kBAAC,IAAD,CAAkBP,UAAU,6BACViD,MAAO,CAACC,OAAQ,EAAKhB,MAAMiB,OAAS,KAAO,sBAAwB,wBACnF,kBAAC,IAAD,CAAc1C,iBAAkBA,EAClBC,aAAcA,KAG9B,yBAAKV,UAAU,oBACb,yBAAKA,UAAU,qCAAqCiD,MAAO,CAACG,UAAW,KACrE,yBAAKpD,UAAU,OACb,yBAAKA,UAAU,cACC,8BACEmB,GAAG,WAAWnB,UAAU,sCACxBqD,QAAS,EAAKjB,gBAAgBY,KAArB,gBACTM,SAAU,EAAKb,mBAAmBO,KAAxB,gBACVJ,MAAOxC,EACPmD,YAAY,yCAIhC,yBAAKvD,UAAU,aACb,kBAAC,IAAD,CACEoB,QAAS,EAAKkB,cAAcU,KAAnB,gBACTF,aAAW,gBACX,uBAAG9C,UAAU,+BAkKX,EA1JdwD,aAAe,WACb,OAAO,yBAAKxD,UAAU,qBACpB,yBAAKA,UAAU,yCAEb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAYA,UAAU,uBAAuB8C,aAAW,cAC5C1B,QAAS,WACP,EAAKqC,SAAS,CACZC,UAAW,MAGzB,uBAAG1D,UAAU,2BAGjB,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBACb,yBAAKC,IAAK,sCACLD,UAAU,mDAAmDG,IAAI,cAGxE,yBAAKH,UAAU,gCAAf,oBAIJ,yBAAKA,UAAU,wBAEb,kBAAC,IAAD,CAAkBA,UAAU,gCACViD,MAAO,CAACC,OAAQ,EAAKhB,MAAMiB,OAAS,KAAO,sBAAwB,wBACnF,0BAAMnD,UAAU,OACd,yBAAKA,UAAU,mBACb,uCAEA,kBAAC,IAAD,CACE2D,WAAS,EACTxC,GAAG,kBACHyC,WAAS,EACTC,KAAM,EACNR,QAAS,EAAKjB,gBAAgBY,KAArB,gBACTM,SAAU,EAAKb,mBAAmBO,KAAxB,gBACVc,aAAa,qCACbP,YAAY,SACZQ,OAAO,eAiHP,EAxGdC,UAAY,WACV,OAAO,yBAAKhE,UAAU,qBACpB,yBAAKA,UAAU,uBAEb,yBAAKA,UAAU,gBAEb,yBAAKA,UAAU,mBAAmBoB,QAAS,WACzC,EAAKc,MAAM+B,cAAc,KAEzB,yBAAKjE,UAAU,oBACb,yBAAKmB,GAAG,qBAAqBlB,IAAK,sCAC7BD,UAAU,yBACVG,IAAI,KACT,0BAAMH,UAAU,uBAGpB,yBAAKA,UAAU,8DACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,QAAd,mBAEF,yBAAKA,UAAU,sBACb,0BAAMA,UAAU,aAAhB,yBAKN,yBAAKA,UAAU,kBAEb,kBAAC,IAAD,CAAWuD,YAAY,2BACZD,SAAU,EAAKY,qBAAqBlB,KAA1B,gBACVJ,MAAO,EAAKV,MAAMiC,mBAKjC,yBAAKnE,UAAU,wBACb,kBAAC,IAAD,CAAQoE,SAAS,SAASpE,UAAU,8BAClC,kBAAC,IAAD,CACEA,UAAU,YACV4C,MAAO,EAAKyB,MAAMC,iBAClBhB,SAAU,EAAKiB,aACfC,eAAe,UACfC,UAAU,UACVd,WAAS,GAET,kBAAC,IAAD,CAAKe,MAAO,kBAAC,IAAD,CAAcvD,GAAG,oBAC7B,kBAAC,IAAD,CAAKuD,MAAO,kBAAC,IAAD,CAAcvD,GAAG,sBAGjC,kBAAC,IAAD,CACEP,MAAO,EAAKyD,MAAMC,iBAClBK,cAAe,EAAKC,mBAEpB,kBAAC,IAAD,CAAkB5E,UAAU,gCACViD,MAAO,CAACC,OAAQ,EAAKhB,MAAMiB,OAAS,KAAO,sBAAwB,wBAClD,IAAhC,EAAKjB,MAAMP,UAAUkD,OACpB,yBAAK7E,UAAU,OAAO,EAAKkC,MAAM4C,cAEjC,kBAAC,IAAD,CAAcnD,UAAW,EAAKO,MAAMP,UACtBV,kBAAmB,EAAKiB,MAAMjB,kBAC9BC,aAAc,EAAKA,aAAa8B,KAAlB,mBAIhC,kBAAC,IAAD,CAAkBhD,UAAU,gCACViD,MAAO,CAACC,OAAQ,EAAKhB,MAAMiB,OAAS,KAAO,sBAAwB,wBAE/C,IAAlC,EAAKjB,MAAMJ,YAAY+C,OACrB,yBAAK7E,UAAU,OAAO,EAAKkC,MAAM4C,cAEjC,kBAAC,IAAD,CAAahD,YAAa,EAAKI,MAAMJ,YACxBb,kBAAmB,EAAKiB,MAAMjB,kBAC9BC,aAAc,EAAKA,aAAa8B,KAAlB,uBAgC3B,EAxBduB,aAAe,SAACQ,EAAOnC,GACrB,EAAKa,SAAS,CAACa,iBAAkB1B,KAuBrB,EApBdgC,kBAAoB,SAAAhE,GAClB,EAAK6C,SAAS,CAACa,iBAAkB1D,KAmBrB,EAjBdoE,kBAAoB,WAClB,OACE,yBAAKhF,UAAU,YACb,yBAAKA,UAAU,iBACe,OAA5B,EAAKkC,MAAMxB,aACT,yBAAKV,UAAU,eACb,uBAAGA,UAAU,uCACb,wBAAIA,UAAU,cAAd,IAA6B,kBAAC,IAAD,CAAcmB,GAAG,yBAC9C,kBAAC,IAAD,CAAQnB,UAAU,oBAAoBiF,MAAM,UACpC7D,QAAS,EAAK2B,mBAAmBC,KAAxB,iBAAqC,kBAAC,IAAD,CACpD7B,GAAG,6BAEL,EAAK0B,mBAOf,EAAKwB,MAAQ,CACXC,iBAAkB,GAHR,E,iEAQZY,KAAKhD,MAAMiD,gBACXD,KAAKhD,MAAMkD,8B,2CAGQ1C,GACnBwC,KAAKhD,MAAMgC,qBAAqBxB,EAAIC,OAAOC,OAC3CsC,KAAKhD,MAAMF,eAAeU,EAAIC,OAAOC,OACrCsC,KAAKhD,MAAMC,YAAYO,EAAIC,OAAOC,S,2CAIlCsC,KAAKhD,MAAMa,uB,+BAGH,IAAD,EACkCmC,KAAKhD,MAAvCmD,EADA,EACAA,OAAQ3B,EADR,EACQA,UAAW4B,EADnB,EACmBA,YAC1B,OACE,yBAAKtF,UAAU,kCACb,yBAAKA,UAAU,sEACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAQuF,KAAMD,EACNE,QAASN,KAAKnC,mBAAmBC,KAAKkC,OAC7B,IAAdxB,EAAkBwB,KAAKlB,YAAckB,KAAK1B,iBAG/C,yBAAKxD,UAAU,iCACE,IAAd0D,EAAkBwB,KAAKlB,YAAckB,KAAK1B,gBAE5C6B,EACC,yBAAKrF,UAAU,oBACViD,MAAO,CAACC,OAAQ,wBACnB,kBAAC,IAAD,OACOgC,KAAKF,2B,GA/RKS,aAyUlBC,uBAjCS,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAgBxB,MAAO,CACLxC,MAjB8C,EAAdyC,SAC3BzC,MAiBLkC,OAHEM,EAZFN,OAgBAP,aAJEa,EAXFb,aAgBAQ,YALEK,EAVFL,YAgBArE,kBANE0E,EATF1E,kBAgBAyC,UAPEiC,EARFjC,UAgBAS,eAREwB,EAPFxB,eAgBArC,YATE6D,EANF7D,YAgBApB,aAVEiF,EALFjF,aAgBAN,QAXEuF,EAJFvF,QAgBAuB,UAZEgE,EAHFhE,UAgBAkE,iBAbEF,EAFFE,iBAgBA/F,aAdE6F,EADF7F,gBAmBoC,CACtCqF,kBACAC,8BACApD,mBACAG,gBACAjB,iBACAsB,eACAyB,kBACA3B,kBACAG,uBACAyB,yBACAnB,wBAXa2C,CAYZ3D","file":"static/js/127.2fcfe94b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ReceivedMessageCell = ({conversation, user}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src={user.thumb}\r\n           alt=\"\"/>\r\n\r\n      <div className=\"bubble\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReceivedMessageCell;","import React from 'react';\r\n\r\nconst SentMessageCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item flex-row-reverse\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\"\r\n           src={\"https://via.placeholder.com/150x150\"}\r\n           alt={conversation.name}/>\r\n\r\n      <div className=\"bubble jambo-card\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SentMessageCell;\r\n","import React from 'react';\r\nimport ReceivedMessageCell from \"./ReceivedMessageCell/index\";\r\nimport SentMessageCell from \"./SentMessageCell/index\";\r\n\r\nconst Conversation = ({conversationData, selectedUser}) => {\r\n\r\n  return (\r\n    <div className=\"chat-main-content\">\r\n      {conversationData.map((conversation, index) => conversation.type === 'sent' ?\r\n        <SentMessageCell key={index} conversation={conversation}/> :\r\n        <ReceivedMessageCell key={index} conversation={conversation} user={selectedUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Conversation;","import React from 'react';\r\n\r\nconst UserCell = ({chat, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div key={chat.id} className={`chat-user-item ${selectedSectionId === chat.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(chat);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={chat.thumb} className=\"rounded-circle size-40\" alt={chat.name}/>\r\n            <span className={`chat-mode small ${chat.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-info col-xl-8 col-6\">\r\n          <span className=\"name h4\">{chat.name}</span>\r\n          <div className=\"chat-info-des\">{chat.lastMessage.substring(0, 25) + \"...\"}</div>\r\n          <div className=\"last-message-time\">{chat.lastMessageTime}</div>\r\n        </div>\r\n\r\n        <div className=\"chat-date col-xl-2 col-3\">\r\n          <div className=\"bg-primary rounded-circle badge text-white\">{chat.unreadMessage}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ChatUserList = ({chatUsers, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {chatUsers.map((chat, index) =>\r\n        <UserCell key={index} chat={chat} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatUserList;","import React from 'react';\r\n\r\nconst UserCell = ({onSelectUser, selectedSectionId, user}) => {\r\n  return (\r\n    <div className={`chat-user-item ${selectedSectionId === user.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(user);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={user.thumb} className=\"rounded-circle size-40\" alt=\"Abbott\"/>\r\n            <span className={`chat-mode smallcal ${user.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-contact-col col-xl-10 col-9\">\r\n          <div className=\"h4 name\">{user.name}</div>\r\n          <div className=\"chat-info-des\">{user.mood.substring(0, 30) + \"...\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ContactList = ({onSelectUser, selectedSectionId, contactList}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {contactList.map((user, index) =>\r\n        <UserCell key={index} user={user} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContactList;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Input from '@material-ui/core/Input'\r\nimport ChatUserList from 'components/chatPanel/ChatUserList/index';\r\nimport Conversation from 'components/chatPanel/Conversation/index';\r\nimport ContactList from 'components/chatPanel/ContactList/index';\r\nimport SearchBox from 'components/SearchBox';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport {\r\n  fetchChatUser,\r\n  fetchChatUserConversation,\r\n  filterContacts,\r\n  filterUsers,\r\n  hideLoader,\r\n  onChatToggleDrawer,\r\n  onSelectUser,\r\n  submitComment,\r\n  updateMessageValue,\r\n  updateSearchChatUser,\r\n  userInfoState\r\n} from 'actions/Chat'\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nclass ChatPanelWithRedux extends Component {\r\n  filterContacts = (userName) => {\r\n    this.props.filterContacts(userName);\r\n  };\r\n  filterUsers = (userName) => {\r\n    this.props.filterUsers(userName);\r\n  };\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.submitComment();\r\n    }\r\n  };\r\n\r\n  onSelectUser = (user) => {\r\n    this.props.onSelectUser(user);\r\n\r\n    setTimeout(() => {\r\n      this.props.hideLoader();\r\n    }, 1500);\r\n  };\r\n\r\n\r\n  submitComment = () => {\r\n    if (this.props.message !== '') {\r\n      this.props.submitComment();\r\n    }\r\n  };\r\n\r\n  updateMessageValue = (evt) => {\r\n    this.props.updateMessageValue(evt.target.value);\r\n\r\n  };\r\n\r\n  Communication = () => {\r\n    const {message, selectedUser, conversation} = this.props;\r\n    const {conversationData} = conversation;\r\n    return <div className=\"chat-main\">\r\n      <div className=\"chat-main-header\">\r\n        <IconButton className=\"d-block d-xl-none chat-btn\" aria-label=\"Menu\"\r\n                    onClick={this.onChatToggleDrawer.bind(this)}>\r\n          <i className=\"zmdi zmdi-comment-text\"/>\r\n        </IconButton>\r\n        <div className=\"chat-main-header-info\">\r\n\r\n          <div className=\"chat-avatar mr-2\">\r\n            <div className=\"chat-avatar-mode\">\r\n              <img src={selectedUser.thumb}\r\n                   className=\"rounded-circle size-60\"\r\n                   alt=\"\"/>\r\n\r\n              <span className={`chat-mode ${selectedUser.status}`}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat-contact-name\">\r\n            {selectedUser.name}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <CustomScrollbars className=\"chat-list-scroll scrollbar\"\r\n                        style={{height: this.props.width >= 1200 ? 'calc(100vh - 300px)' : 'calc(100vh - 269px)'}}>\r\n        <Conversation conversationData={conversationData}\r\n                      selectedUser={selectedUser}/>\r\n      </CustomScrollbars>\r\n\r\n      <div className=\"chat-main-footer\">\r\n        <div className=\"d-flex flex-row align-items-center\" style={{maxHeight: 51}}>\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n                            <textarea\r\n                              id=\"required\" className=\"border-0 form-control chat-textarea\"\r\n                              onKeyUp={this._handleKeyPress.bind(this)}\r\n                              onChange={this.updateMessageValue.bind(this)}\r\n                              value={message}\r\n                              placeholder=\"Type and hit enter to send message\"\r\n                            />\r\n            </div>\r\n          </div>\r\n          <div className=\"chat-sent\">\r\n            <IconButton\r\n              onClick={this.submitComment.bind(this)}\r\n              aria-label=\"Send message\">\r\n              <i className=\"zmdi  zmdi-mail-send\"/>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  AppUsersInfo = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"bg-grey lighten-5 chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd mb-0\">\r\n          <IconButton className=\"back-to-chats-button\" aria-label=\"back button\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          userState: 1\r\n                        });\r\n                      }}>\r\n            <i className=\"zmdi zmdi-arrow-back\"/>\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"chat-user chat-user-center\">\r\n          <div className=\"chat-avatar mx-auto\">\r\n            <img src={\"https://via.placeholder.com/150x150\"}\r\n                 className=\"avatar avatar-shadow rounded-circle size-60 huge\" alt=\"John Doe\"/>\r\n          </div>\r\n\r\n          <div className=\"user-name h4 my-2 text-white\">Robert Johnson</div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-sidenav-content\">\r\n\r\n        <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 162px)'}}>\r\n          <form className=\"p-4\">\r\n            <div className=\"form-group mt-4\">\r\n              <label>Mood</label>\r\n\r\n              <Input\r\n                fullWidth\r\n                id=\"exampleTextarea\"\r\n                multiline\r\n                rows={3}\r\n                onKeyUp={this._handleKeyPress.bind(this)}\r\n                onChange={this.updateMessageValue.bind(this)}\r\n                defaultValue=\"it's a status....not your diary...\"\r\n                placeholder=\"Status\"\r\n                margin=\"none\"/>\r\n\r\n            </div>\r\n          </form>\r\n        </CustomScrollbars>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  ChatUsers = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd\">\r\n\r\n          <div className=\"chat-avatar mr-3\" onClick={() => {\r\n            this.props.userInfoState(2);\r\n          }}>\r\n            <div className=\"chat-avatar-mode\">\r\n              <img id=\"user-avatar-button\" src={\"https://via.placeholder.com/150x150\"}\r\n                   className=\"rounded-circle size-50\"\r\n                   alt=\"\"/>\r\n              <span className=\"chat-mode online\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"module-user-info d-flex flex-column justify-content-center\">\r\n            <div className=\"module-title\">\r\n              <h5 className=\"mb-0\">Robert Johnson</h5>\r\n            </div>\r\n            <div className=\"module-user-detail\">\r\n              <span className=\"text-grey\">robert@example.com</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-wrapper\">\r\n\r\n          <SearchBox placeholder=\"Search or start new chat\"\r\n                     onChange={this.updateSearchChatUser.bind(this)}\r\n                     value={this.props.searchChatUser}/>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-sidenav-content\">\r\n        <AppBar position=\"static\" className=\"no-shadow chat-tabs-header\">\r\n          <Tabs\r\n            className=\"chat-tabs\"\r\n            value={this.state.selectedTabIndex}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            fullWidth\r\n          >\r\n            <Tab label={<IntlMessages id=\"chat.chatUser\"/>}/>\r\n            <Tab label={<IntlMessages id=\"chat.contacts\"/>}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          index={this.state.selectedTabIndex}\r\n          onChangeIndex={this.handleChangeIndex}\r\n        >\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {this.props.chatUsers.length === 0 ?\r\n              <div className=\"p-5\">{this.props.userNotFound}</div>\r\n              :\r\n              <ChatUserList chatUsers={this.props.chatUsers}\r\n                            selectedSectionId={this.props.selectedSectionId}\r\n                            onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {\r\n              this.props.contactList.length === 0 ?\r\n                <div className=\"p-5\">{this.props.userNotFound}</div>\r\n                :\r\n                <ContactList contactList={this.props.contactList}\r\n                             selectedSectionId={this.props.selectedSectionId}\r\n                             onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n        </SwipeableViews>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  handleChange = (event, value) => {\r\n    this.setState({selectedTabIndex: value});\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({selectedTabIndex: index});\r\n  };\r\n  showCommunication = () => {\r\n    return (\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-box-main\">{\r\n          this.props.selectedUser === null ?\r\n            <div className=\"loader-view\">\r\n              <i className=\"zmdi zmdi-comment s-128 text-muted\"/>\r\n              <h1 className=\"text-muted\"> {<IntlMessages id=\"chat.selectUserChat\"/>}</h1>\r\n              <Button className=\"d-block d-xl-none\" color=\"primary\"\r\n                      onClick={this.onChatToggleDrawer.bind(this)}>{<IntlMessages\r\n                id=\"chat.selectContactChat\"/>}</Button>\r\n            </div>\r\n            : this.Communication()}\r\n        </div>\r\n      </div>)\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedTabIndex: 0,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.fetchChatUser();\r\n    this.props.fetchChatUserConversation()\r\n  }\r\n\r\n  updateSearchChatUser(evt) {\r\n    this.props.updateSearchChatUser(evt.target.value);\r\n    this.props.filterContacts(evt.target.value);\r\n    this.props.filterUsers(evt.target.value);\r\n  }\r\n\r\n  onChatToggleDrawer() {\r\n    this.props.onChatToggleDrawer();\r\n  }\r\n\r\n  render() {\r\n    const {loader, userState, drawerState} = this.props;\r\n    return (\r\n      <div className=\"app-wrapper app-wrapper-module\">\r\n        <div className=\"app-module chat-module animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"chat-module-box\">\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer open={drawerState}\r\n                      onClose={this.onChatToggleDrawer.bind(this)}>\r\n                {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"chat-sidenav d-none d-xl-flex\">\r\n              {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n            </div>\r\n            {loader ?\r\n              <div className=\"loader-view w-100\"\r\n                   style={{height: 'calc(100vh - 120px)'}}>\r\n                <CircularProgress/>\r\n              </div> : this.showCommunication()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({chatData, settings}) => {\r\n  const {width} = settings;\r\n  const {\r\n    loader,\r\n    userNotFound,\r\n    drawerState,\r\n    selectedSectionId,\r\n    userState,\r\n    searchChatUser,\r\n    contactList,\r\n    selectedUser,\r\n    message,\r\n    chatUsers,\r\n    conversationList,\r\n    conversation\r\n  } = chatData;\r\n  return {\r\n    width,\r\n    loader,\r\n    userNotFound,\r\n    drawerState,\r\n    selectedSectionId,\r\n    userState,\r\n    searchChatUser,\r\n    contactList,\r\n    selectedUser,\r\n    message,\r\n    chatUsers,\r\n    conversationList,\r\n    conversation\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchChatUser,\r\n  fetchChatUserConversation,\r\n  filterContacts,\r\n  filterUsers,\r\n  onSelectUser,\r\n  hideLoader,\r\n  userInfoState,\r\n  submitComment,\r\n  updateMessageValue,\r\n  updateSearchChatUser,\r\n  onChatToggleDrawer\r\n})(ChatPanelWithRedux);\r\n"],"sourceRoot":""}