{"version":3,"sources":["components/todo/ToDoList/ToDoItem/index.js","components/todo/ToDoList/index.js","components/todo/ToDoDetail/ConversationCell.js","components/todo/ToDoDetail/index.js","app/routes/todo/basic/index.js","components/AppModuleHeader/index.js","app/routes/todo/data/labels.js","app/routes/todo/data/users.js","app/routes/todo/data/filters.js","app/routes/todo/data/options.js"],"names":["DragHandle","SortableHandle","className","style","fontSize","ToDoItem","SortableElement","todo","onTodoSelect","onTodoChecked","onMarkAsStart","user","users","Checkbox","color","checked","selected","onClick","event","stopPropagation","value","IconButton","starred","completed","title","labels","map","label","index","includes","id","key","Avatar","alt","name","src","thumb","ToDoList","SortableContainer","toDos","width","CustomScrollbars","height","ConversationCell","conversation","sentAt","message","ToDoDetail","props","handleLabelClick","setState","labelMenu","anchorEl","currentTarget","handleUserClick","userMenu","handleRequestClose","_handleKeyPress","e","submitComment","handleEditTitle","state","editTitle","onToDoUpdate","handleEditNote","note","editNote","handleDueDateChange","date","dueDate","handleChange","target","notes","undefined","this","updatedConversation","concat","avatar","Moment","format","evt","onLabelUpdate","onDeleteToDo","find","DatePicker","invalidLabel","onChange","bind","animateYearScrolling","leftArrowIcon","rightArrowIcon","InputProps","endAdornment","Menu","open","onClose","MenuListProps","MenuItem","important","Input","fullWidth","multiline","placeholder","defaultValue","maxHeight","onKeyUp","updateMessageValue","rows","aria-label","React","Component","ToDo","onSortEnd","oldIndex","newIndex","arrayMove","onLabelSelect","labelMenuState","onOptionMenuSelect","optionMenuState","onOptionMenuItemSelect","option","getAllTodo","getUnselectedAllTodo","getStarredToDo","getUnStarredTodo","getImportantToDo","getUnimportantToDo","allToDos","selectedToDos","length","optionName","filter","deleted","onLabelMenuItemSelect","removeLabel","addLabel","alertMessage","showMessage","addTodo","data","currentTodo","getNavFilters","filters","filterMails","loader","setTimeout","selectedSectionId","icon","getNavLabels","ToDoSideBar","variant","searchTodo","searchText","searchToDos","toLowerCase","indexOf","showToDos","useDragHandle","drawerState","email","todoConversation","conversationList","getToDoConversation","conversationData","splice","onToggleDrawer","updateSearch","indeterminate","onAllTodoSelect","options","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","connect","settings","AppModuleHeader","useState","searchBox","setSearchBox","popoverOpen","setPopOverOpen","toggle","notification","apps","type","placement","isOpen","tag","data-toggle","styleName","onMouseEnter","onMouseLeave","defaultProps"],"mappings":"gLASMA,EAAaC,aAAe,kBAChC,uBAAGC,UAAU,iDAAiDC,MAAO,CAACC,SAAU,SAiEnEC,EA9DEC,aAAgB,YAAyD,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,cAChEC,EAAO,KAGX,OAFIJ,EAAKI,KAAO,IACdA,EAAOC,IAAML,EAAKI,KAAO,IAEzB,yBAAKT,UAAU,oBACb,yBAAKA,UAAU,oBACT,0BAAMA,UAAU,YACd,kBAACF,EAAD,OAGN,kBAACa,EAAA,EAAD,CAAUC,MAAM,UACNC,QAASR,EAAKS,SACdC,QAAS,SAACC,GACRA,EAAMC,kBACNV,EAAcF,IAEhBa,MAAM,eAGhB,kBAACC,EAAA,EAAD,CAAYnB,UAAU,WAAWe,QAAS,WACxCV,EAAKe,SAAWf,EAAKe,QACrBZ,EAAcH,KAEbA,EAAKe,QACJ,uBAAGpB,UAAU,mBACb,uBAAGA,UAAU,6BAKnB,yBAAKA,UAAU,mBAAmBe,QAAS,WACzCT,EAAaD,KAEb,yBAAKL,UAAU,OACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAS,kBAAaK,EAAKgB,WAAa,kCAC1ChB,EAAKiB,OAER,yBAAKtB,UAAU,iBACZuB,IAAOC,KAAI,SAACC,EAAOC,GAClB,OAAQrB,EAAKkB,OAAQI,SAASF,EAAMG,KAClC,yBAAKC,IAAKH,EACL1B,UAAS,8BAAyByB,EAAMb,QAAUa,EAAMH,YAIrE,yBAAKtB,UAAU,6CACb,yBAAKA,UAAU,2BACH,OAATS,EAAgB,kBAACqB,EAAA,EAAD,UACb,kBAACA,EAAA,EAAD,CAAQC,IAAKtB,EAAKuB,KACVC,IAAKxB,EAAKyB,gB,QC3D9BC,EAAWC,aAAkB,YAAiE,IAA/DC,EAA8D,EAA9DA,MAAO/B,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,cAAe8B,EAAW,EAAXA,MACtF,OACE,yBAAKtC,UAAU,eACb,kBAACuC,EAAA,EAAD,CAAkBvC,UAAU,+BACVC,MAAO,CAACuC,OAAQF,GAAS,KAAO,sBAAwB,wBACvED,EAAMb,KAAI,SAACnB,EAAMqB,GAAP,OACT,kBAAC,EAAD,CAAUG,IAAKH,EAAOA,MAAOA,EAAOrB,KAAMA,EAAMC,aAAcA,EACpDE,cAAeA,EACfD,cAAeA,YAOpB4B,O,iMCCAM,EAnBU,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACzB,OACE,yBAAK1C,UAAU,6BACb,yBAAKA,UAAU,oBAEb,yBAAKA,UAAU,gCAAgCiC,IAAKS,EAAaR,MAC5DH,IAAI,SAEX,yBAAK/B,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,aAAa0C,EAAaV,MACzC,yBAAKhC,UAAU,mBAAmB0C,EAAaC,SAEjD,yBAAK3C,UAAU,WAAW0C,EAAaE,Y,QCDzCC,E,kDA+CJ,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IA/CRC,iBAAmB,SAAA/B,GACjB,EAAKgC,SAAS,CAACC,WAAW,EAAMC,SAAUlC,EAAMmC,iBA6C/B,EA3CnBC,gBAAkB,SAAApC,GAChB,EAAKgC,SAAS,CAACK,UAAU,EAAMH,SAAUlC,EAAMmC,iBA0C9B,EAxCnBG,mBAAqB,WACnB,EAAKN,SAAS,CAACK,UAAU,EAAOJ,WAAW,KAuC1B,EApCnBM,gBAAkB,SAACC,GACH,UAAVA,EAAE3B,KACJ,EAAK4B,iBAkCU,EA9BnBC,gBAAkB,WAChB,GAAI,EAAKC,MAAMC,UAAW,CACxB,IAAMvD,EAAO,EAAKsD,MAAMtD,KACxBA,EAAKiB,MAAQ,EAAKqC,MAAMrC,MACxB,EAAKwB,MAAMe,aAAaxD,GAE1B,EAAK2C,SAAS,CACZY,WAAY,EAAKD,MAAMC,aAuBR,EApBnBE,eAAiB,WACf,GAAI,EAAKH,MAAMI,KAAM,CACnB,IAAM1D,EAAO,EAAKsD,MAAMtD,KACxBA,EAAK0D,KAAO,EAAKJ,MAAMI,KACvB,EAAKjB,MAAMe,aAAaxD,GAE1B,EAAK2C,SAAS,CACZgB,UAAW,EAAKL,MAAMK,YAaP,EAVnBC,oBAAsB,SAACC,GACrB,EAAKlB,SAAS,CACZ3C,KAAK,2BAAK,EAAKsD,MAAMtD,MAAjB,IAAuB8D,QAASD,OAQrB,EAJnBE,aAAe,SAAApD,GACb,EAAKgC,SAAL,eAAgBhC,EAAMqD,OAAOrC,KAAOhB,EAAMqD,OAAOnD,SAGhC,MAEM4B,EAAMzC,KAAtBiB,EAFU,EAEVA,MAAOgD,EAFG,EAEHA,MACP5B,EAAgBI,EAAhBJ,aAHU,OAIjB,EAAKiB,MAAQ,CACXtD,KAAMyC,EAAMzC,KACZiB,QACAgD,QACApB,cAAUqB,EACVlB,UAAU,EACVJ,WAAW,EACXW,WAAW,EACXI,UAAU,EACVpB,QAAS,GACTF,gBAde,E,4DAmBjB,GAA2B,KAAvB8B,KAAKb,MAAMf,QAAgB,CAC7B,IAAM6B,EAAsBD,KAAKb,MAAMjB,aAAagC,OAAO,CACzD,KAAQF,KAAK1B,MAAMrC,KAAKuB,KACxB,MAASwC,KAAK1B,MAAMrC,KAAKkE,OACzB,QAAWH,KAAKb,MAAMf,QACtB,OAAUgC,MAASC,OAAO,8BAE5BL,KAAKxB,SAAS,CACZN,aAAc+B,EACd7B,QAAS,Q,yCAKIkC,GACjBN,KAAKxB,SAAS,CACZJ,QAASkC,EAAIT,OAAOnD,U,+BAId,IAAD,SACoDsD,KAAK1B,MAAzDe,EADA,EACAA,aAAckB,EADd,EACcA,cAAeC,EAD7B,EAC6BA,aAAc1C,EAD3C,EAC2CA,MAD3C,EAEkEkC,KAAKb,MAAvEtD,EAFA,EAEAA,KAAM2D,EAFN,EAEMA,SAAUJ,EAFhB,EAEgBA,UAAWtC,EAF3B,EAE2BA,MAAOgD,EAFlC,EAEkCA,MAAO1B,EAFzC,EAEyCA,QAASF,EAFlD,EAEkDA,aACrDjC,EAAO,KAGX,OAFIJ,EAAKI,KAAO,IACdA,EAAOC,IAAMuE,MAAK,SAACxE,GAAD,OAAUA,EAAKmB,KAAOvB,EAAKI,SAE7C,yBAAKT,UAAU,6BACb,kBAACuC,EAAA,EAAD,CAAkBvC,UAAU,+BACVC,MAAO,CAACuC,OAAQF,GAAS,KAAO,sBAAwB,wBAExE,yBAAKtC,UAAU,2CACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,yBACVe,QAASyD,KAAKpB,iBAEP,OAAT3C,EAAgB,wBAAIT,UAAU,sBAAd,gBACf,yBAAKA,UAAU,qCACb,kBAAC8B,EAAA,EAAD,CAAQ9B,UAAU,OAAOiC,IAAKxB,EAAKyB,MAAOH,IAAKtB,EAAKuB,OACpD,wBAAIhC,UAAU,QAAQS,EAAKuB,QAGjC,kBAACkD,EAAA,EAAD,CAAYlF,UAAU,cACVkB,MAAOb,EAAK8D,QACZgB,aAAa,WACbC,SAAUZ,KAAKP,oBAAoBoB,KAAKb,MACxCc,sBAAsB,EACtBC,cAAe,uBAAGvF,UAAU,yBAC5BwF,eAAgB,uBAAGxF,UAAU,4BAC7ByF,WAAY,CACVC,aACE,kBAACvE,EAAA,EAAD,CAAYnB,UAAU,YACpB,uBAAGA,UAAU,6BAOnC,yBAAKA,UAAU,qBACb,yBACEA,UAAU,+EACV,kBAAC2F,EAAA,EAAD,CACE/D,GAAG,aACHsB,SAAUsB,KAAKb,MAAMT,SACrB0C,KAAMpB,KAAKb,MAAMN,SACjBwC,QAASrB,KAAKlB,mBAEdwC,cAAe,CACb7F,MAAO,CACLqC,MAAO,OAIV5B,IAAMc,KAAI,SAACf,EAAMiB,GAAP,OACT,kBAACqE,EAAA,EAAD,CAAUlE,IAAKH,EAAOR,MAAOT,EAAKmB,GAAIb,QAAS,WAC7C,EAAKuC,qBACLjD,EAAKI,KAAOA,EAAKmB,GACjBiC,EAAaxD,KAEb,yBAAKL,UAAU,qDACb,kBAAC8B,EAAA,EAAD,CAAQG,IAAKxB,EAAKyB,MAAOH,IAAKtB,EAAKuB,OAAO,4BAAKvB,EAAKuB,YAO5D,kBAACb,EAAA,EAAD,CAAYnB,UAAU,WAAWe,QAAS,WACxCiE,EAAa3E,KAEb,uBAAGL,UAAU,sBAGf,kBAACmB,EAAA,EAAD,CAAYnB,UAAU,WAAWe,QAAS,WACxCV,EAAKe,SAAWf,EAAKe,QACrByC,EAAaxD,KAEZA,EAAKe,QACJ,uBAAGpB,UAAU,mBACb,uBAAGA,UAAU,4BAKjB,kBAACmB,EAAA,EAAD,CAAYnB,UAAU,WAAWe,QAAS,WACxCV,EAAK2F,WAAa3F,EAAK2F,UACvBnC,EAAaxD,KAEZA,EAAK2F,UACJ,uBAAGhG,UAAU,mBACb,uBAAGA,UAAU,4BAIjB,kBAACmB,EAAA,EAAD,CAAYnB,UAAU,WAAWe,QAASyD,KAAKzB,kBAC7C,uBAAG/C,UAAU,yBAGf,kBAAC2F,EAAA,EAAD,CAAM/D,GAAG,aACHsB,SAAUsB,KAAKb,MAAMT,SACrB0C,KAAMpB,KAAKb,MAAMV,UACjB4C,QAASrB,KAAKlB,mBAEdwC,cAAe,CACb7F,MAAO,CACLqC,MAAO,OAGdf,IAAOC,KAAI,SAAAC,GAAK,OACf,kBAACsE,EAAA,EAAD,CAAUlE,IAAKJ,EAAMG,GAAIb,QAAS,WAChC,EAAKuC,qBACLyB,EAAc1E,EAAMoB,KAEnBA,EAAMH,eASrB,yBAAKtB,UAAU,sBAEb,yBAAKA,UAAU,eACZuB,IAAOC,KAAI,SAACC,EAAOC,GAClB,OAAQrB,EAAKkB,OAAQI,SAASF,EAAMG,KAAO,yBAAKC,IAAKH,EACL1B,UAAS,8BAAyByB,EAAMb,QAAUa,EAAMH,WAI5G,yBAAKtB,UAAU,6CACb,kBAACmB,EAAA,EAAD,CAAYnB,UAAU,eAAee,QAAS,SAACC,GAC7CX,EAAKgB,WAAahB,EAAKgB,UACvBwC,EAAaxD,KAEZA,EAAKgB,UACJ,0BAAMrB,UAAU,2DACM,uBAAGA,UAAU,qBACjC,0BAAMA,UAAU,8DACI,uBAAGA,UAAU,sBAItC4D,EAAY,yBAAK5D,UAAU,mCACxB,yBAAKA,UAAU,OACb,kBAACiG,EAAA,EAAD,CACEC,WAAS,EACTC,WAAS,EAACnG,UAAU,aACpB4B,GAAG,WACHwE,YAAY,QACZhB,SAAU,SAACpE,GAAD,OAAW,EAAKgC,SAAS,CAAC1B,MAAON,EAAMqD,OAAOnD,SACxDmF,aAAc/E,KAGlB,kBAACH,EAAA,EAAD,CAAYJ,QAASyD,KAAKd,iBACxB,uBAAG1D,UAAU,sBAGjB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,kBACZsB,GAEH,kBAACH,EAAA,EAAD,CAAYnB,UAAU,WAAWe,QAASyD,KAAKd,iBAC7C,uBAAG1D,UAAU,uBASvB,yBAAKA,UAAU,2BACZgE,EAAW,yBAAKhE,UAAU,mCACvB,kBAACiG,EAAA,EAAD,CACEC,WAAS,EACTtE,GAAG,WACHuE,WAAS,EACTC,YAAY,OACZhB,SAAU,SAACpE,GAAD,OAAW,EAAKgC,SAAS,CAACsB,MAAOtD,EAAMqD,OAAOnD,SACxDmF,aAAc/B,IAEhB,kBAACnD,EAAA,EAAD,CAAYnB,UAAU,WAAWe,QAASyD,KAAKV,gBAC7C,uBAAG9D,UAAU,sBAGjB,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,qBACZsE,GAEH,kBAACnD,EAAA,EAAD,CAAYnB,UAAU,WAAWe,QAASyD,KAAKV,gBAC7C,uBAAG9D,UAAU,sBAKrB,yBAAKA,UAAU,sBACb,qDAED0C,EAAalB,KAAI,SAACkB,EAAchB,GAAf,OAChB,kBAAC,EAAD,CAAkBG,IAAKH,EAAOgB,aAAcA,QAMhD,yBAAK1C,UAAU,qCACb,yBAAKA,UAAU,qCAAqCC,MAAO,CAACqG,UAAW,KACrE,yBAAKtG,UAAU,OACb,yBAAKA,UAAU,cACG,8BAAUA,UAAU,sCACV4B,GAAG,WACH2E,QAAS/B,KAAKjB,gBAAgB8B,KAAKb,MACnCY,SAAUZ,KAAKgC,mBAAmBnB,KAAKb,MACvCtD,MAAO0B,EACP6D,KAAM,EACNL,YAAY,yCAG1C,yBAAKpG,UAAU,aACb,kBAACmB,EAAA,EAAD,CACEJ,QAASyD,KAAKf,cAAc4B,KAAKb,MACjCkC,aAAW,gBACX,uBAAG1G,UAAU,kC,GAzTJ2G,IAAMC,WAmUhB/D,O,gSC1TTgE,E,kDAiYJ,aAAe,IAAD,8BACZ,gBAhYFC,UAAY,YAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACtB,EAAKhE,SAAS,CACZX,MAAO4E,YAAU,EAAKtD,MAAMtB,MAAO0E,EAAUC,MA6XnC,EA1XdE,cAAgB,SAAAlG,GACd,EAAKgC,SAAS,CACZE,SAAUlC,EAAMmC,cAChBgE,gBAAiB,EAAKxD,MAAMwD,kBAuXlB,EApXdC,mBAAqB,SAAApG,GACnB,EAAKgC,SAAS,CACZE,SAAUlC,EAAMmC,cAChBkE,iBAAkB,EAAK1D,MAAM0D,mBAiXnB,EA9WdC,uBAAyB,SAACC,GACxB,OAAQA,EAAOjG,OACb,IAAK,MACH,EAAKgC,qBACL,EAAKkE,aACL,MACF,IAAK,OACH,EAAKlE,qBACL,EAAKmE,uBACL,MACF,IAAK,UACH,EAAKnE,qBACL,EAAKoE,iBACL,MACF,IAAK,YACH,EAAKpE,qBACL,EAAKqE,mBACL,MACF,IAAK,YACH,EAAKrE,qBACL,EAAKsE,mBACL,MACF,IAAK,cACH,EAAKtE,qBACL,EAAKuE,qBACL,MACF,QACE,EAAKvE,qBACL,EAAKkE,eAkVG,EA/UdA,WAAa,WACX,IAAInF,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAACnB,GAAD,OAAUA,EAAI,2BAC7CA,GAD6C,IAEhDS,UAAU,IACRT,KACJ,EAAK2C,SAAS,CACZ+E,cAAe1F,EAAM2F,OACrBF,SAAUzF,EACV4F,WAAY,MACZ5F,MAAOA,KAsUG,EAnUdoF,qBAAuB,WACrB,IAAIpF,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAACnB,GAAD,OAAUA,EAAI,2BAC7CA,GAD6C,IAEhDS,UAAU,IACRT,KACJ,EAAK2C,SAAS,CACZ+E,cAAe,EACfD,SAAUzF,EACV4F,WAAY,OACZ5F,MAAOA,KA0TG,EAvTdqF,eAAiB,WACf,IAAIK,EAAgB,EAChB1F,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAACnB,GACnC,OAAIA,EAAKe,SACP2G,IACO,2BAAI1H,GAAX,IAAiBS,UAAU,KAEtB,2BAAIT,GAAX,IAAiBS,UAAU,OAO7B,OALA,EAAKkC,SAAS,CACZ+E,cAAeA,EACfD,SAAUzF,EACVA,MAAOA,EAAM6F,QAAO,SAAA7H,GAAI,OAAKA,EAAK8H,aAE7B9F,GAySK,EAvSdsF,iBAAmB,WACjB,IAAII,EAAgB,EAChB1F,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAACnB,GACnC,OAAKA,EAAKe,QAIH,2BAAIf,GAAX,IAAiBS,UAAU,KAHzBiH,IACO,2BAAI1H,GAAX,IAAiBS,UAAU,QAU/B,OANA,EAAKkC,SAAS,CACZ+E,cAAeA,EACfD,SAAUzF,EACV4F,WAAY,YACZ5F,MAAOA,EAAM6F,QAAO,SAAA7H,GAAI,OAAKA,EAAK8H,aAE7B9F,GAwRK,EAtRduF,iBAAmB,WACjB,IAAIG,EAAgB,EAChB1F,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAACnB,GACnC,OAAIA,EAAK2F,WACP+B,IACO,2BAAI1H,GAAX,IAAiBS,UAAU,KAEtB,2BAAIT,GAAX,IAAiBS,UAAU,OAQ7B,OANA,EAAKkC,SAAS,CACZ+E,cAAeA,EACfD,SAAUzF,EACV4F,WAAY,YACZ5F,MAAOA,EAAM6F,QAAO,SAAA7H,GAAI,OAAKA,EAAK8H,aAE7B9F,GAuQK,EArQdwF,mBAAqB,WACnB,IAAIE,EAAgB,EAChB1F,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAACnB,GACnC,OAAKA,EAAK2F,UAIH,2BAAI3F,GAAX,IAAiBS,UAAU,KAHzBiH,IACO,2BAAI1H,GAAX,IAAiBS,UAAU,QAW/B,OAPA,EAAKkC,SAAS,CACZ+E,cAAeA,EACfD,SAAUzF,EACV4F,WAAY,cACZ5F,MAAOA,EAAM6F,QAAO,SAAA7H,GAAI,OAAKA,EAAK8H,aAG7B9F,GAqPK,EAnPd+F,sBAAwB,SAAC3G,GACvB,EAAK6B,qBACL,IAAMjB,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAAAnB,GAClC,OAAIA,EAAKS,SACHT,EAAKkB,OAAOI,SAASF,EAAMG,IACtB,2BAAIvB,GAAX,IAAiBkB,OAAQ,EAAK8G,YAAYhI,EAAMoB,EAAMG,MAE/C,2BAAIvB,GAAX,IAAiBkB,OAAQ,EAAK+G,SAASjI,EAAMoB,EAAMG,MAG9CvB,KAIb,EAAK2C,SAAS,CACZuF,aAAc,6BACdC,aAAa,EACbV,SAAUzF,EACVA,MAAOA,KAiOG,EA9NdiB,mBAAqB,WACnB,EAAKN,SAAS,CAACwF,aAAa,EAAOC,SAAS,EAAOtB,gBAAgB,EAAOE,iBAAiB,KA6N/E,EA3NdtC,cAAgB,SAAC2D,EAAMjH,GACjBiH,EAAKnH,OAAOI,SAASF,EAAMG,IAC7B8G,EAAKnH,OAAS,EAAK8G,YAAYK,EAAMjH,EAAMG,IAE3C8G,EAAKnH,OAAS,EAAK+G,SAASI,EAAMjH,EAAMG,IAE1C,EAAK0B,qBACL,IAAMjB,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAAAnB,GAClC,OAAIA,EAAKuB,KAAO8G,EAAK9G,GACZ8G,EAEArI,KAKb,EAAK2C,SAAS,CACZuF,aAAc,6BACdC,aAAa,EACbG,YAAaD,EACbZ,SAAUzF,EACVA,MAAOA,KAsMG,EAnMd7B,cAAgB,SAACkI,GACf,IAAMrG,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAAAnB,GACpC,OAAIA,EAAKuB,KAAO8G,EAAK9G,GACZ8G,EAEArI,KAGX,EAAK2C,SAAS,CACZuF,aAAc,4BACdC,aAAa,EACbV,SAAUzF,EACVA,MAAOA,KAuLG,EAnLdwB,aAAe,SAAC6E,GACd,EAAKpF,qBACL,IAAMjB,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAAAnB,GACpC,OAAIA,EAAKuB,KAAO8G,EAAK9G,GACZ8G,EAEArI,KAGX,EAAK2C,SAAS,CACZuF,aAAc,4BACdC,aAAa,EACbG,YAAaD,EACbZ,SAAUzF,EACVA,MAAOA,KAqKG,EAhKd2C,aAAe,SAAC0D,GACd,IAAIX,EAAgB,EACd1F,EAAQ,EAAKsB,MAAMmE,SAAStG,KAAI,SAAAnB,GAIlC,OAHIA,EAAKS,UACPiH,IAEEW,EAAK9G,KAAOvB,EAAKuB,IACfvB,EAAKS,UACPiH,IAEK,2BAAI1H,GAAX,IAAiB8H,SAAS,KAEnB9H,KAIb,EAAK2C,SAAS,CACZuF,aAAc,4BACdC,aAAa,EACbV,SAAUzF,EACVsG,YAAa,KACbZ,cAAeA,EACf1F,MAAOA,EAAM6F,QAAO,SAAC7H,GAAD,OAAWA,EAAK8H,cA0I1B,EAtIdS,cAAgB,WACd,OAAOC,IAAQrH,KAAI,SAAC0G,EAAQxG,GAAT,OACjB,wBAAIG,IAAKH,EAAOX,QAAS,WACvB,IAAM+H,EAAc,EAAKnF,MAAMmE,SAASI,QAAO,SAAA7H,GAC7C,OAAkB,IAAd6H,EAAOtG,IAAYvB,EAAKe,SAEH,IAAd8G,EAAOtG,IAAYvB,EAAK2F,WAEV,IAAdkC,EAAOtG,IAAYvB,EAAK2F,WAEV,IAAdkC,EAAOtG,IAAYvB,EAAK2F,WAEV,IAAdkC,EAAOtG,IAAYvB,EAAKgB,WAEV,IAAd6G,EAAOtG,IAAYvB,EAAK8H,QAT1B9H,KAaX,EAAK2C,SAAS,CACZ+F,QAAQ,EACRJ,YAAa,KACbT,OAAQA,EAAOtG,GACfS,MAAOyG,IAETE,YAAW,WACT,EAAKhG,SAAS,CAAC+F,QAAQ,MACtB,QAGH,0BAAM/I,UAAS,kBAAakI,EAAOtG,KAAO,EAAK+B,MAAMsF,kBAAoB,SAAW,KAClF,uBAAGjJ,UAAS,oBAAekI,EAAOgB,QAClC,8BAAOhB,EAAO5G,aAuGR,EAlGd6H,aAAe,WACb,OAAO5H,IAAOC,KAAI,SAACC,EAAOC,GAAR,OAChB,wBAAIG,IAAKH,EAAOX,QAAS,WACvB,IAAM+H,EAAc,EAAKnF,MAAMmE,SAASI,QAAO,SAAA7H,GAAI,OAAIA,EAAKkB,OAAOI,SAASF,EAAMG,OAClF,EAAKoB,SAAS,CACZ+F,QAAQ,EACRJ,YAAa,KACbtG,MAAOyG,IAETE,YAAW,WACT,EAAKhG,SAAS,CAAC+F,QAAQ,MACtB,QAGH,0BAAM/I,UAAU,WACd,uBAAGA,UAAS,gCAA2ByB,EAAMb,SAC7C,8BAAOa,EAAMH,aAkFP,EA7Ed8H,YAAc,WACZ,OAAO,yBAAKpJ,UAAU,eACpB,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,eACb,uBAAGA,UAAU,yBACb,8BAAM,kBAAC,IAAD,CAAc4B,GAAG,8BAI3B,yBAAK5B,UAAU,uBACb,kBAAC,IAAD,CAAkBA,UAAU,+BACVC,MAAO,CAACuC,OAAQ,EAAKM,MAAMR,OAAS,KAAO,sBAAwB,uBACnF,yBAAKtC,UAAU,mBACb,kBAAC,IAAD,CAAQqJ,QAAQ,YAAYzI,MAAM,UAAUZ,UAAU,4BAC9Ce,QAAS,WACP,EAAKiC,SAAS,CAACyF,SAAS,MAFlC,IAGY,kBAAC,IAAD,CAAc7G,GAAG,iBAH7B,MAKF,wBAAI5B,UAAU,cAEZ,wBAAIe,QAAS,WACX,EAAKiC,SAAS,CACZ2F,YAAa,KACbtG,MAAO,EAAKsB,MAAMmE,aAIpB,0BAAM9H,UAAU,WACd,uBAAGA,UAAU,mBACb,8BAAM,kBAAC,IAAD,CAAc4B,GAAG,gBAI3B,wBAAI5B,UAAU,oBACZ,kBAAC,IAAD,CAAc4B,GAAG,kBAGlB,EAAKgH,gBAEN,wBAAI5I,UAAU,oBACZ,kBAAC,IAAD,CAAc4B,GAAG,iBAGlB,EAAKuH,oBAkCF,EA3BdG,WAAa,SAACC,GACZ,GAAmB,KAAfA,EACF,EAAKvG,SAAS,CAACX,MAAO,EAAKsB,MAAMmE,SAASI,QAAO,SAAC7H,GAAD,OAAWA,EAAK8H,iBAC5D,CACL,IAAMqB,EAAc,EAAK7F,MAAMmE,SAASI,QAAO,SAAC7H,GAAD,OAC5CA,EAAK8H,SAAW9H,EAAKiB,MAAMmI,cAAcC,QAAQH,EAAWE,gBAAkB,KACjF,EAAKzG,SAAS,CACZX,MAAOmH,MAoBC,EAhBdG,UAAY,YAA+C,IAA7ChB,EAA4C,EAA5CA,YAAatG,EAA+B,EAA/BA,MAAOK,EAAwB,EAAxBA,aAAcjC,EAAU,EAAVA,KAC9C,OAAuB,OAAhBkI,EACL,kBAAC,IAAD,CAAUtG,MAAOA,EAAOyE,UAAW,EAAKA,UAC9BtG,cAAe,EAAKA,cAAc6E,KAAnB,gBACf/C,MAAO,EAAKQ,MAAMR,MAClBhC,aAAc,EAAKA,aAAa+E,KAAlB,gBACd9E,cAAe,EAAKA,cAAc8E,KAAnB,gBAA+BuE,eAAe,IAEvE,kBAAC,IAAD,CAAYvJ,KAAMsI,EAAalI,KAAMA,EACzB6B,MAAO,EAAKQ,MAAMR,MAClBI,aAAcA,EACdqC,cAAe,EAAKA,cAAcM,KAAnB,gBACfxB,aAAc,EAAKA,aAAawB,KAAlB,gBACdL,aAAc,EAAKA,aAAaK,KAAlB,mBAK5B,EAAK1B,MAAQ,CACX2F,WAAY,GACZf,aAAc,GACdQ,QAAQ,EACRP,aAAa,EACbqB,aAAa,EACb5B,WAAY,OACZ/E,SAAU,KACV4E,SAAUzF,IACVsG,YAAa,KACblI,KAAM,CACJuB,KAAM,iBACN8H,MAAO,6BACPnF,OAAQ,uCAEVoD,cAAe,EACfZ,gBAAgB,EAChBE,iBAAiB,EACjBhF,MAAOA,IACP6F,QAAS,EACT6B,qBACArH,aAAc,MAvBJ,E,gEA4BMd,GAClB,OAAOmI,IAAiB9E,MAAK,SAACvC,GAAD,OAAkBA,EAAad,KAAOA,O,oCAGvD8G,GACZA,EAAK5H,UAAY4H,EAAK5H,SACtB,IAAIiH,EAAgB,EACd1F,EAAQmC,KAAKb,MAAMtB,MAAMb,KAAI,SAAAnB,GAI/B,OAHIA,EAAKS,UACPiH,IAEE1H,EAAKuB,KAAO8G,EAAK9G,IACfvB,EAAKS,UACPiH,IAEKW,GAEArI,KAIbmE,KAAKxB,SAAS,CACZ+E,cAAeA,EACf1F,MAAOA,M,wCAKSmC,KAAKb,MAAMoE,cAAgBvD,KAAKb,MAAMtB,MAAM2F,OAE5DxD,KAAKgD,aAELhD,KAAKiD,yB,gCAICiB,GACRlE,KAAKxB,SACH,CACEX,MAAOmC,KAAKb,MAAMmE,SAASpD,OAAOgE,GAClCZ,SAAUtD,KAAKb,MAAMmE,SAASpD,OAAOgE,O,mCAK9BrI,GAAO,IAAD,OACb2J,EAAmBxF,KAAKyF,oBAAoB5J,EAAKuB,IAEnDoI,EADEA,EACiBA,EAAiBE,iBAEjB,GAErB1F,KAAKxB,SAAS,CACZ2F,YAAatI,EACb0I,QAAQ,EACRrG,aAAcsH,IAEhBhB,YAAW,WACT,EAAKhG,SAAS,CAAC+F,QAAQ,MACtB,Q,kCAGO1I,EAAMoB,GAEhB,OADApB,EAAKkB,OAAO4I,OAAO9J,EAAKkB,OAAOmI,QAAQjI,GAAQ,GACxCpB,EAAKkB,S,+BAGLlB,EAAMoB,GAEb,OADApB,EAAKkB,OAASlB,EAAKkB,OAAOmD,OAAOjD,GAC1BpB,EAAKkB,S,uCAIZiD,KAAKxB,SAAS,CACZ6G,aAAcrF,KAAKb,MAAMkG,gB,mCAIhB/E,GACXN,KAAKxB,SAAS,CACZsG,WAAYxE,EAAIT,OAAOnD,QAEzBsD,KAAK8E,WAAWxE,EAAIT,OAAOnD,S,+BAGnB,IAAD,SAC2DsD,KAAKb,MAAhEoE,EADA,EACAA,cAAegB,EADf,EACeA,OAAQ1G,EADvB,EACuBA,MAAOkG,EAD9B,EAC8BA,aAAcC,EAD5C,EAC4CA,YAEnD,OACE,yBAAKxI,UAAU,eACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CACE4F,KAAMpB,KAAKb,MAAMkG,YACjBhE,QAASrB,KAAK4F,eAAe/E,KAAKb,OACjCA,KAAK4E,gBAGV,yBAAKpJ,UAAU,uCACZwE,KAAK4E,eAGR,yBAAKpJ,UAAU,cACb,yBAAKA,UAAU,qBAEb,kBAAC,IAAD,CAAYA,UAAU,+BAA+B0G,aAAW,OACpD3F,QAASyD,KAAK4F,eAAe/E,KAAKb,OAC5C,uBAAGxE,UAAU,oBAEf,kBAAC,IAAD,CAAiBoG,YAAY,eAAe3F,KAAM+D,KAAKb,MAAMlD,KAC5C2E,SAAUZ,KAAK6F,aAAahF,KAAKb,MACjCtD,MAAOsD,KAAKb,MAAM2F,cAErC,yBAAKtJ,UAAU,sBACe,OAA3BwE,KAAKb,MAAMgF,YACV,yBAAK3I,UAAU,4DACb,kBAAC,IAAD,CAAUY,MAAM,UACN0J,cAAevC,EAAgB,GAAKA,EAAgB1F,EAAM2F,OAC1DnH,QAASkH,EAAgB,EACzB3C,SAAUZ,KAAK+F,gBAAgBlF,KAAKb,MACpCtD,MAAM,eAEhB,yBAAKlB,UAAU,4BAA4Be,QAASyD,KAAK4C,mBAAmB/B,KAAKb,OAC/E,0BAAMxE,UAAU,QAAhB,IAAyBwE,KAAKb,MAAMsE,YACpC,kBAAC,IAAD,CAAYjI,UAAU,eACpB,uBAAGA,UAAU,2BAIf+H,EAAgB,GAClB,kBAAC,IAAD,CAAY/H,UAAU,WACVe,QAASyD,KAAK0C,cAAc7B,KAAKb,OAC3C,uBAAGxE,UAAU,0BAIjB,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAYA,UAAU,WACVe,QAAS,WACP,EAAKiC,SAAS,CACZ2F,YAAa,SAG3B,uBAAG3I,UAAU,2BAMnB,kBAAC,IAAD,CAAM4B,GAAG,cACHsB,SAAUsB,KAAKb,MAAMT,SACrB0C,KAAMpB,KAAKb,MAAM0D,gBACjBxB,QAASrB,KAAKlB,mBAEdwC,cAAe,CACb7F,MAAO,CACLqC,MAAO,OAGdkI,IAAQhJ,KAAI,SAAA+F,GAAM,OACjB,kBAAC,IAAD,CAAU1F,IAAK0F,EAAOjG,MACZP,QAAS,EAAKuG,uBAAuBjC,KAAK,EAAMkC,IACvDA,EAAOjG,WAKd,kBAAC,IAAD,CAAMM,GAAG,aACHsB,SAAUsB,KAAKb,MAAMT,SACrB0C,KAAMpB,KAAKb,MAAMwD,eACjBtB,QAASrB,KAAKlB,mBAEdwC,cAAe,CACb7F,MAAO,CACLqC,MAAO,OAGdf,IAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,IAAD,CAAUI,IAAKJ,EAAMG,GACXb,QAAS,EAAKqH,sBAAsB/C,KAAK,EAAM5D,IACtDA,EAAMH,WAKZyH,EACC,yBAAK/I,UAAU,cACVC,MAAO,CAACuC,OAAQgC,KAAK1B,MAAMR,OAAS,KAAO,sBAAwB,wBACtE,kBAAC,IAAD,OAEFkC,KAAKmF,UAAUnF,KAAKb,UAK5B,kBAAC,IAAD,CACE8G,aAAc,CAACC,SAAU,MAAOC,WAAY,UAC5C/E,KAAM4C,EACNoC,iBAAkB,IAClB/E,QAASrB,KAAKlB,mBACduH,aAAc,CACZ,mBAAoB,cAEtBjI,QAAS,0BAAMhB,GAAG,cAAc2G,W,GAzmBzB3B,aAqnBJkE,uBAJS,SAAC,GAEvB,MAAO,CAACxI,MAF8B,EAAdyI,SACjBzI,SAGMwI,CAAyBjE,I,mHCtoBlCmE,EAAkB,SAAClI,GAAW,IAAD,EAECmI,oBAAS,GAFV,mBAE1BC,EAF0B,KAEfC,EAFe,OAGKF,oBAAS,GAHd,mBAG1BG,EAH0B,KAGbC,EAHa,KAS3BC,EAAS,WACbD,GAAgBD,IAGXhF,EAA0DtD,EAA1DsD,YAAahB,EAA6CtC,EAA7CsC,SAAUlE,EAAmC4B,EAAnC5B,MAAOT,EAA4BqC,EAA5BrC,KAAM8K,EAAsBzI,EAAtByI,aAAcC,EAAQ1I,EAAR0I,KAEzD,OACE,yBAAKxL,UAAU,2BACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,wBAAwByL,KAAK,SAASrF,YAAaA,EAC7DhB,SAAUA,EACVlE,MAAOA,IACd,4BAAQlB,UAAU,eAAc,uBAAGA,UAAU,mCAIjD,kBAAC,IAAD,CAASA,UAAU,MAAM0L,UAAU,SAASC,OAAQP,EAAa/G,OAAO,WAC/DiH,OAAQA,GACf,4BAAK7K,EAAKuB,MACV,4BAAKvB,EAAKqJ,QAGZ,yBAAK9J,UAAU,4BACb,kBAAC,IAAD,CACEA,UAAU,2BACV2L,OAAQT,EACRI,OA/BkB,WACxBH,GAAcD,KAgCR,kBAAC,IAAD,CACElL,UAAU,iBACV4L,IAAI,OACJC,cAAY,YACZ,kBAAC,IAAD,CAAY7L,UAAU,YACpB,uBAAGA,UAAU,4CAIjB,kBAAC,IAAD,CAAcA,UAAU,OACtB,kBAAC,IAAD,CAAW8L,UAAU,kBAAkB1F,YAAY,GACxChB,SAAUA,EACVlE,MAAOA,OAKxB,yBAAKlB,UAAU,2BACZwL,GAAQ,kBAAC,IAAD,CAAYxL,UAAU,UAAU0G,aAAW,QAClD,uBAAG1G,UAAU,oBAEduL,GAAgB,kBAAC,IAAD,CAAYvL,UAAU,UAAU0G,aAAW,QAC1D,uBAAG1G,UAAU,kCAGf,yBAAKA,UAAU,sCAAsC4B,GAAG,WAAWG,IAAKtB,EAAKuB,KACxE+J,aAAcT,EACdU,aAAcV,EACdvK,QAASuK,EACTrJ,IAAKxB,EAAKkE,YAMRqG,MAEfA,EAAgBiB,aAAe,CAC7BH,UAAW,GACX5K,MAAO,GACPqK,cAAc,EACdC,MAAM,I,iCCrFO,KACb,CACE,GAAM,EACN,OAAU,WACV,MAAS,OACT,MAAS,oBAEX,CACE,GAAM,EACN,OAAU,UACV,MAAS,MACT,MAAS,kBAEX,CACE,GAAM,EACN,OAAU,MACV,MAAS,UACT,MAAS,kBAEX,CACE,GAAM,EACN,OAAU,QACV,MAAS,UACT,MAAS,yB,iCCvBE,KACb,CACE,GAAM,EACN,KAAQ,eACR,MAAS,uCACR,CACD,GAAM,EACN,KAAQ,gBACR,MAAS,uCACR,CACD,GAAM,EACN,KAAQ,eACR,MAAS,uCACR,CACD,GAAM,EACN,KAAQ,iBACR,MAAS,uCACR,CACD,GAAM,EACN,KAAQ,aACR,MAAS,uCACR,CACD,GAAM,EACN,KAAQ,eACR,MAAS,yC,iCCxBE,KAEb,CACE,GAAM,EACN,OAAU,UACV,MAAS,UACT,KAAQ,QAEV,CACE,GAAM,EACN,OAAU,YACV,MAAS,WACT,KAAQ,QAEV,CACE,GAAM,EACN,OAAU,UACV,MAAS,WACT,KAAQ,QAEV,CACE,GAAM,EACN,OAAU,QACV,MAAS,QACT,KAAQ,YAEV,CACE,GAAM,EACN,OAAU,YACV,MAAS,OACT,KAAQ,SAEV,CACE,GAAM,EACN,OAAU,UACV,MAAS,UACT,KAAQ,Y,iCCpCG,KACb,CACE,MAAS,OAEX,CACE,MAAS,QAEX,CACE,MAAS,WAEX,CACE,MAAS,aAEX,CACE,MAAS,aAEX,CACE,MAAS","file":"static/js/90.763bc4a0.chunk.js","sourcesContent":["import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport {SortableElement, SortableHandle} from 'react-sortable-hoc';\r\n\r\nimport labels from 'app/routes/todo/data/labels'\r\nimport users from 'app/routes/todo/data/users'\r\n// This can be any component you want\r\nconst DragHandle = SortableHandle(() =>\r\n  <i className=\"zmdi zmdi-menu draggable-icon d-none d-sm-flex\" style={{fontSize: 25}}/>);\r\n\r\n\r\nconst ToDoItem = SortableElement(({todo, onTodoSelect, onTodoChecked, onMarkAsStart}) => {\r\n  let user = null;\r\n  if (todo.user > 0)\r\n    user = users[todo.user - 1];\r\n  return (\r\n    <div className=\"module-list-item\">\r\n      <div className=\"module-list-icon\">\r\n            <span className=\"bar-icon\">\r\n              <DragHandle/>\r\n            </span>\r\n\r\n        <Checkbox color=\"primary\"\r\n                  checked={todo.selected}\r\n                  onClick={(event) => {\r\n                    event.stopPropagation();\r\n                    onTodoChecked(todo);\r\n                  }}\r\n                  value=\"SelectTodo\"\r\n        />\r\n\r\n        <IconButton className=\"icon-btn\" onClick={() => {\r\n          todo.starred = !todo.starred;\r\n          onMarkAsStart(todo);\r\n        }}>\r\n          {todo.starred ?\r\n            <i className=\"zmdi zmdi-star\"/> :\r\n            <i className=\"zmdi zmdi-star-outline\"/>\r\n          }\r\n\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"module-list-info\" onClick={() => {\r\n        onTodoSelect(todo);\r\n      }}>\r\n        <div className=\"row\">\r\n          <div className=\"module-todo-content col-9 col-sm-10 col-md-11\">\r\n            <div className={`subject ${todo.completed && 'text-muted text-strikethrough'}`}>\r\n              {todo.title}\r\n            </div>\r\n            <div className=\"manage-margin\">\r\n              {labels.map((label, index) => {\r\n                return (todo.labels).includes(label.id) &&\r\n                  <div key={index}\r\n                       className={`badge text-white bg-${label.color}`}>{label.title}</div>\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"module-todo-right col-3 col-sm-2 col-md-1\">\r\n            <div className=\"d-flex flex-row-reverse\">\r\n              {user === null ? <Avatar>U</Avatar>\r\n                : <Avatar alt={user.name}\r\n                          src={user.thumb}/>}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n});\r\n\r\nexport default ToDoItem;","import React from 'react';\r\nimport {SortableContainer} from 'react-sortable-hoc';\r\nimport ToDoItem from './ToDoItem';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nconst ToDoList = SortableContainer(({toDos, onTodoSelect, onTodoChecked, onMarkAsStart, width}) => {\r\n  return (\r\n    <div className=\"module-list\">\r\n      <CustomScrollbars className=\"module-list-scroll scrollbar\"\r\n                        style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n        {toDos.map((todo, index) =>\r\n          <ToDoItem key={index} index={index} todo={todo} onTodoSelect={onTodoSelect}\r\n                    onMarkAsStart={onMarkAsStart}\r\n                    onTodoChecked={onTodoChecked}/>\r\n        )}\r\n      </CustomScrollbars>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\nconst ConversationCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex module-detail-item\">\r\n      <div className=\"chat-todo-avatar\">\r\n\r\n        <img className=\"rounded-circle avatar size-40\" src={conversation.thumb}\r\n             alt=\"...\"/>\r\n      </div>\r\n      <div className=\"chat-toto-info\">\r\n        <div className=\"d-flex  flex-column\">\r\n          <div className=\"name mr-2\">{conversation.name}</div>\r\n          <div className=\"time text-muted\">{conversation.sentAt}</div>\r\n        </div>\r\n        <div className=\"message\">{conversation.message}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ConversationCell;","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Input from '@material-ui/core/Input'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport labels from 'app/routes/todo/data/labels';\r\nimport {DatePicker} from '@material-ui/pickers';\r\nimport users from 'app/routes/todo/data/users'\r\nimport Moment from 'moment';\r\nimport ConversationCell from './ConversationCell';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\n\r\nclass ToDoDetail extends React.Component {\r\n  handleLabelClick = event => {\r\n    this.setState({labelMenu: true, anchorEl: event.currentTarget});\r\n  };\r\n  handleUserClick = event => {\r\n    this.setState({userMenu: true, anchorEl: event.currentTarget});\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({userMenu: false, labelMenu: false});\r\n  };\r\n\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.submitComment();\r\n    }\r\n  };\r\n\r\n  handleEditTitle = () => {\r\n    if (this.state.editTitle) {\r\n      const todo = this.state.todo;\r\n      todo.title = this.state.title;\r\n      this.props.onToDoUpdate(todo)\r\n    }\r\n    this.setState({\r\n      editTitle: !this.state.editTitle\r\n    });\r\n  };\r\n  handleEditNote = () => {\r\n    if (this.state.note) {\r\n      const todo = this.state.todo;\r\n      todo.note = this.state.note;\r\n      this.props.onToDoUpdate(todo)\r\n    }\r\n    this.setState({\r\n      editNote: !this.state.editNote\r\n    });\r\n  };\r\n  handleDueDateChange = (date) => {\r\n    this.setState({\r\n      todo: {...this.state.todo, dueDate: date}\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {title, notes} = props.todo;\r\n    const {conversation} = props;\r\n    this.state = {\r\n      todo: props.todo,\r\n      title,\r\n      notes,\r\n      anchorEl: undefined,\r\n      userMenu: false,\r\n      labelMenu: false,\r\n      editTitle: false,\r\n      editNote: false,\r\n      message: '',\r\n      conversation\r\n    };\r\n  }\r\n\r\n  submitComment() {\r\n    if (this.state.message !== '') {\r\n      const updatedConversation = this.state.conversation.concat({\r\n        'name': this.props.user.name,\r\n        'thumb': this.props.user.avatar,\r\n        'message': this.state.message,\r\n        'sentAt': Moment().format('ddd DD, YYYY, hh:mm:ss A'),\r\n      });\r\n      this.setState({\r\n        conversation: updatedConversation,\r\n        message: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  updateMessageValue(evt) {\r\n    this.setState({\r\n      message: evt.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {onToDoUpdate, onLabelUpdate, onDeleteToDo, width} = this.props;\r\n    const {todo, editNote, editTitle, title, notes, message, conversation} = this.state;\r\n    let user = null;\r\n    if (todo.user > 0)\r\n      user = users.find((user) => user.id === todo.user);\r\n    return (\r\n      <div className=\"module-detail module-list\">\r\n        <CustomScrollbars className=\"module-list-scroll scrollbar\"\r\n                          style={{height: width >= 1200 ? 'calc(100vh - 335px)' : 'calc(100vh - 311px)'}}>\r\n\r\n          <div className=\"module-detail-item module-detail-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6 col-md-8\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <div className=\"user-name mr-md-4 mr-2\"\r\n                       onClick={this.handleUserClick}>\r\n\r\n                    {user === null ? <h4 className=\"mb-0 mouse pointer\">Assign User </h4> :\r\n                      <div className=\"d-flex align-items-center pointer\">\r\n                        <Avatar className=\"mr-2\" src={user.thumb} alt={user.name}/>\r\n                        <h4 className=\"mb-0\">{user.name}</h4>\r\n                      </div>}\r\n                  </div>\r\n                  <DatePicker className=\"module-date\"\r\n                              value={todo.dueDate}\r\n                              invalidLabel=\"Due Date\"\r\n                              onChange={this.handleDueDateChange.bind(this)}\r\n                              animateYearScrolling={false}\r\n                              leftArrowIcon={<i className=\"zmdi zmdi-arrow-back\"/>}\r\n                              rightArrowIcon={<i className=\"zmdi zmdi-arrow-forward\"/>}\r\n                              InputProps={{\r\n                                endAdornment: (\r\n                                  <IconButton className=\"icon-btn\">\r\n                                    <i className=\"zmdi zmdi-calendar\"/>\r\n                                  </IconButton>\r\n                                ),\r\n                              }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-6 col-md-4\">\r\n                <div\r\n                  className=\"d-flex flex-sm-row-reverse justify-content-between justify-content-sm-start\">\r\n                  <Menu\r\n                    id=\"label-menu\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.userMenu}\r\n                    onClose={this.handleRequestClose}\r\n\r\n                    MenuListProps={{\r\n                      style: {\r\n                        width: 180,\r\n                      },\r\n                    }}>\r\n\r\n                    {users.map((user, index) =>\r\n                      <MenuItem key={index} value={user.id} onClick={() => {\r\n                        this.handleRequestClose();\r\n                        todo.user = user.id;\r\n                        onToDoUpdate(todo)\r\n                      }}>\r\n                        <div className=\"d-flex user-name manage-margin align-items-center\">\r\n                          <Avatar src={user.thumb} alt={user.name}/><h4>{user.name}</h4>\r\n                        </div>\r\n                      </MenuItem>\r\n                    )}\r\n\r\n                  </Menu>\r\n\r\n                  <IconButton className=\"icon-btn\" onClick={() => {\r\n                    onDeleteToDo(todo);\r\n                  }}>\r\n                    <i className=\"zmdi zmdi-delete\"/>\r\n                  </IconButton>\r\n\r\n                  <IconButton className=\"icon-btn\" onClick={() => {\r\n                    todo.starred = !todo.starred;\r\n                    onToDoUpdate(todo);\r\n                  }}>\r\n                    {todo.starred ?\r\n                      <i className=\"zmdi zmdi-star\"/> :\r\n                      <i className=\"zmdi zmdi-star-outline\"/>\r\n                    }\r\n\r\n                  </IconButton>\r\n\r\n                  <IconButton className=\"icon-btn\" onClick={() => {\r\n                    todo.important = !todo.important;\r\n                    onToDoUpdate(todo);\r\n                  }}>\r\n                    {todo.important ?\r\n                      <i className=\"zmdi zmdi-info\"/> :\r\n                      <i className=\"zmdi zmdi-info-outline\"/>\r\n                    }\r\n\r\n                  </IconButton>\r\n                  <IconButton className=\"icon-btn\" onClick={this.handleLabelClick}>\r\n                    <i className=\"zmdi zmdi-label-alt\"/>\r\n                  </IconButton>\r\n\r\n                  <Menu id=\"label-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.labelMenu}\r\n                        onClose={this.handleRequestClose}\r\n\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {labels.map(label =>\r\n                      <MenuItem key={label.id} onClick={() => {\r\n                        this.handleRequestClose();\r\n                        onLabelUpdate(todo, label)\r\n                      }}>\r\n                        {label.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"module-detail-item\">\r\n\r\n            <div className=\"labels mb-4\">\r\n              {labels.map((label, index) => {\r\n                return (todo.labels).includes(label.id) && <div key={index}\r\n                                                                className={`badge text-white bg-${label.color}`}>{label.title}</div>\r\n              })}\r\n            </div>\r\n\r\n            <div className=\"form-group d-flex align-items-center mb-0\">\r\n              <IconButton className=\"icon-btn p-1\" onClick={(event) => {\r\n                todo.completed = !todo.completed;\r\n                onToDoUpdate(todo);\r\n              }}>\r\n                {todo.completed ?\r\n                  <span className=\"border-2 size-30 rounded-circle text-green border-green\">\r\n                                        <i className=\"zmdi zmdi-check\"/></span>\r\n                  : <span className=\"border-2 size-30 w-2 rounded-circle text-muted border-grey\">\r\n                                        <i className=\"zmdi zmdi-check\"/>\r\n                                    </span>\r\n                }\r\n              </IconButton>\r\n              {editTitle ? <div className=\"d-flex align-items-center w-100\">\r\n                  <div className=\"col\">\r\n                    <Input\r\n                      fullWidth\r\n                      multiline className=\"task-title\"\r\n                      id=\"required\"\r\n                      placeholder=\"Title\"\r\n                      onChange={(event) => this.setState({title: event.target.value})}\r\n                      defaultValue={title}/>\r\n                  </div>\r\n\r\n                  <IconButton onClick={this.handleEditTitle}>\r\n                    <i className=\"zmdi zmdi-check\"/>\r\n                  </IconButton>\r\n                </div> :\r\n                <div className=\"d-flex align-items-center w-100\">\r\n                  <div className=\"task-title col\">\r\n                    {title}\r\n                  </div>\r\n                  <IconButton className=\"icon-btn\" onClick={this.handleEditTitle}>\r\n                    <i className=\"zmdi zmdi-edit\"/>\r\n                  </IconButton>\r\n\r\n                </div>}\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"module-detail-item mb-4\">\r\n            {editNote ? <div className=\"d-flex align-items-center w-100\">\r\n                <Input\r\n                  fullWidth\r\n                  id=\"required\"\r\n                  multiline\r\n                  placeholder=\"Note\"\r\n                  onChange={(event) => this.setState({notes: event.target.value})}\r\n                  defaultValue={notes}/>\r\n\r\n                <IconButton className=\"icon-btn\" onClick={this.handleEditNote}>\r\n                  <i className=\"zmdi zmdi-check\"/>\r\n                </IconButton>\r\n              </div> :\r\n              <div className=\"d-flex align-items-center w-100\">\r\n                <div className=\"task-des col px-0\">\r\n                  {notes}\r\n                </div>\r\n                <IconButton className=\"icon-btn\" onClick={this.handleEditNote}>\r\n                  <i className=\"zmdi zmdi-edit\"/>\r\n                </IconButton>\r\n\r\n              </div>}\r\n          </div>\r\n          <div className=\"module-detail-item\">\r\n            <h3>Publication Requests</h3>\r\n          </div>\r\n          {conversation.map((conversation, index) =>\r\n            <ConversationCell key={index} conversation={conversation}/>\r\n          )}\r\n\r\n\r\n        </CustomScrollbars>\r\n\r\n        <div className=\"chat-main-footer todo-main-footer\">\r\n          <div className=\"d-flex flex-row align-items-center\" style={{maxHeight: 61}}>\r\n            <div className=\"col\">\r\n              <div className=\"form-group\">\r\n                                <textarea className=\"border-0 form-control chat-textarea\"\r\n                                          id=\"required\"\r\n                                          onKeyUp={this._handleKeyPress.bind(this)}\r\n                                          onChange={this.updateMessageValue.bind(this)}\r\n                                          value={message}\r\n                                          rows={2}\r\n                                          placeholder=\"Type and hit enter to send message\"/>\r\n              </div>\r\n            </div>\r\n            <div className=\"chat-sent\">\r\n              <IconButton\r\n                onClick={this.submitComment.bind(this)}\r\n                aria-label=\"Send message\">\r\n                <i className=\"zmdi  zmdi-mail-send\"/>\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoDetail;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {arrayMove} from 'react-sortable-hoc';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport toDos from '../data/todo';\r\nimport filters from '../data/filters';\r\nimport labels from '../data/labels';\r\nimport options from '../data/options';\r\nimport todoConversation from '../data/todoConversation';\r\nimport ToDoList from 'components/todo/ToDoList';\r\nimport ToDoDetail from 'components/todo/ToDoDetail/index';\r\nimport AppModuleHeader from 'components/AppModuleHeader/index';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\n\r\nclass ToDo extends Component {\r\n\r\n  onSortEnd = ({oldIndex, newIndex}) => {\r\n    this.setState({\r\n      toDos: arrayMove(this.state.toDos, oldIndex, newIndex),\r\n    });\r\n  };\r\n  onLabelSelect = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      labelMenuState: !this.state.labelMenuState\r\n    })\r\n  };\r\n  onOptionMenuSelect = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      optionMenuState: !this.state.optionMenuState\r\n    })\r\n  };\r\n  onOptionMenuItemSelect = (option) => {\r\n    switch (option.title) {\r\n      case 'All':\r\n        this.handleRequestClose();\r\n        this.getAllTodo();\r\n        break;\r\n      case 'None':\r\n        this.handleRequestClose();\r\n        this.getUnselectedAllTodo();\r\n        break;\r\n      case 'Starred':\r\n        this.handleRequestClose();\r\n        this.getStarredToDo();\r\n        break;\r\n      case 'Unstarred':\r\n        this.handleRequestClose();\r\n        this.getUnStarredTodo();\r\n        break;\r\n      case 'Important':\r\n        this.handleRequestClose();\r\n        this.getImportantToDo();\r\n        break;\r\n      case 'Unimportant':\r\n        this.handleRequestClose();\r\n        this.getUnimportantToDo();\r\n        break;\r\n      default:\r\n        this.handleRequestClose();\r\n        this.getAllTodo();\r\n    }\r\n  };\r\n  getAllTodo = () => {\r\n    let toDos = this.state.allToDos.map((todo) => todo ? {\r\n      ...todo,\r\n      selected: true\r\n    } : todo);\r\n    this.setState({\r\n      selectedToDos: toDos.length,\r\n      allToDos: toDos,\r\n      optionName: 'All',\r\n      toDos: toDos\r\n    });\r\n  };\r\n  getUnselectedAllTodo = () => {\r\n    let toDos = this.state.allToDos.map((todo) => todo ? {\r\n      ...todo,\r\n      selected: false\r\n    } : todo);\r\n    this.setState({\r\n      selectedToDos: 0,\r\n      allToDos: toDos,\r\n      optionName: 'None',\r\n      toDos: toDos\r\n    });\r\n  };\r\n  getStarredToDo = () => {\r\n    let selectedToDos = 0;\r\n    let toDos = this.state.allToDos.map((todo) => {\r\n      if (todo.starred) {\r\n        selectedToDos++;\r\n        return {...todo, selected: true};\r\n      }\r\n      return {...todo, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedToDos: selectedToDos,\r\n      allToDos: toDos,\r\n      toDos: toDos.filter(todo => !todo.deleted)\r\n    });\r\n    return toDos;\r\n  };\r\n  getUnStarredTodo = () => {\r\n    let selectedToDos = 0;\r\n    let toDos = this.state.allToDos.map((todo) => {\r\n      if (!todo.starred) {\r\n        selectedToDos++;\r\n        return {...todo, selected: true};\r\n      }\r\n      return {...todo, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedToDos: selectedToDos,\r\n      allToDos: toDos,\r\n      optionName: 'Unstarred',\r\n      toDos: toDos.filter(todo => !todo.deleted)\r\n    });\r\n    return toDos;\r\n  };\r\n  getImportantToDo = () => {\r\n    let selectedToDos = 0;\r\n    let toDos = this.state.allToDos.map((todo) => {\r\n      if (todo.important) {\r\n        selectedToDos++;\r\n        return {...todo, selected: true};\r\n      }\r\n      return {...todo, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedToDos: selectedToDos,\r\n      allToDos: toDos,\r\n      optionName: 'Important',\r\n      toDos: toDos.filter(todo => !todo.deleted)\r\n    });\r\n    return toDos;\r\n  };\r\n  getUnimportantToDo = () => {\r\n    let selectedToDos = 0;\r\n    let toDos = this.state.allToDos.map((todo) => {\r\n      if (!todo.important) {\r\n        selectedToDos++;\r\n        return {...todo, selected: true};\r\n      }\r\n      return {...todo, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedToDos: selectedToDos,\r\n      allToDos: toDos,\r\n      optionName: 'Unimportant',\r\n      toDos: toDos.filter(todo => !todo.deleted)\r\n    });\r\n\r\n    return toDos;\r\n  };\r\n  onLabelMenuItemSelect = (label) => {\r\n    this.handleRequestClose();\r\n    const toDos = this.state.allToDos.map(todo => {\r\n        if (todo.selected) {\r\n          if (todo.labels.includes(label.id)) {\r\n            return {...todo, labels: this.removeLabel(todo, label.id)};\r\n          } else {\r\n            return {...todo, labels: this.addLabel(todo, label.id)};\r\n          }\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      alertMessage: 'Label Updated Successfully',\r\n      showMessage: true,\r\n      allToDos: toDos,\r\n      toDos: toDos\r\n    });\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({showMessage: false, addTodo: false, labelMenuState: false, optionMenuState: false,});\r\n  };\r\n  onLabelUpdate = (data, label) => {\r\n    if (data.labels.includes(label.id)) {\r\n      data.labels = this.removeLabel(data, label.id);\r\n    } else {\r\n      data.labels = this.addLabel(data, label.id);\r\n    }\r\n    this.handleRequestClose();\r\n    const toDos = this.state.allToDos.map(todo => {\r\n        if (todo.id === data.id) {\r\n          return data;\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.setState({\r\n      alertMessage: 'Label Updated Successfully',\r\n      showMessage: true,\r\n      currentTodo: data,\r\n      allToDos: toDos,\r\n      toDos: toDos,\r\n    });\r\n  };\r\n  onMarkAsStart = (data) => {\r\n    const toDos = this.state.allToDos.map(todo => {\r\n      if (todo.id === data.id) {\r\n        return data;\r\n      } else {\r\n        return todo;\r\n      }\r\n    });\r\n    this.setState({\r\n      alertMessage: 'ToDo Updated Successfully',\r\n      showMessage: true,\r\n      allToDos: toDos,\r\n      toDos: toDos,\r\n    });\r\n  };\r\n\r\n  onToDoUpdate = (data) => {\r\n    this.handleRequestClose();\r\n    const toDos = this.state.allToDos.map(todo => {\r\n      if (todo.id === data.id) {\r\n        return data;\r\n      } else {\r\n        return todo;\r\n      }\r\n    });\r\n    this.setState({\r\n      alertMessage: 'ToDo Updated Successfully',\r\n      showMessage: true,\r\n      currentTodo: data,\r\n      allToDos: toDos,\r\n      toDos: toDos,\r\n    });\r\n  };\r\n\r\n\r\n  onDeleteToDo = (data) => {\r\n    let selectedToDos = 0;\r\n    const toDos = this.state.allToDos.map(todo => {\r\n        if (todo.selected) {\r\n          selectedToDos++\r\n        }\r\n        if (data.id === todo.id) {\r\n          if (todo.selected) {\r\n            selectedToDos--\r\n          }\r\n          return {...todo, deleted: true};\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      alertMessage: 'ToDo Deleted Successfully',\r\n      showMessage: true,\r\n      allToDos: toDos,\r\n      currentTodo: null,\r\n      selectedToDos: selectedToDos,\r\n      toDos: toDos.filter((todo) => !todo.deleted)\r\n    });\r\n\r\n  };\r\n  getNavFilters = () => {\r\n    return filters.map((filter, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allToDos.filter(todo => {\r\n          if (filter.id === 0 && todo.starred) {\r\n            return todo\r\n          } else if (filter.id === 1 && todo.important) {\r\n            return todo\r\n          } else if (filter.id === 2 && todo.important) {\r\n            return todo\r\n          } else if (filter.id === 3 && todo.important) {\r\n            return todo\r\n          } else if (filter.id === 4 && todo.completed) {\r\n            return todo\r\n          } else if (filter.id === 5 && todo.deleted) {\r\n            return todo\r\n          } else return todo;\r\n        });\r\n        this.setState({\r\n          loader: true,\r\n          currentTodo: null,\r\n          filter: filter.id,\r\n          toDos: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className={`jr-link ${filter.id === this.state.selectedSectionId ? 'active' : ''}`}>\r\n          <i className={`zmdi zmdi-${filter.icon}`}/>\r\n          <span>{filter.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  getNavLabels = () => {\r\n    return labels.map((label, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allToDos.filter(todo => todo.labels.includes(label.id));\r\n        this.setState({\r\n          loader: true,\r\n          currentTodo: null,\r\n          toDos: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"jr-link\">\r\n          <i className={`zmdi zmdi-circle text-${label.color}`}/>\r\n          <span>{label.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  ToDoSideBar = () => {\r\n    return <div className=\"module-side\">\r\n      <div className=\"module-side-header\">\r\n        <div className=\"module-logo\">\r\n          <i className=\"zmdi zmdi-email mr-4\"/>\r\n          <span><IntlMessages id=\"sidebar.appModule.toDo\"/></span>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"module-side-content\">\r\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\r\n          <div className=\"module-add-task\">\r\n            <Button variant=\"contained\" color=\"primary\" className=\"btn btn-primary btn-block\"\r\n                    onClick={() => {\r\n                      this.setState({addTodo: true})\r\n                    }}> <IntlMessages id=\"todo.addTask\"/> </Button>\r\n          </div>\r\n          <ul className=\"module-nav\">\r\n\r\n            <li onClick={() => {\r\n              this.setState({\r\n                currentTodo: null,\r\n                toDos: this.state.allToDos\r\n              });\r\n            }\r\n            }>\r\n              <span className=\"jr-link\">\r\n                <i className=\"zmdi zmdi-menu\"/>\r\n                <span><IntlMessages id=\"todo.all\"/></span>\r\n              </span>\r\n            </li>\r\n\r\n            <li className=\"module-nav-label\">\r\n              <IntlMessages id=\"todo.filters\"/>\r\n            </li>\r\n\r\n            {this.getNavFilters()}\r\n\r\n            <li className=\"module-nav-label\">\r\n              <IntlMessages id=\"todo.labels\"/>\r\n            </li>\r\n\r\n            {this.getNavLabels()}\r\n\r\n          </ul>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n  };\r\n  searchTodo = (searchText) => {\r\n    if (searchText === '') {\r\n      this.setState({toDos: this.state.allToDos.filter((todo) => !todo.deleted)});\r\n    } else {\r\n      const searchToDos = this.state.allToDos.filter((todo) =>\r\n        !todo.deleted && todo.title.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\r\n      this.setState({\r\n        toDos: searchToDos\r\n      });\r\n    }\r\n  };\r\n  showToDos = ({currentTodo, toDos, conversation, user}) => {\r\n    return currentTodo === null ?\r\n      <ToDoList toDos={toDos} onSortEnd={this.onSortEnd}\r\n                onMarkAsStart={this.onMarkAsStart.bind(this)}\r\n                width={this.props.width}\r\n                onTodoSelect={this.onTodoSelect.bind(this)}\r\n                onTodoChecked={this.onTodoChecked.bind(this)} useDragHandle={true}/>\r\n      :\r\n      <ToDoDetail todo={currentTodo} user={user}\r\n                  width={this.props.width}\r\n                  conversation={conversation}\r\n                  onLabelUpdate={this.onLabelUpdate.bind(this)}\r\n                  onToDoUpdate={this.onToDoUpdate.bind(this)}\r\n                  onDeleteToDo={this.onDeleteToDo.bind(this)}/>\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchTodo: '',\r\n      alertMessage: '',\r\n      loader: false,\r\n      showMessage: false,\r\n      drawerState: false,\r\n      optionName: 'None',\r\n      anchorEl: null,\r\n      allToDos: toDos,\r\n      currentTodo: null,\r\n      user: {\r\n        name: 'Robert Johnson',\r\n        email: 'robert.johnson@example.com',\r\n        avatar: \"https://via.placeholder.com/150x150\"\r\n      },\r\n      selectedToDos: 0,\r\n      labelMenuState: false,\r\n      optionMenuState: false,\r\n      toDos: toDos,\r\n      filter: -1,\r\n      todoConversation,\r\n      conversation: null\r\n    }\r\n  }\r\n\r\n\r\n  getToDoConversation(id) {\r\n    return todoConversation.find((conversation) => conversation.id === id);\r\n  }\r\n\r\n  onTodoChecked(data) {\r\n    data.selected = !data.selected;\r\n    let selectedToDos = 0;\r\n    const toDos = this.state.toDos.map(todo => {\r\n        if (todo.selected) {\r\n          selectedToDos++;\r\n        }\r\n        if (todo.id === data.id) {\r\n          if (todo.selected) {\r\n            selectedToDos++;\r\n          }\r\n          return data;\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      selectedToDos: selectedToDos,\r\n      toDos: toDos\r\n    });\r\n  }\r\n\r\n  onAllTodoSelect() {\r\n    const selectAll = this.state.selectedToDos < this.state.toDos.length;\r\n    if (selectAll) {\r\n      this.getAllTodo();\r\n    } else {\r\n      this.getUnselectedAllTodo();\r\n    }\r\n  }\r\n\r\n  onTodoAdd(data) {\r\n    this.setState(\r\n      {\r\n        toDos: this.state.allToDos.concat(data),\r\n        allToDos: this.state.allToDos.concat(data)\r\n      }\r\n    );\r\n  }\r\n\r\n  onTodoSelect(todo) {\r\n    let conversationList = this.getToDoConversation(todo.id);\r\n    if (conversationList) {\r\n      conversationList = conversationList.conversationData;\r\n    } else {\r\n      conversationList = [];\r\n    }\r\n    this.setState({\r\n      currentTodo: todo,\r\n      loader: true,\r\n      conversation: conversationList\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({loader: false});\r\n    }, 1500);\r\n  }\r\n\r\n  removeLabel(todo, label) {\r\n    todo.labels.splice(todo.labels.indexOf(label), 1);\r\n    return todo.labels;\r\n  }\r\n\r\n  addLabel(todo, label) {\r\n    todo.labels = todo.labels.concat(label);\r\n    return todo.labels\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  updateSearch(evt) {\r\n    this.setState({\r\n      searchTodo: evt.target.value,\r\n    });\r\n    this.searchTodo(evt.target.value)\r\n  }\r\n\r\n  render() {\r\n    const {selectedToDos, loader, toDos, alertMessage, showMessage} = this.state;\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <div className=\"animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"app-module\">\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer\r\n                open={this.state.drawerState}\r\n                onClose={this.onToggleDrawer.bind(this)}>\r\n                {this.ToDoSideBar()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\r\n              {this.ToDoSideBar()}\r\n            </div>\r\n\r\n            <div className=\"module-box\">\r\n              <div className=\"module-box-header\">\r\n\r\n                <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\r\n                            onClick={this.onToggleDrawer.bind(this)}>\r\n                  <i className=\"zmdi zmdi-menu\"/>\r\n                </IconButton>\r\n                <AppModuleHeader placeholder=\"Search To Do\" user={this.state.user}\r\n                                 onChange={this.updateSearch.bind(this)}\r\n                                 value={this.state.searchTodo}/>\r\n              </div>\r\n              <div className=\"module-box-content\">\r\n                {this.state.currentTodo === null ?\r\n                  <div className=\"module-box-topbar module-box-topbar-todo d-flex flex-row\">\r\n                    <Checkbox color=\"primary\"\r\n                              indeterminate={selectedToDos > 0 && selectedToDos < toDos.length}\r\n                              checked={selectedToDos > 0}\r\n                              onChange={this.onAllTodoSelect.bind(this)}\r\n                              value=\"SelectMail\"/>\r\n\r\n                    <div className=\"d-flex align-items-center\" onClick={this.onOptionMenuSelect.bind(this)}>\r\n                      <span className=\"px-2\"> {this.state.optionName}</span>\r\n                      <IconButton className=\"icon-btn-sm\">\r\n                        <i className=\"zmdi zmdi-caret-down\"/>\r\n                      </IconButton>\r\n                    </div>\r\n\r\n                    {(selectedToDos > 0) &&\r\n                    <IconButton className=\"icon-btn\"\r\n                                onClick={this.onLabelSelect.bind(this)}>\r\n                      <i className=\"zmdi zmdi-label-alt\"/>\r\n                    </IconButton>}\r\n                  </div>\r\n                  :\r\n                  <div className=\"module-box-topbar\">\r\n                    <IconButton className=\"icon-btn\"\r\n                                onClick={() => {\r\n                                  this.setState({\r\n                                    currentTodo: null\r\n                                  })\r\n                                }}>\r\n                      <i className=\"zmdi zmdi-arrow-back\"/>\r\n                    </IconButton>\r\n                  </div>\r\n                }\r\n\r\n\r\n                <Menu id=\"option-menu\"\r\n                      anchorEl={this.state.anchorEl}\r\n                      open={this.state.optionMenuState}\r\n                      onClose={this.handleRequestClose}\r\n\r\n                      MenuListProps={{\r\n                        style: {\r\n                          width: 150,\r\n                        },\r\n                      }}>\r\n                  {options.map(option =>\r\n                    <MenuItem key={option.title}\r\n                              onClick={this.onOptionMenuItemSelect.bind(this, option)}>\r\n                      {option.title}\r\n                    </MenuItem>,\r\n                  )}\r\n                </Menu>\r\n\r\n                <Menu id=\"label-menu\"\r\n                      anchorEl={this.state.anchorEl}\r\n                      open={this.state.labelMenuState}\r\n                      onClose={this.handleRequestClose}\r\n\r\n                      MenuListProps={{\r\n                        style: {\r\n                          width: 150,\r\n                        },\r\n                      }}>\r\n                  {labels.map(label =>\r\n                    <MenuItem key={label.id}\r\n                              onClick={this.onLabelMenuItemSelect.bind(this, label)}>\r\n                      {label.title}\r\n                    </MenuItem>,\r\n                  )}\r\n                </Menu>\r\n\r\n                {loader ?\r\n                  <div className=\"loader-view\"\r\n                       style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                    <CircularProgress/>\r\n                  </div> :\r\n                  this.showToDos(this.state)\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Snackbar\r\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n            open={showMessage}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleRequestClose}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">{alertMessage}</span>}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {width} = settings;\r\n  return {width}\r\n};\r\nexport default connect(mapStateToProps)(ToDo);\r\n","import React, {useState} from 'react';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport {Dropdown, DropdownMenu, DropdownToggle, Popover} from 'reactstrap';\r\nimport SearchBox from 'components/SearchBox';\r\n\r\n\r\nconst AppModuleHeader = (props) => {\r\n\r\n  const [searchBox, setSearchBox] = useState(false);\r\n  const [popoverOpen, setPopOverOpen] = useState(false);\r\n\r\n  const onSearchBoxSelect = () => {\r\n    setSearchBox(!searchBox);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setPopOverOpen(!popoverOpen)\r\n  };\r\n\r\n  const {placeholder, onChange, value, user, notification, apps} = props;\r\n\r\n  return (\r\n    <div className=\"module-box-header-inner\">\r\n      <div className=\"search-bar right-side-icon bg-transparent d-none d-sm-block\">\r\n        <div className=\"form-group\">\r\n          <input className=\"form-control border-0\" type=\"search\" placeholder={placeholder}\r\n                 onChange={onChange}\r\n                 value={value}/>\r\n          <button className=\"search-icon\"><i className=\"zmdi zmdi-search zmdi-hc-lg\"/></button>\r\n        </div>\r\n      </div>\r\n\r\n      <Popover className=\"p-3\" placement=\"bottom\" isOpen={popoverOpen} target=\"Popover1\"\r\n               toggle={toggle}>\r\n        <h3>{user.name}</h3>\r\n        <h4>{user.email}</h4>\r\n      </Popover>\r\n\r\n      <div className=\"d-inline-block d-sm-none\">\r\n        <Dropdown\r\n          className=\"quick-menu nav-searchbox\"\r\n          isOpen={searchBox}\r\n          toggle={onSearchBoxSelect}>\r\n\r\n          <DropdownToggle\r\n            className=\"d-inline-block\"\r\n            tag=\"span\"\r\n            data-toggle=\"dropdown\">\r\n            <IconButton className=\"icon-btn\">\r\n              <i className=\"zmdi zmdi-search zmdi-hc-fw text-grey\"/>\r\n            </IconButton>\r\n          </DropdownToggle>\r\n\r\n          <DropdownMenu className=\"p-0\">\r\n            <SearchBox styleName=\"search-dropdown\" placeholder=\"\"\r\n                       onChange={onChange}\r\n                       value={value}/>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </div>\r\n\r\n      <div className=\"module-box-header-right\">\r\n        {apps && <IconButton className=\"size-40\" aria-label=\"Menu\">\r\n          <i className=\"zmdi zmdi-apps\"/>\r\n        </IconButton>}\r\n        {notification && <IconButton className=\"size-40\" aria-label=\"Menu\">\r\n          <i className=\"zmdi zmdi-notifications-none\"/>\r\n        </IconButton>}\r\n\r\n        <img className=\"ml-2 rounded-circle size-40 pointer\" id=\"Popover1\" alt={user.name}\r\n             onMouseEnter={toggle}\r\n             onMouseLeave={toggle}\r\n             onClick={toggle}\r\n             src={user.avatar}/>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default AppModuleHeader;\r\n\r\nAppModuleHeader.defaultProps = {\r\n  styleName: '',\r\n  value: '',\r\n  notification: true,\r\n  apps: true\r\n};","export default [\r\n  {\r\n    'id': 1,\r\n    'handle': 'frontend',\r\n    'title': 'HTML',\r\n    'color': 'purple lighten-3'\r\n  },\r\n  {\r\n    'id': 2,\r\n    'handle': 'backend',\r\n    'title': 'CSS',\r\n    'color': 'amber darken-2'\r\n  },\r\n  {\r\n    'id': 3,\r\n    'handle': 'api',\r\n    'title': 'Laravel',\r\n    'color': 'green darken-1'\r\n  },\r\n  {\r\n    'id': 4,\r\n    'handle': 'issue',\r\n    'title': 'Node JS',\r\n    'color': 'light-blue darken-2'\r\n  }\r\n];","export default [\r\n  {\r\n    'id': 1,\r\n    'name': 'Alex Dolgove',\r\n    'thumb': \"https://via.placeholder.com/150x150\",\r\n  }, {\r\n    'id': 2,\r\n    'name': 'Domnic Harris',\r\n    'thumb': \"https://via.placeholder.com/150x150\",\r\n  }, {\r\n    'id': 3,\r\n    'name': 'Garry Sobars',\r\n    'thumb': \"https://via.placeholder.com/150x150\",\r\n  }, {\r\n    'id': 4,\r\n    'name': 'Stella Johnson',\r\n    'thumb': \"https://via.placeholder.com/150x150\",\r\n  }, {\r\n    'id': 5,\r\n    'name': 'John Smith',\r\n    'thumb': \"https://via.placeholder.com/150x150\",\r\n  }, {\r\n    'id': 6,\r\n    'name': 'Domnic Brown',\r\n    'thumb': \"https://via.placeholder.com/150x150\",\r\n  }\r\n]\r\n","export default [\r\n\r\n  {\r\n    'id': 0,\r\n    'handle': 'starred',\r\n    'title': 'Starred',\r\n    'icon': 'star'\r\n  },\r\n  {\r\n    'id': 1,\r\n    'handle': 'important',\r\n    'title': 'Priority',\r\n    'icon': 'info'\r\n  },\r\n  {\r\n    'id': 2,\r\n    'handle': 'dueDate',\r\n    'title': 'Sheduled',\r\n    'icon': 'time'\r\n  },\r\n  {\r\n    'id': 3,\r\n    'handle': 'today',\r\n    'title': 'Today',\r\n    'icon': 'calendar'\r\n  },\r\n  {\r\n    'id': 4,\r\n    'handle': 'completed',\r\n    'title': 'Done',\r\n    'icon': 'check'\r\n  },\r\n  {\r\n    'id': 5,\r\n    'handle': 'deleted',\r\n    'title': 'Deleted',\r\n    'icon': 'delete'\r\n  }\r\n];\r\n","export default [\r\n  {\r\n    'title': 'All',\r\n  },\r\n  {\r\n    'title': 'None',\r\n  },\r\n  {\r\n    'title': 'Starred',\r\n  },\r\n  {\r\n    'title': 'Unstarred',\r\n  },\r\n  {\r\n    'title': 'Important',\r\n  },\r\n  {\r\n    'title': 'Unimportant',\r\n  }\r\n];\r\n"],"sourceRoot":""}