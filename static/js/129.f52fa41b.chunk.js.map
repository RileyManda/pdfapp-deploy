{"version":3,"sources":["app/routes/extensions/routes/dropzone/FullScreen/index.js","app/routes/extensions/routes/dropzone/BrowserLimitations/index.js","app/routes/extensions/routes/dropzone/Dialog/index.js","app/routes/extensions/routes/dropzone/index.js","components/ContainerHeader/index.js","components/CardBox/index.js","app/routes/extensions/routes/dropzone/Coverupload/index.js"],"names":["thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","Previews","props","useState","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","style","key","name","alt","src","useEffect","forEach","revokeObjectURL","className","BrowserLimitations","isDragActive","isDragAccept","isDragReject","Dialog","noClick","noKeyboard","open","path","size","type","onClick","DragNDrop","ContainerHeader","title","IntlMessages","id","match","CardBox","styleName","cardStyle","childrenStyle","FullScreen","getUrlString","sub","index","split","substr","subPath","tag","active","length","href","arr","charAt","toUpperCase","slice","getDisplayString","heading","children","headerOutside","headingStyle","defaultProps","CoverUpload","reject","rejectedFiles"],"mappings":"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","file":"static/js/129.f52fa41b.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\nconst thumbsContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: 'auto',\r\n  height: '100%'\r\n};\r\n\r\n\r\nfunction Previews(props) {\r\n  const [files, setFiles] = useState([]);\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: acceptedFiles => {\r\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n        preview: URL.createObjectURL(file)\r\n      })));\r\n    }\r\n  });\r\n\r\n  const thumbs = files.map(file => (\r\n    <div style={thumb} key={file.name}>\r\n      <div style={thumbInner}>\r\n        <img alt={file.name}\r\n             src={file.preview}\r\n             style={img}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(() => () => {\r\n    // Make sure to revoke the data uris to avoid memory leaks\r\n    files.forEach(file => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n\r\n  return (\r\n    <div className=\"dropzone-card\">\r\n      <div className=\"dropzone\">\r\n        <div {...getRootProps({className: 'dropzone-file-btn'})}>\r\n          <input {...getInputProps()} />\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"dropzone-content\" style={thumbsContainer}>\r\n        {thumbs}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Previews;","import React from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nfunction BrowserLimitations(props) {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({\r\n    accept: '.jpeg,.png,.jpg'\r\n  });\r\n\r\n  return (\r\n    <div className=\"dropzone-card\">\r\n      <div className=\"dropzone\">\r\n        <div {...getRootProps({className: 'dropzone-file-btn'})}>\r\n          <input {...getInputProps()} />\r\n          {isDragAccept && (<p>All files will be accepted</p>)}\r\n          {isDragReject && (<p>Some files will be rejected</p>)}\r\n          {!isDragActive && (<p>Drop some files here ...</p>)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default BrowserLimitations;","import React from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nfunction Dialog(props) {\r\n  const {getRootProps, getInputProps, open, acceptedFiles} = useDropzone({\r\n    // Disable click and keydown behavior\r\n    noClick: true,\r\n    noKeyboard: true\r\n  });\r\n\r\n  const files = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"dropzone-card\">\r\n      <div className=\"dropzone\">\r\n        <div {...getRootProps({className: 'dropzone-file-btn'})}>\r\n          <input {...getInputProps()} />\r\n          <p>Drag 'n' drop some files here</p>\r\n        </div>\r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={open}>\r\n          Open File Dialog\r\n        </button>\r\n      </div>\r\n      <div className=\"dropzone-content\">\r\n        <h3>Accepted Files</h3>\r\n        <ul>{files}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\n\r\nimport ContainerHeader from 'components/ContainerHeader/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport FullScreen from './FullScreen/index';\r\nimport CardBox from 'components/CardBox/index';\r\nimport Accept from './Coverupload/index';\r\nimport BrowserLimitations from './BrowserLimitations/index';\r\nimport Dialog from './Dialog/index';\r\n\r\n\r\nconst DragNDrop =(props)=> {\r\n    return (\r\n      <div>\r\n        <ContainerHeader title={<IntlMessages id=\"sidebar.extensions.dropzone\"/>} match={props.match}/>\r\n        <div className=\"row\">\r\n          <CardBox styleName=\"col-sm-6\" cardStyle=\"\" childrenStyle=\"text-center\">\r\n            <Accept/>\r\n          </CardBox>\r\n\r\n          <CardBox styleName=\"col-sm-6\" cardStyle=\"\" childrenStyle=\"text-center\">\r\n            <BrowserLimitations/>\r\n          </CardBox>\r\n          <CardBox styleName=\"col-sm-6\" cardStyle=\"\" childrenStyle=\"text-center\">\r\n            <Dialog/>\r\n          </CardBox>\r\n          <CardBox styleName=\"col-sm-6\" cardStyle=\"\" childrenStyle=\"text-center\">\r\n            <FullScreen/>\r\n          </CardBox>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\nexport default DragNDrop\r\n","import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n  const arr = sub.split(\"-\");\r\n  if (arr.length > 1) {\r\n    return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n  } else {\r\n    return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n  }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '#/';\r\n  } else {\r\n    return '#/' + path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  const path = match.path.substr(1);\r\n  const subPath = path.split('/');\r\n  return (\r\n    <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n      <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n      <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n        {subPath.map((sub, index) => {\r\n            return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                   tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                   href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n          }\r\n        )}\r\n      </Breadcrumb>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","import React from 'react';\r\n\r\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside, headingStyle}) => {\r\n\r\n  return (\r\n    <div className={`${styleName}`}>\r\n      {headerOutside &&\r\n      <div className=\"jr-entry-header\">\r\n        <h3 className=\"entry-heading\">{heading}</h3>\r\n        {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\r\n      </div>\r\n      }\r\n\r\n      <div className={`jr-card ${cardStyle}`}>\r\n        {!headerOutside &&\r\n        (heading &&\r\n          <div className={`jr-card-header ${headingStyle}`}>\r\n            <h3 className=\"card-heading\">{heading}</h3>\r\n            {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\r\n          </div>\r\n        )}\r\n        <div className={`jr-card-body ${childrenStyle}`}>\r\n          {children.length > 1 ? children[1] : children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardBox;\r\n\r\nCardBox.defaultProps = {\r\n  cardStyle: '',\r\n  headingStyle: '',\r\n  childrenStyle: '',\r\n  styleName: 'col-lg-6 col-sm-12'\r\n};","import React from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport FileUploadProgress  from 'react-fileupload-progress';\r\n\r\n\r\nfunction CoverUpload(props) {\r\n  const {acceptedFiles, rejectedFiles, getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/jpeg, image/png',\r\n    reject: 'pdf'\r\n  });\r\n  const getUploadParams = ({ meta }) => { return { url: 'http://localhost:3000/api/upload' } }\r\n\r\n  const acceptedFilesItems = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const rejectedFilesItems = rejectedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\r\n   // Return array of uploaded files after submit button is clicked\r\n   const handleSubmit = (files, allFiles) => {\r\n    console.log(files.map(f => f.meta))\r\n    allFiles.forEach(f => f.remove())\r\n}\r\n\r\n\r\n\r\n  // DropZone area for Pdf Uploads\r\n  return (\r\n    <div className=\"dropzone-card\">\r\n      <div  className=\"dropzone\">\r\n        <div {...getRootProps({className: 'dropzone-file-btn'})}>\r\n          <input {...getInputProps()} />\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n          <em>(Only *.jpg and png files will be accepted)</em>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  \r\n    \r\n  );\r\n}\r\n\r\nexport default CoverUpload;"],"sourceRoot":""}