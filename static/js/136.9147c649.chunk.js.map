{"version":3,"sources":["app/routes/components/routes/autoComplete/reactSelect/IntegrationReactSelect.js","app/routes/components/routes/autoComplete/downshift/IntegrationDownshift.js","app/routes/components/routes/autoComplete/autosuggest/IntegrationAutosuggest.js","app/routes/components/routes/autoComplete/index.js","components/ContainerHeader/index.js","components/CardBox/index.js"],"names":["suggestions","label","map","suggestion","value","useStyles","makeStyles","theme","root","flexGrow","height","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","props","ref","components","Control","children","innerProps","innerRef","selectProps","classes","TextFieldProps","TextField","fullWidth","InputProps","inputProps","className","Menu","Paper","square","MultiValue","Chip","tabIndex","clsx","isFocused","onDelete","removeProps","onClick","deleteIcon","NoOptionsMessage","Typography","color","Option","MenuItem","selected","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","IntegrationReactSelect","useTheme","React","useState","single","setSingle","multi","setMulti","selectStyles","base","text","primary","font","NoSsr","styles","inputId","InputLabelProps","htmlFor","shrink","options","onChange","isMulti","withStyles","container","width","getInputProps","getItemProps","isOpen","inputValue","selectedItem","highlightedIndex","other","inputref","renderInput","id","count","filter","keep","toLowerCase","includes","getSuggestions","index","params","itemProps","isHighlighted","key","renderSuggestion","item","query","matches","match","parts","parse","part","highlight","String","renderSuggestionsContainer","containerProps","getSuggestionValue","trim","inputLength","length","slice","IntegrationAutosuggest","state","handleSuggestionsFetchRequested","setState","handleSuggestionsClearRequested","handleChange","event","newValue","this","suggestionsContainerOpen","suggestionsList","renderInputComponent","onSuggestionsFetchRequested","onSuggestionsClearRequested","Component","unit","marginBottom","listStyleType","AutoComplete","ContainerHeader","title","IntlMessages","CardBox","styleName","childrenStyle","heading","getUrlString","path","sub","split","substr","subPath","tag","active","href","arr","charAt","toUpperCase","getDisplayString","cardStyle","headerOutside","headingStyle","defaultProps"],"mappings":"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","file":"static/js/136.9147c649.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst suggestions = [\r\n  { label: 'Afghanistan' },\r\n  { label: 'Aland Islands' },\r\n  { label: 'Albania' },\r\n  { label: 'Algeria' },\r\n  { label: 'American Samoa' },\r\n  { label: 'Andorra' },\r\n  { label: 'Angola' },\r\n  { label: 'Anguilla' },\r\n  { label: 'Antarctica' },\r\n  { label: 'Antigua and Barbuda' },\r\n  { label: 'Argentina' },\r\n  { label: 'Armenia' },\r\n  { label: 'Aruba' },\r\n  { label: 'Australia' },\r\n  { label: 'Austria' },\r\n  { label: 'Azerbaijan' },\r\n  { label: 'Bahamas' },\r\n  { label: 'Bahrain' },\r\n  { label: 'Bangladesh' },\r\n  { label: 'Barbados' },\r\n  { label: 'Belarus' },\r\n  { label: 'Belgium' },\r\n  { label: 'Belize' },\r\n  { label: 'Benin' },\r\n  { label: 'Bermuda' },\r\n  { label: 'Bhutan' },\r\n  { label: 'Bolivia, Plurinational State of' },\r\n  { label: 'Bonaire, Sint Eustatius and Saba' },\r\n  { label: 'Bosnia and Herzegovina' },\r\n  { label: 'Botswana' },\r\n  { label: 'Bouvet Island' },\r\n  { label: 'Brazil' },\r\n  { label: 'British Indian Ocean Territory' },\r\n  { label: 'Brunei Darussalam' },\r\n].map(suggestion => ({\r\n  value: suggestion.label,\r\n  label: suggestion.label,\r\n}));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n  },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nfunction IntegrationReactSelect() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [single, setSingle] = React.useState(null);\r\n  const [multi, setMulti] = React.useState(null);\r\n\r\n  function handleChangeSingle(value) {\r\n    setSingle(value);\r\n  }\r\n\r\n  function handleChangeMulti(value) {\r\n    setMulti(value);\r\n  }\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          TextFieldProps={{\r\n            label: 'Country',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-single',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Search a country (start with a)',\r\n          }}\r\n          options={suggestions}\r\n          components={components}\r\n          value={single}\r\n          onChange={handleChangeSingle}\r\n        />\r\n        <div className={classes.divider} />\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi}\r\n          onChange={handleChangeMulti}\r\n          isMulti\r\n        />\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IntegrationReactSelect;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Downshift from 'downshift';\r\n\r\nconst suggestions = [\r\n  {label: 'Afghanistan'},\r\n  {label: 'Aland Islands'},\r\n  {label: 'Albania'},\r\n  {label: 'Algeria'},\r\n  {label: 'American Samoa'},\r\n  {label: 'Andorra'},\r\n  {label: 'Angola'},\r\n  {label: 'Anguilla'},\r\n  {label: 'Antarctica'},\r\n  {label: 'Antigua and Barbuda'},\r\n  {label: 'Argentina'},\r\n  {label: 'Armenia'},\r\n  {label: 'Aruba'},\r\n  {label: 'Australia'},\r\n  {label: 'Austria'},\r\n  {label: 'Azerbaijan'},\r\n  {label: 'Bahamas'},\r\n  {label: 'Bahrain'},\r\n  {label: 'Bangladesh'},\r\n  {label: 'Barbados'},\r\n  {label: 'Belarus'},\r\n  {label: 'Belgium'},\r\n  {label: 'Belize'},\r\n  {label: 'Benin'},\r\n  {label: 'Bermuda'},\r\n  {label: 'Bhutan'},\r\n  {label: 'Bolivia, Plurinational State of'},\r\n  {label: 'Bonaire, Sint Eustatius and Saba'},\r\n  {label: 'Bosnia and Herzegovina'},\r\n  {label: 'Botswana'},\r\n  {label: 'Bouvet Island'},\r\n  {label: 'Brazil'},\r\n  {label: 'British Indian Ocean Territory'},\r\n  {label: 'Brunei Darussalam'},\r\n];\r\n\r\nfunction renderInput(inputProps) {\r\n  const {InputProps, classes, ref, ...other} = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      {...other}\r\n      inputref={ref}\r\n      InputProps={{\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n        ...InputProps,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(params) {\r\n  const {suggestion, index, itemProps, highlightedIndex, selectedItem} = params;\r\n  const isHighlighted = highlightedIndex === index;\r\n  const isSelected = selectedItem === suggestion.label;\r\n\r\n  return (\r\n    <MenuItem\r\n      {...itemProps}\r\n      key={suggestion.label}\r\n      selected={isHighlighted}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: isSelected ? 500 : 400,\r\n      }}\r\n    >\r\n      {suggestion.label}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestions(inputValue) {\r\n  let count = 0;\r\n\r\n  return suggestions.filter(suggestion => {\r\n    const keep =\r\n      (!inputValue || suggestion.label.toLowerCase().includes(inputValue.toLowerCase())) &&\r\n      count < 5;\r\n\r\n    if (keep) {\r\n      count += 1;\r\n    }\r\n\r\n    return keep;\r\n  });\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flexGrow: 1,\r\n    height: 100,\r\n    width: '90%',\r\n  },\r\n};\r\n\r\nfunction IntegrationDownshift(props) {\r\n  const {classes} = props;\r\n\r\n  return (\r\n    <Downshift>\r\n      {({getInputProps, getItemProps, isOpen, inputValue, selectedItem, highlightedIndex}) => (\r\n        <div className={classes.container}>\r\n          {renderInput({\r\n            fullWidth: true,\r\n            classes,\r\n            InputProps: getInputProps({\r\n              placeholder: 'Search a country (start with a)',\r\n              id: 'integration-downshift',\r\n            }),\r\n          })}\r\n          {isOpen ? (\r\n            <Paper square>\r\n              {getSuggestions(inputValue).map((suggestion, index) =>\r\n                renderSuggestion({\r\n                  suggestion,\r\n                  index,\r\n                  itemProps: getItemProps({item: suggestion.label}),\r\n                  highlightedIndex,\r\n                  selectedItem,\r\n                }),\r\n              )}\r\n            </Paper>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </Downshift>\r\n  );\r\n}\r\n\r\nIntegrationDownshift.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IntegrationDownshift);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst suggestions = [\r\n  {label: 'Afghanistan'},\r\n  {label: 'Aland Islands'},\r\n  {label: 'Albania'},\r\n  {label: 'Algeria'},\r\n  {label: 'American Samoa'},\r\n  {label: 'Andorra'},\r\n  {label: 'Angola'},\r\n  {label: 'Anguilla'},\r\n  {label: 'Antarctica'},\r\n  {label: 'Antigua and Barbuda'},\r\n  {label: 'Argentina'},\r\n  {label: 'Armenia'},\r\n  {label: 'Aruba'},\r\n  {label: 'Australia'},\r\n  {label: 'Austria'},\r\n  {label: 'Azerbaijan'},\r\n  {label: 'Bahamas'},\r\n  {label: 'Bahrain'},\r\n  {label: 'Bangladesh'},\r\n  {label: 'Barbados'},\r\n  {label: 'Belarus'},\r\n  {label: 'Belgium'},\r\n  {label: 'Belize'},\r\n  {label: 'Benin'},\r\n  {label: 'Bermuda'},\r\n  {label: 'Bhutan'},\r\n  {label: 'Bolivia, Plurinational State of'},\r\n  {label: 'Bonaire, Sint Eustatius and Saba'},\r\n  {label: 'Bosnia and Herzegovina'},\r\n  {label: 'Botswana'},\r\n  {label: 'Bouvet Island'},\r\n  {label: 'Brazil'},\r\n  {label: 'British Indian Ocean Territory'},\r\n  {label: 'Brunei Darussalam'},\r\n];\r\n\r\nfunction renderInput(inputProps) {\r\n  const {classes, ref, ...other} = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      inputref={ref}\r\n      InputProps={{\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n        ...other,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, {query, isHighlighted}) {\r\n  const matches = match(suggestion.label, query);\r\n  const parts = parse(suggestion.label, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map((part, index) => {\r\n          return part.highlight ? (\r\n            <span key={String(index)} style={{fontWeight: 300}}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{fontWeight: 500}}>\r\n              {part.text}\r\n            </strong>\r\n          );\r\n        })}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction renderSuggestionsContainer(options) {\r\n  const {containerProps, children} = options;\r\n\r\n  return (\r\n    <div className=\"position-relative z-index-20\">\r\n      <Paper {...containerProps} square>\r\n        {children}\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.label;\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n      const keep =\r\n        count < 5 && suggestion.label.toLowerCase().slice(0, inputLength) === inputValue;\r\n\r\n      if (keep) {\r\n        count += 1;\r\n      }\r\n\r\n      return keep;\r\n    });\r\n}\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n    height: 100,\r\n    width: '60%',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit * 3,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 10,\r\n  },\r\n  suggestion: {\r\n    display: 'block',\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none',\r\n  },\r\n});\r\n\r\nclass IntegrationAutosuggest extends React.Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  handleSuggestionsFetchRequested = ({value}) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value),\r\n    });\r\n  };\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  handleChange = (event, {newValue}) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n      <Autosuggest\r\n        theme={{\r\n          container: classes.container,\r\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion,\r\n        }}\r\n        renderInputComponent={renderInput}\r\n        suggestions={this.state.suggestions}\r\n        onSuggestionsFetchRequested={this.handleSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\r\n        renderSuggestionsContainer={renderSuggestionsContainer}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={{\r\n          classes,\r\n          placeholder: 'Search a country (start with a)',\r\n          value: this.state.value,\r\n          onChange: this.handleChange,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nIntegrationAutosuggest.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IntegrationAutosuggest);","import React from 'react';\r\nimport ContainerHeader from 'components/ContainerHeader/index';\r\nimport CardBox from 'components/CardBox/index';\r\nimport IntegrationReactSelect from './reactSelect/IntegrationReactSelect';\r\nimport IntegrationDownshift from './downshift/IntegrationDownshift';\r\nimport IntegrationAutosuggest from './autosuggest/IntegrationAutosuggest';\r\nimport IntlMessages from 'util/IntlMessages';\r\n\r\nconst AutoComplete = ({match}) => {\r\n  return (\r\n    <div className=\"animated slideInUpTiny animation-duration-3\">\r\n      <ContainerHeader title={<IntlMessages id=\"sidebar.components.autocomplete\"/>} match={match}/>\r\n      <div className=\"row mb-lg-4\">\r\n        <CardBox styleName=\"col-lg-6\" childrenStyle=\"d-flex justify-content-center\"\r\n                 heading={<IntlMessages id=\"component.autocomplete.reactSelect\"/>}>\r\n          <IntegrationReactSelect/>\r\n        </CardBox>\r\n\r\n        <CardBox styleName=\"col-lg-6\" childrenStyle=\"d-flex justify-content-center\"\r\n                 heading={<IntlMessages id=\"component.autocomplete.reactAutosuggest\"/>}>\r\n          <IntegrationAutosuggest/>\r\n        </CardBox>\r\n      </div>\r\n      <div className=\"row\">\r\n        <CardBox styleName=\"col-lg-12\" childrenStyle=\"d-flex justify-content-center\"\r\n                 heading={<IntlMessages id=\"component.autocomplete.downshift\"/>}>\r\n          <IntegrationDownshift/>\r\n        </CardBox>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n","import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n  const arr = sub.split(\"-\");\r\n  if (arr.length > 1) {\r\n    return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n  } else {\r\n    return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n  }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '#/';\r\n  } else {\r\n    return '#/' + path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  const path = match.path.substr(1);\r\n  const subPath = path.split('/');\r\n  return (\r\n    <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n      <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n      <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n        {subPath.map((sub, index) => {\r\n            return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                   tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                   href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n          }\r\n        )}\r\n      </Breadcrumb>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","import React from 'react';\r\n\r\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside, headingStyle}) => {\r\n\r\n  return (\r\n    <div className={`${styleName}`}>\r\n      {headerOutside &&\r\n      <div className=\"jr-entry-header\">\r\n        <h3 className=\"entry-heading\">{heading}</h3>\r\n        {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\r\n      </div>\r\n      }\r\n\r\n      <div className={`jr-card ${cardStyle}`}>\r\n        {!headerOutside &&\r\n        (heading &&\r\n          <div className={`jr-card-header ${headingStyle}`}>\r\n            <h3 className=\"card-heading\">{heading}</h3>\r\n            {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\r\n          </div>\r\n        )}\r\n        <div className={`jr-card-body ${childrenStyle}`}>\r\n          {children.length > 1 ? children[1] : children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardBox;\r\n\r\nCardBox.defaultProps = {\r\n  cardStyle: '',\r\n  headingStyle: '',\r\n  childrenStyle: '',\r\n  styleName: 'col-lg-6 col-sm-12'\r\n};"],"sourceRoot":""}