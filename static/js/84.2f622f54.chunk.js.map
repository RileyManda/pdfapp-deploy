{"version":3,"sources":["app/routes/components/routes/dialogs/alerts/AlertDialog.js","app/routes/components/routes/dialogs/slideAlerts/AlertDialogSlide.js","app/routes/components/routes/dialogs/confirmation/ConfirmationDialogDemo.js","app/routes/components/routes/dialogs/fullScreen/FullScreenDialog.js","app/routes/components/routes/dialogs/formAlerts/FormDialog.js","app/routes/components/routes/dialogs/simple/SimpleDialog.js","app/routes/components/routes/dialogs/simple/SimpleDialogDemo.js","app/routes/components/routes/dialogs/index.js","components/ContainerHeader/index.js","components/CardBox/index.js"],"names":["AlertDialog","state","open","handleRequestClose","setState","variant","className","onClick","this","onClose","color","Component","AlertDialogSlide","TransitionComponent","Slide","options","ConfirmationDialog","value","undefined","radioGroup","handleEntering","focus","handleCancel","props","handleOk","handleChange","event","nextProps","other","disableBackdropClick","disableEscapeKeyDown","maxWidth","onEntering","ref","node","aria-label","name","onChange","map","option","key","control","label","React","ConfirmationDialogDemo","button","handleClickListItem","divider","disabled","primary","aria-haspopup","aria-controls","secondary","Transition","direction","FullScreenDialog","handleClickOpen","fullScreen","style","flex","FormDialog","autoFocus","margin","id","type","fullWidth","SimpleDialog","selectedValue","handleListItemClick","users","classes","Dialog","DialogTitle","List","user","ListItem","email","ListItemAvatar","Avatar","alt","src","image","ListItemText","SimpleDialogDemo","Typography","Button","bind","Dialogs","match","title","styleName","cardStyle","childrenStyle","getUrlString","path","sub","index","split","ContainerHeader","substr","subPath","tag","active","length","href","arr","charAt","toUpperCase","slice","getDisplayString","CardBox","heading","children","headerOutside","headingStyle","defaultProps"],"mappings":"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","file":"static/js/84.2f622f54.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nclass AlertDialog extends Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({open: false});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"contained\" className=\"bg-primary text-white\" onClick={() => this.setState({open: true})}>Open\r\n          alert dialog</Button>\r\n        <Dialog open={this.state.open} onClose={this.handleRequestClose}>\r\n          <DialogTitle>\r\n            {\"Use Google's location service?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Let Google help apps determine location. This means sending anonymous location data to\r\n              Google, even when no apps are running.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleRequestClose} color=\"secondary\">\r\n              Disagree\r\n            </Button>\r\n            <Button onClick={this.handleRequestClose} color=\"primary\">\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertDialog;","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nclass AlertDialogSlide extends Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({open: false});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"contained\" className=\"bg-primary text-white\" onClick={() => this.setState({open: true})}>Slide\r\n          in alert dialog</Button>\r\n        <Dialog open={this.state.open} TransitionComponent={Slide} onClose={this.handleRequestClose}>\r\n          <DialogTitle>\r\n            {\"Use Google's location service?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Let Google help apps determine location. This means sending anonymous location data to\r\n              Google, even when no apps are running.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleRequestClose} color=\"secondary\">\r\n              Disagree\r\n            </Button>\r\n            <Button onClick={this.handleRequestClose} color=\"primary\">\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertDialogSlide;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nclass ConfirmationDialog extends React.Component {\r\n  state = {\r\n    value: undefined,\r\n  };\r\n  radioGroup = null;\r\n  handleEntering = () => {\r\n    this.radioGroup.focus();\r\n  };\r\n  handleCancel = () => {\r\n    this.props.onClose(this.props.value);\r\n  };\r\n  handleOk = () => {\r\n    this.props.onClose(this.state.value);\r\n  };\r\n  handleChange = (event, value) => {\r\n    this.setState({value});\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.setState({value: this.props.value});\r\n  }\r\n\r\n  componentWillUpdate(nextProps) {\r\n    if (nextProps.value !== this.props.value) {\r\n      // eslint-disable-next-line react/no-will-update-set-state\r\n      this.setState({value: nextProps.value});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {value, ...other} = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        maxWidth=\"xs\"\r\n        onEntering={this.handleEntering}\r\n        {...other}\r\n      >\r\n        <DialogTitle>Phone Ringtone</DialogTitle>\r\n        <DialogContent>\r\n          <RadioGroup\r\n            ref={node => {\r\n              this.radioGroup = node;\r\n            }}\r\n            aria-label=\"ringtone\"\r\n            name=\"ringtone\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          >\r\n            {options.map(option => (\r\n              <FormControlLabel value={option} key={option} control={<Radio/>} label={option}/>\r\n            ))}\r\n          </RadioGroup>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleCancel} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.handleOk} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nclass ConfirmationDialogDemo extends React.Component {\r\n  state = {\r\n    open: false,\r\n    value: 'Dione',\r\n  };\r\n\r\n  button = undefined;\r\n\r\n  handleClickListItem = () => {\r\n    this.setState({open: true});\r\n  };\r\n\r\n  handleRequestClose = value => {\r\n    this.setState({value, open: false});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-inline-block w-100\">\r\n        <List>\r\n          <ListItem button divider disabled>\r\n            <ListItemText primary=\"Interruptions\"/>\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            divider\r\n            aria-haspopup\r\n            aria-controls=\"ringtone-menu\"\r\n            aria-label=\"Phone ringtone\"\r\n            onClick={this.handleClickListItem}\r\n          >\r\n            <ListItemText primary=\"Phone ringtone\" secondary={this.state.value}/>\r\n          </ListItem>\r\n          <ListItem button divider disabled>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\"/>\r\n          </ListItem>\r\n          <ConfirmationDialog\r\n            open={this.state.open}\r\n            onClose={this.handleRequestClose}\r\n            value={this.state.value}\r\n          />\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmationDialogDemo;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass FullScreenDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({open: true});\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({open: false});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"contained\" className=\"bg-primary text-white\" onClick={this.handleClickOpen}>full-screen\r\n          dialog</Button>\r\n        <Dialog\r\n          fullScreen\r\n          open={this.state.open}\r\n          onClose={this.handleRequestClose}\r\n          TransitionComponent={Transition}\r\n        >\r\n          <AppBar className=\"position-relative\">\r\n            <Toolbar>\r\n              <IconButton onClick={this.handleRequestClose} aria-label=\"Close\">\r\n                <CloseIcon/>\r\n              </IconButton>\r\n              <Typography variant=\"title\" color=\"inherit\" style={{\r\n                flex: 1,\r\n              }}>\r\n                Sound\r\n              </Typography>\r\n              <Button onClick={this.handleRequestClose}>\r\n                save\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <List>\r\n            <ListItem button>\r\n              <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\"/>\r\n            </ListItem>\r\n            <Divider/>\r\n            <ListItem button>\r\n              <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\"/>\r\n            </ListItem>\r\n          </List>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullScreenDialog;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nclass FormDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({open: true});\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({open: false});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"contained\" className=\"bg-primary text-white\" onClick={this.handleClickOpen}>Open form\r\n          dialog</Button>\r\n        <Dialog open={this.state.open} onClose={this.handleRequestClose}>\r\n          <DialogTitle>Subscribe</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              To subscribe to this website, please enter your email address here. We will send\r\n              updates occationally.\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Email Address\"\r\n              type=\"email\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleRequestClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleRequestClose} color=\"primary\">\r\n              Subscribe\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormDialog;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nclass SimpleDialog extends Component {\r\n  handleRequestClose = () => {\r\n    this.props.onClose(this.props.selectedValue);\r\n  };\r\n\r\n  handleListItemClick = value => {\r\n    this.props.onClose(value);\r\n  };\r\n\r\n  render() {\r\n    const {classes, users, onClose, selectedValue, ...other} = this.props;\r\n\r\n    return (\r\n      <Dialog onClose={this.handleRequestClose} {...other}>\r\n        <DialogTitle>Set backup account</DialogTitle>\r\n        <div>\r\n          <List>\r\n            {users.map(user =>\r\n              <ListItem button onClick={() => this.handleListItemClick(user.email)} key={user.email}>\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Remy Sharp\" src={user.image}/>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={user.email}/>\r\n              </ListItem>,\r\n            )}\r\n            <ListItem button onClick={() => this.handleListItemClick('addAccount')}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <AddIcon/>\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Add Account\"/>\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  selectedValue: PropTypes.string,\r\n};\r\nexport default SimpleDialog;\r\n","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SimpleDialog from './SimpleDialog';\r\n\r\n\r\nconst users = [\r\n  {image: \"https://via.placeholder.com/150x150\", email: 'jhonsmith@example.com'},\r\n  {image: \"https://via.placeholder.com/150x150\", email: 'stella02@example.com'},\r\n  {image: \"https://via.placeholder.com/150x150\", email: 'chrris0254@example.com'}];\r\n\r\n\r\nclass SimpleDialogDemo extends Component {\r\n\r\n  state = {\r\n    open: false,\r\n    selectedValue: users[1].email,\r\n  };\r\n  handleRequestClose = value => {\r\n    this.setState({selectedValue: value, open: false});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography variant=\"subtitle1\">\r\n          Selected: {this.state.selectedValue}\r\n        </Typography>\r\n        <br/>\r\n        <Button variant=\"contained\" className=\"bg-primary text-white\" onClick={() => this.setState({open: true})}>Open\r\n          simple dialog</Button>\r\n        <SimpleDialog users={users}\r\n                      selectedValue={this.state.selectedValue}\r\n                      open={this.state.open}\r\n                      onClose={this.handleRequestClose.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleDialogDemo;\r\n","import React from 'react';\r\n\r\nimport CardBox from 'components/CardBox';\r\nimport ContainerHeader from 'components/ContainerHeader'\r\n\r\nimport SimpleDialogDemo from './simple/SimpleDialogDemo';\r\nimport AlertDialog from './alerts/AlertDialog';\r\nimport AlertDialogSlide from './slideAlerts/AlertDialogSlide';\r\nimport ConfirmationDialogDemo from './confirmation/ConfirmationDialogDemo';\r\nimport FullScreenDialog from './fullScreen/FullScreenDialog';\r\nimport FormDialog from './formAlerts/FormDialog';\r\nimport IntlMessages from 'util/IntlMessages';\r\n\r\nconst Dialogs = ({match}) => {\r\n  return (\r\n    <div className=\"animated slideInUpTiny animation-duration-3\">\r\n      <ContainerHeader title={<IntlMessages id=\"sidebar.components.dialogs\"/>} match={match}/>\r\n\r\n      <div className=\"row mb-md-3\">\r\n        <CardBox styleName=\"col-lg-3 col-sm-6\" cardStyle=\"py-sm-5\" childrenStyle=\"text-center\">\r\n          <AlertDialog/>\r\n        </CardBox>\r\n        <CardBox styleName=\"col-lg-3 col-sm-6\" cardStyle=\"py-sm-5\" childrenStyle=\"text-center\">\r\n          <AlertDialogSlide/>\r\n        </CardBox>\r\n        <CardBox styleName=\"col-lg-3 col-sm-6\" cardStyle=\"py-sm-5\" childrenStyle=\"text-center\">\r\n          <FullScreenDialog/>\r\n        </CardBox>\r\n        <CardBox styleName=\"col-lg-3 col-sm-6\" cardStyle=\"py-sm-5\" childrenStyle=\"text-center\">\r\n          <FormDialog/>\r\n        </CardBox>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <CardBox styleName=\"col-md-6\" childrenStyle=\"text-center\">\r\n          <SimpleDialogDemo/>\r\n        </CardBox>\r\n        <CardBox styleName=\"col-lg-3 col-md-6\" cardStyle=\"p-0\" childrenStyle=\"text-center\">\r\n          <ConfirmationDialogDemo/>\r\n        </CardBox>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n  const arr = sub.split(\"-\");\r\n  if (arr.length > 1) {\r\n    return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n  } else {\r\n    return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n  }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '#/';\r\n  } else {\r\n    return '#/' + path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  const path = match.path.substr(1);\r\n  const subPath = path.split('/');\r\n  return (\r\n    <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n      <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n      <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n        {subPath.map((sub, index) => {\r\n            return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                   tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                   href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n          }\r\n        )}\r\n      </Breadcrumb>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","import React from 'react';\r\n\r\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside, headingStyle}) => {\r\n\r\n  return (\r\n    <div className={`${styleName}`}>\r\n      {headerOutside &&\r\n      <div className=\"jr-entry-header\">\r\n        <h3 className=\"entry-heading\">{heading}</h3>\r\n        {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\r\n      </div>\r\n      }\r\n\r\n      <div className={`jr-card ${cardStyle}`}>\r\n        {!headerOutside &&\r\n        (heading &&\r\n          <div className={`jr-card-header ${headingStyle}`}>\r\n            <h3 className=\"card-heading\">{heading}</h3>\r\n            {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\r\n          </div>\r\n        )}\r\n        <div className={`jr-card-body ${childrenStyle}`}>\r\n          {children.length > 1 ? children[1] : children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardBox;\r\n\r\nCardBox.defaultProps = {\r\n  cardStyle: '',\r\n  headingStyle: '',\r\n  childrenStyle: '',\r\n  styleName: 'col-lg-6 col-sm-12'\r\n};"],"sourceRoot":""}