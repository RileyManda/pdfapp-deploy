{"version":3,"sources":["app/routes/map/routes/styled/Components/StyledMap.js","app/routes/map/routes/styled/index.js","components/ContainerHeader/index.js","components/CardBox/index.js"],"names":["google","window","StyledMapExampleGoogleMap","withGoogleMap","props","defaultZoom","defaultCenter","center","defaultOptions","styles","fancyMapStyles","defaultPosition","options","closeBoxURL","enableEventPropagation","style","backgroundColor","opacity","padding","onClick","onClickFromChildrenOfInfoBox","fontSize","fontColor","StyledMap","containerElement","className","mapElement","maps","LatLng","e","console","log","Styled","match","ContainerHeader","title","IntlMessages","id","CardBox","styleName","getUrlString","path","sub","index","split","substr","subPath","tag","map","active","length","key","href","arr","charAt","toUpperCase","slice","getDisplayString","heading","children","cardStyle","childrenStyle","headerOutside","headingStyle","defaultProps"],"mappings":"g7CAOMA,EAASC,OAAOD,OAEhBE,EAA4BC,yBAAc,SAAAC,GAAK,OACnD,kBAAC,YAAD,CACEC,YAAa,GACbC,cAAeF,EAAMG,OACrBC,eAAgB,CAACC,OAAQC,IAEzB,kBAAC,IAAD,CACEC,gBAAiBP,EAAMG,OACvBK,QAAS,CAACC,YAAY,GAAKC,wBAAwB,IAEnD,yBACEC,MAAO,CAACC,gBAAgB,SAAWC,QAAS,IAAMC,QAAQ,QAC1DC,QAASf,EAAMgB,8BAEf,yBAAKL,MAAO,CAACM,SAAS,OAASC,UAAU,YAAzC,gBA6BOC,EAlBG,WAMhB,OACE,kBAACrB,EAAD,CACEsB,iBACE,yBAAKC,UAAU,4CAEjBC,WAAY,yBAAKD,UAAU,0BAC3BlB,OAAQ,IAAIP,EAAO2B,KAAKC,OAAO,WAAY,YAC3CR,6BAXqC,SAACS,GACxCC,QAAQC,IAAIF,O,yBChBDG,UAdA,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,OACE,yBAAKR,UAAU,+CACb,kBAACS,EAAA,EAAD,CAAiBC,MAAO,kBAACC,EAAA,EAAD,CAAcC,GAAG,uBAAwBJ,MAAOA,IAExE,yBAAKR,UAAU,OACb,kBAACa,EAAA,EAAD,CAASC,UAAU,aACjB,kBAAC,EAAD,W,iCCdV,sCAYMC,EAAe,SAACC,EAAMC,EAAKC,GAC/B,OAAc,IAAVA,EACK,KAEA,KAAOF,EAAKG,MAAMF,GAAK,GAAKA,GAuBxBR,IAnBS,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAClBM,EADoC,EAAXR,MACZQ,KAAKI,OAAO,GACzBC,EAAUL,EAAKG,MAAM,KAC3B,OACE,yBAAKnB,UAAU,2EACb,wBAAIA,UAAU,sBAAsBU,GAEpC,kBAAC,IAAD,CAAYV,UAAU,OAAOsB,IAAI,OAC9BD,EAAQE,KAAI,SAACN,EAAKC,GACf,OAAO,kBAAC,IAAD,CAAgBM,OAAQH,EAAQI,SAAWP,EAAQ,EACnCI,IAAKD,EAAQI,SAAWP,EAAQ,EAAI,OAAS,IAAKQ,IAAKR,EACvDS,KAAMZ,EAAaC,EAAMC,EAAKC,IA5BxC,SAACD,GACxB,IAAMW,EAAMX,EAAIE,MAAM,KACtB,OAAIS,EAAIH,OAAS,EACRG,EAAI,GAAGC,OAAO,GAAGC,cAAgBF,EAAI,GAAGG,MAAM,GAAK,IAAMH,EAAI,GAAGC,OAAO,GAAGC,cAAgBF,EAAI,GAAGG,MAAM,GAEvGd,EAAIY,OAAO,GAAGC,cAAgBb,EAAIc,MAAM,GAuBuBC,CAAiBf,W,iCC/B3F,oBAEMJ,EAAU,SAAC,GAA2F,IAA1FoB,EAAyF,EAAzFA,QAASC,EAAgF,EAAhFA,SAAUpB,EAAsE,EAAtEA,UAAWqB,EAA2D,EAA3DA,UAAWC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,aAEvF,OACE,yBAAKtC,UAAS,UAAKc,IAChBuB,GACD,yBAAKrC,UAAU,mBACb,wBAAIA,UAAU,iBAAiBiC,GAC9BC,EAAST,OAAS,GAAK,yBAAKzB,UAAU,qBAAqBkC,EAAS,KAIvE,yBAAKlC,UAAS,kBAAamC,KACvBE,GACDJ,GACC,yBAAKjC,UAAS,yBAAoBsC,IAChC,wBAAItC,UAAU,gBAAgBiC,GAC7BC,EAAST,OAAS,GAAK,yBAAKzB,UAAU,eAAekC,EAAS,KAGnE,yBAAKlC,UAAS,uBAAkBoC,IAC7BF,EAAST,OAAS,EAAIS,EAAS,GAAKA,MAOhCrB,MAEfA,EAAQ0B,aAAe,CACrBJ,UAAW,GACXG,aAAc,GACdF,cAAe,GACftB,UAAW","file":"static/js/132.b3b64952.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {GoogleMap, withGoogleMap,} from \"react-google-maps\";\r\n\r\nimport InfoBox from \"react-google-maps/lib/components/addons/InfoBox\";\r\n\r\nimport fancyMapStyles from \"./fancyMapStyles.json\";\r\n\r\nconst google = window.google;\r\n\r\nconst StyledMapExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={11}\r\n    defaultCenter={props.center}\r\n    defaultOptions={{styles: fancyMapStyles}}\r\n  >\r\n    <InfoBox\r\n      defaultPosition={props.center}\r\n      options={{closeBoxURL: ``, enableEventPropagation: true}}\r\n    >\r\n      <div\r\n        style={{backgroundColor: `yellow`, opacity: 0.75, padding: `20px`}}\r\n        onClick={props.onClickFromChildrenOfInfoBox}\r\n      >\r\n        <div style={{fontSize: `16px`, fontColor: `#08233B`}}>\r\n          Taipei\r\n        </div>\r\n      </div>\r\n    </InfoBox>\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nconst StyledMap = () => {\r\n\r\n  const handleClickFromChildrenOfInfoBox = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  return (\r\n    <StyledMapExampleGoogleMap\r\n      containerElement={\r\n        <div className=\"embed-responsive embed-responsive-21by9\"/>\r\n      }\r\n      mapElement={<div className=\"embed-responsive-item\"/>}\r\n      center={new google.maps.LatLng(44.8799929, 21.3190073)}\r\n      onClickFromChildrenOfInfoBox={handleClickFromChildrenOfInfoBox}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StyledMap","import React from 'react';\r\nimport StyledMap from './Components/StyledMap';\r\nimport CardBox from 'components/CardBox';\r\nimport ContainerHeader from 'components/ContainerHeader';\r\nimport IntlMessages from 'util/IntlMessages';\r\n\r\n\r\nconst Styled = ({match}) => {\r\n  return (\r\n    <div className=\"animated slideInUpTiny animation-duration-3\">\r\n      <ContainerHeader title={<IntlMessages id=\"sidebar.map.styled\"/>} match={match}/>\r\n\r\n      <div className=\"row\">\r\n        <CardBox styleName=\"col-lg-12\">\r\n          <StyledMap/>\r\n        </CardBox>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Styled;\r\n","import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n  const arr = sub.split(\"-\");\r\n  if (arr.length > 1) {\r\n    return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n  } else {\r\n    return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n  }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '#/';\r\n  } else {\r\n    return '#/' + path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  const path = match.path.substr(1);\r\n  const subPath = path.split('/');\r\n  return (\r\n    <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n      <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n      <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n        {subPath.map((sub, index) => {\r\n            return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                   tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                   href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n          }\r\n        )}\r\n      </Breadcrumb>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","import React from 'react';\r\n\r\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside, headingStyle}) => {\r\n\r\n  return (\r\n    <div className={`${styleName}`}>\r\n      {headerOutside &&\r\n      <div className=\"jr-entry-header\">\r\n        <h3 className=\"entry-heading\">{heading}</h3>\r\n        {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\r\n      </div>\r\n      }\r\n\r\n      <div className={`jr-card ${cardStyle}`}>\r\n        {!headerOutside &&\r\n        (heading &&\r\n          <div className={`jr-card-header ${headingStyle}`}>\r\n            <h3 className=\"card-heading\">{heading}</h3>\r\n            {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\r\n          </div>\r\n        )}\r\n        <div className={`jr-card-body ${childrenStyle}`}>\r\n          {children.length > 1 ? children[1] : children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardBox;\r\n\r\nCardBox.defaultProps = {\r\n  cardStyle: '',\r\n  headingStyle: '',\r\n  childrenStyle: '',\r\n  styleName: 'col-lg-6 col-sm-12'\r\n};"],"sourceRoot":""}