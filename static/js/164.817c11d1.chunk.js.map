{"version":3,"sources":["app/routes/mail/redux/index.js"],"names":["MailWithRedux","MailSideBar","className","id","style","height","props","width","variant","color","onClick","onComposeMail","getNavFolders","getNavFilters","getNavLabels","onDeleteMail","folders","map","folder","index","key","setTimeout","hideMailLoader","selectedFolder","icon","title","onFolderMenuItemSelect","folderId","handleMailRequestClose","onLabelMenuItemSelect","label","onMailLabelMenuItemSelect","handleRequestClose","filters","filter","getMailNavFilters","onFolderSelect","event","setState","anchorEl","currentTarget","onLabelSelect","onMailLabelSelect","onOptionMenuSelect","onMailOptionMenuSelect","onOptionMenuItemSelect","option","getAllMail","getUnselectedAllMail","getReadMail","getUnreadMail","getStarredMail","getUnStarredMail","getImportantMail","getUnimportantMail","labels","getMailNavLabels","searchMail","searchText","onSearchMail","displayMail","currentMail","folderMails","noContentFoundMessage","length","mails","onStartSelect","bind","onMailSelect","onMailChecked","mail","onImportantSelect","getMailActions","state","this","fetchMails","data","selectedMails","onMailSend","evt","updateMailSearch","target","value","onMailToggleDrawer","loader","composeMail","user","alertMessage","showMessage","open","drawerState","onClose","onToggleDrawer","aria-label","placeholder","onChange","updateSearch","indeterminate","checked","onAllMailSelect","optionName","setCurrentMailNull","optionMenuState","MenuListProps","options","folderMenuState","labelMenuState","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","Component","connect","settings","allMail"],"mappings":"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","file":"static/js/164.817c11d1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport folders from '../data/folders';\r\nimport filters from '../data/filters';\r\nimport labels from '../data/labels';\r\nimport options from '../data/options';\r\nimport MailList from 'components/mail/MailList';\r\n\r\nimport ComposeMail from 'components/mail/Compose/index';\r\nimport AppModuleHeader from 'components/AppModuleHeader/index';\r\nimport MailDetail from 'components/mail/MailDetail/index';\r\nimport {\r\n  fetchMails,\r\n  getAllMail,\r\n  getImportantMail,\r\n  getMailNavFilters,\r\n  getMailNavLabels,\r\n  getNavFolders,\r\n  getReadMail,\r\n  getStarredMail,\r\n  getUnimportantMail,\r\n  getUnreadMail,\r\n  getUnselectedAllMail,\r\n  getUnStarredMail,\r\n  handleMailRequestClose,\r\n  hideMailLoader,\r\n  onAllMailSelect,\r\n  onComposeMail,\r\n  onDeleteMail,\r\n  onFolderMenuItemSelect,\r\n  onFolderSelect,\r\n  onImportantSelect,\r\n  onMailChecked,\r\n  onMailLabelMenuItemSelect,\r\n  onMailLabelSelect,\r\n  onMailOptionMenuSelect,\r\n  onMailSelect,\r\n  onMailSend,\r\n  onMailToggleDrawer,\r\n  onOptionMenuItemSelect,\r\n  onSearchMail,\r\n  onStartSelect,\r\n  setCurrentMailNull,\r\n  updateMailSearch\r\n} from 'actions/Mail';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\n\r\nclass MailWithRedux extends Component {\r\n\r\n  MailSideBar = () => {\r\n    return <div className=\"module-side\">\r\n\r\n      <div className=\"module-side-header\">\r\n        <div className=\"module-logo\">\r\n          <i className=\"zmdi zmdi-email mr-4\"/>\r\n          <span><IntlMessages id=\"mail.mailbox\"/></span>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"module-side-content\">\r\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\r\n          <div className=\"module-add-task\">\r\n            <Button variant=\"contained\" color=\"primary\" className=\"btn-block\"\r\n                    onClick={() => {\r\n                      this.props.onComposeMail();\r\n                    }}>\r\n              <i className=\"zmdi zmdi-edit mr-3\"/>\r\n              <IntlMessages id=\"mail.compose\"/> </Button>\r\n          </div>\r\n\r\n          <ul className=\"module-nav\">\r\n\r\n            {this.getNavFolders()}\r\n\r\n            <li className=\"module-nav-label\">\r\n              <IntlMessages id=\"mail.filters\"/>\r\n            </li>\r\n\r\n            {this.getNavFilters()}\r\n\r\n            <li className=\"module-nav-label\">\r\n              <IntlMessages id=\"mail.labels\"/>\r\n            </li>\r\n\r\n            {this.getNavLabels()}\r\n\r\n          </ul>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  onDeleteMail = () => {\r\n    this.props.onDeleteMail();\r\n  };\r\n  getNavFolders = () => {\r\n    return folders.map((folder, index) =>\r\n      <li key={index} onClick={() => {\r\n        this.props.getNavFolders(folder);\r\n        setTimeout(() => {\r\n          this.props.hideMailLoader();\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className={`jr-link ${this.props.selectedFolder === folder.id ? 'active' : ''}`}>\r\n          <i className={`zmdi zmdi-${folder.icon}`}/>\r\n          <span>{folder.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  onFolderMenuItemSelect = (folderId) => {\r\n    this.props.handleMailRequestClose();\r\n    this.props.onFolderMenuItemSelect(folderId);\r\n  };\r\n  onLabelMenuItemSelect = (label) => {\r\n    this.props.handleMailRequestClose();\r\n    this.props.onMailLabelMenuItemSelect(label);\r\n  };\r\n  handleRequestClose = () => {\r\n    this.props.handleMailRequestClose();\r\n  };\r\n  getNavFilters = () => {\r\n    return filters.map((filter, index) =>\r\n      <li key={index} onClick={() => {\r\n        this.props.getMailNavFilters(filter);\r\n        setTimeout(() => {\r\n          this.props.hideMailLoader();\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"jr-link\">\r\n          <i className={`zmdi zmdi-${filter.icon}`}/>\r\n          <span>{filter.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n\r\n  onFolderSelect = event => {\r\n    this.props.onFolderSelect();\r\n    this.setState({\r\n      anchorEl: event.currentTarget\r\n    })\r\n  };\r\n  onLabelSelect = event => {\r\n    this.props.onMailLabelSelect();\r\n    this.setState({\r\n      anchorEl: event.currentTarget\r\n    })\r\n  };\r\n  onOptionMenuSelect = event => {\r\n    this.props.onMailOptionMenuSelect();\r\n    this.setState({\r\n      anchorEl: event.currentTarget\r\n    })\r\n  };\r\n  onOptionMenuItemSelect = (option) => {\r\n    switch (option.title) {\r\n      case 'All':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getAllMail();\r\n        break;\r\n      case 'None':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getUnselectedAllMail();\r\n        break;\r\n      case 'Read':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getReadMail();\r\n        break;\r\n      case 'Unread':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getUnreadMail();\r\n        break;\r\n      case 'Starred':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getStarredMail();\r\n        break;\r\n      case 'Unstarred':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getUnStarredMail();\r\n        break;\r\n      case 'Important':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getImportantMail();\r\n        break;\r\n      case 'Unimportant':\r\n        this.props.handleMailRequestClose();\r\n        this.props.getUnimportantMail();\r\n        break;\r\n      default:\r\n        this.props.handleMailRequestClose();\r\n        this.props.getAllMail();\r\n    }\r\n  };\r\n  getAllMail = () => {\r\n    this.props.getAllMail();\r\n  };\r\n  getUnselectedAllMail = () => {\r\n    this.props.getUnselectedAllMail();\r\n  };\r\n  getReadMail = () => {\r\n    this.props.getReadMail();\r\n  };\r\n  getUnreadMail = () => {\r\n    this.props.getUnreadMail();\r\n  };\r\n  getStarredMail = () => {\r\n    this.props.getStarredMail();\r\n  };\r\n  getUnStarredMail = () => {\r\n    this.props.getUnStarredMail();\r\n  };\r\n  getImportantMail = () => {\r\n    this.props.getImportantMail();\r\n  };\r\n  getUnimportantMail = () => {\r\n    this.props.getUnimportantMail();\r\n  };\r\n  getNavLabels = () => {\r\n    return labels.map((label, index) =>\r\n      <li key={index} onClick={() => {\r\n        this.props.getMailNavLabels(label);\r\n        setTimeout(() => {\r\n          this.props.hideMailLoader();\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"jr-link\">\r\n          <i className={`zmdi zmdi-label-alt text-${label.color}`}/>\r\n          <span>{label.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  searchMail = (searchText) => {\r\n    this.props.onSearchMail(searchText);\r\n  };\r\n  displayMail = (currentMail, folderMails, noContentFoundMessage) => {\r\n    return (<div className=\"module-box-column\">\r\n      {currentMail === null ?\r\n        folderMails.length === 0 ?\r\n          <div className=\"d-flex align-items-center justify-content-center\"\r\n               style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n            {noContentFoundMessage}\r\n          </div>\r\n          :\r\n          <MailList mails={folderMails} onStartSelect={this.onStartSelect.bind(this)}\r\n                    onMailSelect={this.onMailSelect.bind(this)}\r\n                    width={this.props.width}\r\n                    onMailChecked={this.onMailChecked.bind(this)}/>\r\n        :\r\n        <MailDetail mail={currentMail} onStartSelect={this.onStartSelect.bind(this)}\r\n                    width={this.props.width}\r\n                    onImportantSelect={this.onImportantSelect.bind(this)}/>}\r\n    </div>)\r\n  };\r\n  getMailActions = () => {\r\n    return <div>\r\n      <IconButton onClick={this.onFolderSelect.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-folder\"/>\r\n      </IconButton>\r\n\r\n      <IconButton onClick={this.onDeleteMail.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-delete\"/>\r\n      </IconButton>\r\n\r\n      <IconButton\r\n        onClick={this.onLabelSelect.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-label-alt\"/>\r\n      </IconButton>\r\n    </div>\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      anchorEl: null\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.fetchMails();\r\n  }\r\n\r\n  onMailChecked(data) {\r\n    this.props.onMailChecked(data);\r\n  }\r\n\r\n  onAllMailSelect() {\r\n    const selectAll = this.props.selectedMails <= this.props.folderMails.length;\r\n    if (selectAll) {\r\n      this.getAllMail();\r\n    } else {\r\n      this.getUnselectedAllMail();\r\n    }\r\n  }\r\n\r\n  onStartSelect(data) {\r\n    this.props.onStartSelect(data);\r\n  }\r\n\r\n  onImportantSelect(data) {\r\n    this.props.onImportantSelect(data);\r\n  }\r\n\r\n  onMailSend(data) {\r\n    this.props.onMailSend(data);\r\n  }\r\n\r\n  onMailSelect(mail) {\r\n    this.props.onMailSelect(mail);\r\n    setTimeout(() => {\r\n      this.props.hideMailLoader();\r\n    }, 1500);\r\n  }\r\n\r\n  updateSearch(evt) {\r\n    this.props.updateMailSearch(evt.target.value);\r\n    this.props.onSearchMail(evt.target.value)\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.props.onMailToggleDrawer()\r\n  }\r\n\r\n  render() {\r\n    const {selectedMails, loader, currentMail, folderMails, composeMail, user, alertMessage, showMessage, noContentFoundMessage} = this.props;\r\n    return (\r\n\r\n      <div className=\"app-wrapper\">\r\n        <div className=\"animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"app-module\">\r\n\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer\r\n                open={this.props.drawerState}\r\n                onClose={this.onToggleDrawer.bind(this)}>\r\n                {this.MailSideBar()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\r\n              {this.MailSideBar()}\r\n            </div>\r\n\r\n            <div className=\"module-box\">\r\n\r\n              <div className=\"module-box-header\">\r\n\r\n                <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\r\n                            onClick={this.onToggleDrawer.bind(this)}>\r\n                  <i className=\"zmdi zmdi-menu\"/>\r\n                </IconButton>\r\n                <AppModuleHeader placeholder=\"Search mails\" user={this.props.user}\r\n                                 onChange={this.updateSearch.bind(this)}\r\n                                 value={this.props.searchMail}/>\r\n\r\n              </div>\r\n\r\n              <div className=\"module-box-content\">\r\n                <div className=\"module-box-topbar\">\r\n                  {this.props.currentMail === null ?\r\n                    <div className=\"d-flex\">\r\n                      <Checkbox color=\"primary\"\r\n                                indeterminate={selectedMails > 0 && selectedMails < folderMails.length}\r\n                                checked={selectedMails > 0}\r\n                                onChange={this.onAllMailSelect.bind(this)}\r\n                                value=\"SelectMail\"/>\r\n\r\n                      <div className=\"d-flex align-items-center\" onClick={this.onOptionMenuSelect.bind(this)}>\r\n                        <span className=\"px-2\"> {this.props.optionName}</span>\r\n                        <IconButton className=\"icon-btn-sm\">\r\n\r\n                          <i className=\"zmdi zmdi-caret-down\"/>\r\n                        </IconButton>\r\n                      </div>\r\n                    </div>\r\n                    :\r\n                    <IconButton className=\"icon-btn\"\r\n                                onClick={() => {\r\n                                  this.props.setCurrentMailNull();\r\n                                }}>\r\n                      <i className=\"zmdi zmdi-arrow-back\"/>\r\n                    </IconButton>\r\n                  }\r\n\r\n                  {(selectedMails > 0) && this.getMailActions()}\r\n\r\n\r\n                  <Menu id=\"option-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.props.optionMenuState}\r\n                        onClose={this.handleRequestClose}\r\n\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {options.map(option =>\r\n                      <MenuItem key={option.title}\r\n                                onClick={this.onOptionMenuItemSelect.bind(this, option)}>\r\n                        {option.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n\r\n                  <Menu id=\"folder-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.props.folderMenuState}\r\n                        onClose={this.handleRequestClose}\r\n\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {folders.map(folder =>\r\n                      <MenuItem key={folder.id}\r\n                                onClick={this.onFolderMenuItemSelect.bind(this, folder.id)}>\r\n                        {folder.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n                  <Menu id=\"label-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.props.labelMenuState}\r\n                        onClose={this.handleRequestClose}\r\n\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {labels.map(label =>\r\n                      <MenuItem key={label.id}\r\n                                onClick={this.onLabelMenuItemSelect.bind(this, label)}>\r\n                        {label.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n                </div>\r\n\r\n                {loader ?\r\n                  <div className=\"loader-view\"\r\n                       style={{height: this.props.width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                    <CircularProgress/>\r\n                  </div> : this.displayMail(currentMail, folderMails, noContentFoundMessage)}\r\n\r\n                <ComposeMail open={composeMail} user={user}\r\n                             onClose={this.handleRequestClose.bind(this)}\r\n                             onMailSend={this.onMailSend.bind(this)}/>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Snackbar\r\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n            open={showMessage}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleRequestClose}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">{alertMessage}</span>}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({mail, settings}) => {\r\n  const {width} = settings;\r\n  const {\r\n    searchMail,\r\n    noContentFoundMessage,\r\n    alertMessage,\r\n    showMessage,\r\n    drawerState,\r\n    anchorEl,\r\n    allMail,\r\n    optionName,\r\n    loader,\r\n    currentMail,\r\n    user,\r\n    selectedMails,\r\n    selectedFolder,\r\n    composeMail,\r\n    labelMenuState,\r\n    folderMenuState,\r\n    optionMenuState,\r\n    folderMails\r\n  } = mail;\r\n\r\n  return {\r\n    width,\r\n    searchMail,\r\n    noContentFoundMessage,\r\n    alertMessage,\r\n    showMessage,\r\n    drawerState,\r\n    anchorEl,\r\n    allMail,\r\n    optionName,\r\n    loader,\r\n    currentMail,\r\n    user,\r\n    selectedMails,\r\n    selectedFolder,\r\n    composeMail,\r\n    labelMenuState,\r\n    folderMenuState,\r\n    optionMenuState,\r\n    folderMails\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAllMail,\r\n  fetchMails,\r\n  getImportantMail,\r\n  getMailNavFilters,\r\n  getMailNavLabels,\r\n  getNavFolders,\r\n  getReadMail,\r\n  getStarredMail,\r\n  getUnimportantMail,\r\n  getUnreadMail,\r\n  getUnselectedAllMail,\r\n  getUnStarredMail,\r\n  handleMailRequestClose,\r\n  hideMailLoader,\r\n  onAllMailSelect,\r\n  onComposeMail,\r\n  onDeleteMail,\r\n  onFolderMenuItemSelect,\r\n  onFolderSelect,\r\n  onImportantSelect,\r\n  onMailChecked,\r\n  onMailLabelMenuItemSelect,\r\n  onMailLabelSelect,\r\n  onMailOptionMenuSelect,\r\n  onMailSelect,\r\n  onMailSend,\r\n  onMailToggleDrawer,\r\n  onOptionMenuItemSelect,\r\n  onSearchMail,\r\n  onStartSelect,\r\n  setCurrentMailNull,\r\n  updateMailSearch\r\n})(MailWithRedux);"],"sourceRoot":""}