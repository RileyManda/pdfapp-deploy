{"version":3,"sources":["components/chatPanel/Conversation/ReceivedMessageCell/index.js","components/chatPanel/Conversation/SentMessageCell/index.js","components/chatPanel/Conversation/index.js","components/chatPanel/ChatUserList/UserCell/index.js","components/chatPanel/ChatUserList/index.js","components/chatPanel/ContactList/UserCell/index.js","components/chatPanel/ContactList/index.js","app/routes/chatPanel/basic/index.js"],"names":["ReceivedMessageCell","conversation","user","className","src","thumb","alt","message","sentAt","SentMessageCell","name","Conversation","conversationData","selectedUser","map","index","type","key","UserCell","chat","selectedSectionId","onSelectUser","id","onClick","status","lastMessage","substring","lastMessageTime","unreadMessage","ChatUserList","chatUsers","mood","ContactList","contactList","ChatPanel","filterContact","userName","users","filter","recent","toLowerCase","indexOf","filterUsers","Communication","state","aria-label","onToggleDrawer","bind","style","height","props","width","maxHeight","onKeyUp","_handleKeyPress","onChange","updateMessageValue","value","placeholder","submitComment","AppUsersInfo","setState","userState","fullWidth","multiline","rows","defaultValue","margin","ChatUsers","updateSearchChatUser","searchChatUser","position","selectedTabIndex","handleChange","indicatorColor","textColor","variant","label","onChangeIndex","handleChangeIndex","length","userNotFound","e","event","loader","drawerState","conversationList","find","data","setTimeout","showCommunication","color","this","updatedConversation","concat","Moment","format","evt","target","open","onClose","Component","connect","settings"],"mappings":"2HAkBeA,EAhBa,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,KAC1C,OACE,yBAAKC,UAAU,gCAEb,yBAAKA,UAAU,+CAA+CC,IAAKF,EAAKG,MACnEC,IAAI,KAET,yBAAKH,UAAU,UACb,yBAAKA,UAAU,WAAWF,EAAaM,SACvC,yBAAKJ,UAAU,mCAAmCF,EAAaO,WCQxDC,EAjBS,SAAC,GAAoB,IAAnBR,EAAkB,EAAlBA,aACxB,OACE,yBAAKE,UAAU,iDAEb,yBAAKA,UAAU,+CACVC,IAAK,sCACLE,IAAKL,EAAaS,OAEvB,yBAAKP,UAAU,qBACb,yBAAKA,UAAU,WAAWF,EAAaM,SACvC,yBAAKJ,UAAU,mCAAmCF,EAAaO,WCIxDG,IAZM,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,aAEvC,OACE,yBAAKV,UAAU,qBACZS,EAAiBE,KAAI,SAACb,EAAcc,GAAf,MAA+C,SAAtBd,EAAae,KAC1D,kBAAC,EAAD,CAAiBC,IAAKF,EAAOd,aAAcA,IAC3C,kBAAC,EAAD,CAAqBgB,IAAKF,EAAOd,aAAcA,EAAcC,KAAMW,U,sDCmB5DK,EA3BE,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,aAC1C,OACE,yBAAKJ,IAAKE,EAAKG,GAAInB,UAAS,yBAAoBiB,IAAsBD,EAAKG,GAAK,SAAW,IAAMC,QAAS,WACxGF,EAAaF,KAEb,yBAAKhB,UAAU,qBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,oBACb,yBAAKC,IAAKe,EAAKd,MAAOF,UAAU,yBAAyBG,IAAKa,EAAKT,OACnE,0BAAMP,UAAS,0BAAqBgB,EAAKK,YAI7C,yBAAKrB,UAAU,4BACb,0BAAMA,UAAU,WAAWgB,EAAKT,MAChC,yBAAKP,UAAU,iBAAiBgB,EAAKM,YAAYC,UAAU,EAAG,IAAM,OACpE,yBAAKvB,UAAU,qBAAqBgB,EAAKQ,kBAG3C,yBAAKxB,UAAU,4BACb,yBAAKA,UAAU,8CAA8CgB,EAAKS,mBCT7DC,IAVM,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,UAAWV,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,aACnD,OACE,yBAAKlB,UAAU,aACZ2B,EAAUhB,KAAI,SAACK,EAAMJ,GAAP,OACb,kBAAC,EAAD,CAAUE,IAAKF,EAAOI,KAAMA,EAAMC,kBAAmBA,EAAmBC,aAAcA,U,sDCiB/EH,EAtBE,SAAC,GAA6C,IAA5CG,EAA2C,EAA3CA,aAAcD,EAA6B,EAA7BA,kBAAmBlB,EAAU,EAAVA,KAClD,OACE,yBAAKC,UAAS,yBAAoBiB,IAAsBlB,EAAKoB,GAAK,SAAW,IAAMC,QAAS,WAC1FF,EAAanB,KAEb,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,oBACb,yBAAKC,IAAKF,EAAKG,MAAOF,UAAU,yBAAyBG,IAAI,WAC7D,0BAAMH,UAAS,6BAAwBD,EAAKsB,YAIhD,yBAAKrB,UAAU,oCACb,yBAAKA,UAAU,WAAWD,EAAKQ,MAC/B,yBAAKP,UAAU,iBAAiBD,EAAK6B,KAAKL,UAAU,EAAG,IAAM,WCJxDM,IAVK,SAAC,GAAoD,IAAnDX,EAAkD,EAAlDA,aAAcD,EAAoC,EAApCA,kBAAmBa,EAAiB,EAAjBA,YACrD,OACE,yBAAK9B,UAAU,aACZ8B,EAAYnB,KAAI,SAACZ,EAAMa,GAAP,OACf,kBAAC,EAAD,CAAUE,IAAKF,EAAOb,KAAMA,EAAMkB,kBAAmBA,EAAmBC,aAAcA,U,uSCcxFa,E,kDA2PJ,aAAe,IAAD,8BACZ,gBA3PFC,cAAgB,SAACC,GACf,MAAiB,KAAbA,EACKC,IAAMC,QAAO,SAAApC,GAAI,OAAKA,EAAKqC,UAE7BF,IAAMC,QAAO,SAACpC,GAAD,OACjBA,EAAKqC,QAAUrC,EAAKQ,KAAK8B,cAAcC,QAAQL,EAASI,gBAAkB,MAqPjE,EAlPdE,YAAc,SAACN,GACb,MAAiB,KAAbA,EACKC,IAAMC,QAAO,SAAApC,GAAI,OAAIA,EAAKqC,UAE5BF,IAAMC,QAAO,SAACpC,GAAD,OAClBA,EAAKqC,QAAUrC,EAAKQ,KAAK8B,cAAcC,QAAQL,EAASI,gBAAkB,MA6OhE,EA1OdG,cAAgB,WAAO,IAAD,EAC0B,EAAKC,MAA5CrC,EADa,EACbA,QAASM,EADI,EACJA,aACTD,EAFa,EACUX,aACvBW,iBACP,OAAO,yBAAKT,UAAU,aACpB,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAYA,UAAU,6BAA6B0C,aAAW,OAClDtB,QAAS,EAAKuB,eAAeC,KAApB,iBACnB,uBAAG5C,UAAU,4BAEf,yBAAKA,UAAU,yBAEb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,yBAAKC,IAAKS,EAAaR,MAClBF,UAAU,yBACVG,IAAI,KAET,0BAAMH,UAAS,oBAAeU,EAAaW,YAI/C,yBAAKrB,UAAU,qBACZU,EAAaH,QAMpB,kBAAC,IAAD,CAAkBP,UAAU,6BACV6C,MAAO,CAACC,OAAQ,EAAKC,MAAMC,OAAS,KAAO,sBAAwB,wBACnF,kBAAC,IAAD,CAAcvC,iBAAkBA,EAClBC,aAAcA,KAG9B,yBAAKV,UAAU,oBACb,yBAAKA,UAAU,qCAAqC6C,MAAO,CAACI,UAAW,KACrE,yBAAKjD,UAAU,OACb,yBAAKA,UAAU,cACC,8BACEmB,GAAG,WAAWnB,UAAU,sCACxBkD,QAAS,EAAKC,gBAAgBP,KAArB,gBACTQ,SAAU,EAAKC,mBAAmBT,KAAxB,gBACVU,MAAOlD,EACPmD,YAAY,yCAIhC,yBAAKvD,UAAU,aACb,kBAAC,IAAD,CACEoB,QAAS,EAAKoC,cAAcZ,KAAnB,gBACTF,aAAW,gBACX,uBAAG1C,UAAU,+BAuLX,EA/KdyD,aAAe,WACb,OAAO,yBAAKzD,UAAU,qBACpB,yBAAKA,UAAU,yCAEb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAYA,UAAU,uBAAuB0C,aAAW,cAC5CtB,QAAS,WACP,EAAKsC,SAAS,CACZC,UAAW,MAGzB,uBAAG3D,UAAU,2BAGjB,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBACb,yBAAKC,IAAK,sCACLD,UAAU,mDAAmDG,IAAI,cAGxE,yBAAKH,UAAU,qBAAf,QAIJ,yBAAKA,UAAU,wBAEb,kBAAC,IAAD,CAAkBA,UAAU,gCACV6C,MAAO,CAACC,OAAQ,EAAKC,MAAMC,OAAS,KAAO,sBAAwB,wBACnF,0BAAMhD,UAAU,OACd,yBAAKA,UAAU,mBACb,uCAEA,kBAAC,IAAD,CACE4D,WAAW,EACXzC,GAAG,kBACH0C,WAAS,EACTC,KAAM,EACNZ,QAAS,EAAKC,gBAAgBP,KAArB,gBACTQ,SAAU,EAAKC,mBAAmBT,KAAxB,gBACVmB,aAAa,qCACbR,YAAY,SACZS,OAAO,eAsIP,EA7HdC,UAAY,WACV,OAAO,yBAAKjE,UAAU,qBAEpB,yBAAKA,UAAU,uBAEb,yBAAKA,UAAU,gBAEb,yBAAKA,UAAU,mBAAmBoB,QAAS,WACzC,EAAKsC,SAAS,CACZC,UAAW,MAGb,yBAAK3D,UAAU,oBACb,yBAAKmB,GAAG,qBAAqBlB,IAAK,sCAC7BD,UAAU,yBACVG,IAAI,KACT,0BAAMH,UAAU,uBAIpB,yBAAKA,UAAU,8DACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,QAAd,mBAEF,yBAAKA,UAAU,sBACb,0BAAMA,UAAU,qBAAhB,yBAKN,yBAAKA,UAAU,kBAEb,kBAAC,IAAD,CAAWuD,YAAY,2BACZH,SAAU,EAAKc,qBAAqBtB,KAA1B,gBACVU,MAAO,EAAKb,MAAM0B,mBAKjC,yBAAKnE,UAAU,wBACb,kBAAC,IAAD,CAAQoE,SAAS,SAASpE,UAAU,8BAClC,kBAAC,IAAD,CACEA,UAAU,YACVsD,MAAO,EAAKb,MAAM4B,iBAClBjB,SAAU,EAAKkB,aACfC,eAAe,UACfC,UAAU,UACVC,QAAQ,aACR,kBAAC,IAAD,CAAKC,MAAO,kBAAC,IAAD,CAAcvD,GAAG,oBAC7B,kBAAC,IAAD,CAAKuD,MAAO,kBAAC,IAAD,CAAcvD,GAAG,sBAGjC,kBAAC,IAAD,CACEP,MAAO,EAAK6B,MAAM4B,iBAClBM,cAAe,EAAKC,mBAEpB,kBAAC,IAAD,CAAkB5E,UAAU,gCACV6C,MAAO,CAACC,OAAQ,EAAKC,MAAMC,OAAS,KAAO,sBAAwB,wBAClD,IAAhC,EAAKP,MAAMd,UAAUkD,OACpB,yBAAK7E,UAAU,OAAO,EAAKyC,MAAMqC,cAEjC,kBAAC,IAAD,CAAcnD,UAAW,EAAKc,MAAMd,UACtBV,kBAAmB,EAAKwB,MAAMxB,kBAC9BC,aAAc,EAAKA,aAAa0B,KAAlB,mBAIhC,kBAAC,IAAD,CAAkB5C,UAAU,gCACV6C,MAAO,CAACC,OAAQ,EAAKC,MAAMC,OAAS,KAAO,sBAAwB,wBAE/C,IAAlC,EAAKP,MAAMX,YAAY+C,OACrB,yBAAK7E,UAAU,OAAO,EAAKyC,MAAMqC,cAEjC,kBAAC,IAAD,CAAahD,YAAa,EAAKW,MAAMX,YACxBb,kBAAmB,EAAKwB,MAAMxB,kBAC9BC,aAAc,EAAKA,aAAa0B,KAAlB,uBAkD3B,EA1CdO,gBAAkB,SAAC4B,GACH,UAAVA,EAAEjE,KACJ,EAAK0C,iBAwCK,EApCdc,aAAe,SAACU,EAAO1B,GACrB,EAAKI,SAAS,CAACW,iBAAkBf,KAmCrB,EAhCdsB,kBAAoB,SAAAhE,GAClB,EAAK8C,SAAS,CAACW,iBAAkBzD,KA+BrB,EA7BdM,aAAe,SAACnB,GACd,EAAK2D,SAAS,CACZuB,QAAQ,EACRhE,kBAAmBlB,EAAKoB,GACxB+D,YAAa,EAAKnC,MAAMmC,YACxBxE,aAAcX,EACdD,aAAc,EAAK2C,MAAM0C,iBAAiBC,MAAK,SAACC,GAAD,OAAUA,EAAKlE,KAAOpB,EAAKoB,QAE5EmE,YAAW,WACT,EAAK5B,SAAS,CAACuB,QAAQ,MACtB,OAmBS,EAjBdM,kBAAoB,WAClB,OACE,yBAAKvF,UAAU,YACb,yBAAKA,UAAU,iBACe,OAA5B,EAAKyC,MAAM/B,aACT,yBAAKV,UAAU,cAAc6C,MAAO,CAACC,OAAQ,wBAC3C,uBAAG9C,UAAU,uCACb,wBAAIA,UAAU,cAAc,kBAAC,IAAD,CAAcmB,GAAG,yBAC7C,kBAAC,IAAD,CAAQnB,UAAU,oBAAoBwF,MAAM,UACpCpE,QAAS,EAAKuB,eAAeC,KAApB,iBAAiC,kBAAC,IAAD,CAChDzB,GAAG,6BAEL,EAAKqB,mBAOf,EAAKC,MAAQ,CACXwC,QAAQ,EACRH,aAAc,gBACdI,aAAa,EACbjE,kBAAmB,GACnBoD,iBAAkB,EAClBV,UAAW,EACXQ,eAAgB,GAChBrC,YAAaI,IAAMC,QAAO,SAACpC,GAAD,OAAWA,EAAKqC,UAC1C1B,aAAc,KACdN,QAAS,GACTuB,UAAWO,IAAMC,QAAO,SAACpC,GAAD,OAAUA,EAAKqC,UACvC+C,iBAAkBA,IAClBrF,aAAc,MAfJ,E,4DAmBG,IAAD,OACd,GAA2B,KAAvB2F,KAAKhD,MAAMrC,QAAgB,CAC7B,IAAMsF,EAAsBD,KAAKhD,MAAM3C,aAAaW,iBAAiBkF,OAAO,CAC1E,KAAQ,OACR,QAAWF,KAAKhD,MAAMrC,QACtB,OAAUwF,MAASC,OAAO,gBAE5BJ,KAAK/B,SAAS,CACZ5D,aAAa,2BACR2F,KAAKhD,MAAM3C,cADJ,IACkBW,iBAAkBiF,IAEhDtF,QAAS,GACT+E,iBAAkBM,KAAKhD,MAAM0C,iBAAiBxE,KAAI,SAAAF,GAChD,OAAIA,EAAiBU,KAAO,EAAKsB,MAAM3C,aAAaqB,GAC3C,2BAAI,EAAKsB,MAAM3C,cAAtB,IAAoCW,iBAAkBiF,IAE/CjF,U,yCAOEqF,GACjBL,KAAK/B,SAAS,CACZtD,QAAS0F,EAAIC,OAAOzC,U,2CAIHwC,GACnBL,KAAK/B,SAAS,CACZS,eAAgB2B,EAAIC,OAAOzC,MAC3BxB,YAAa2D,KAAKzD,cAAc8D,EAAIC,OAAOzC,OAC3C3B,UAAW8D,KAAKlD,YAAYuD,EAAIC,OAAOzC,W,uCAKzCmC,KAAK/B,SAAS,CACZwB,aAAcO,KAAKhD,MAAMyC,gB,+BAInB,IAAD,EACkCO,KAAKhD,MAAvCwC,EADA,EACAA,OAAQtB,EADR,EACQA,UAAWuB,EADnB,EACmBA,YAC1B,OACE,yBAAKlF,UAAU,kCACb,yBAAKA,UAAU,sEACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAQgG,KAAMd,EACNe,QAASR,KAAK9C,eAAeC,KAAK6C,OACzB,IAAd9B,EAAkB8B,KAAKxB,YAAcwB,KAAKhC,iBAG/C,yBAAKzD,UAAU,iCACE,IAAd2D,EAAkB8B,KAAKxB,YAAcwB,KAAKhC,gBAE5CwB,EACC,yBAAKjF,UAAU,oBACV6C,MAAO,CAACC,OAAQ,wBACnB,kBAAC,IAAD,OACO2C,KAAKF,2B,GA5UJW,aA0VTC,uBALS,SAAC,GAEvB,MAAO,CAACnD,MAF8B,EAAdoD,SACjBpD,SAIMmD,CAAyBpE","file":"static/js/126.dd20d17d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ReceivedMessageCell = ({conversation, user}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src={user.thumb}\r\n           alt=\"\"/>\r\n\r\n      <div className=\"bubble\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReceivedMessageCell;","import React from 'react';\r\n\r\nconst SentMessageCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item flex-row-reverse\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\"\r\n           src={\"https://via.placeholder.com/150x150\"}\r\n           alt={conversation.name}/>\r\n\r\n      <div className=\"bubble jambo-card\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SentMessageCell;\r\n","import React from 'react';\r\nimport ReceivedMessageCell from \"./ReceivedMessageCell/index\";\r\nimport SentMessageCell from \"./SentMessageCell/index\";\r\n\r\nconst Conversation = ({conversationData, selectedUser}) => {\r\n\r\n  return (\r\n    <div className=\"chat-main-content\">\r\n      {conversationData.map((conversation, index) => conversation.type === 'sent' ?\r\n        <SentMessageCell key={index} conversation={conversation}/> :\r\n        <ReceivedMessageCell key={index} conversation={conversation} user={selectedUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Conversation;","import React from 'react';\r\n\r\nconst UserCell = ({chat, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div key={chat.id} className={`chat-user-item ${selectedSectionId === chat.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(chat);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={chat.thumb} className=\"rounded-circle size-40\" alt={chat.name}/>\r\n            <span className={`chat-mode small ${chat.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-info col-xl-8 col-6\">\r\n          <span className=\"name h4\">{chat.name}</span>\r\n          <div className=\"chat-info-des\">{chat.lastMessage.substring(0, 25) + \"...\"}</div>\r\n          <div className=\"last-message-time\">{chat.lastMessageTime}</div>\r\n        </div>\r\n\r\n        <div className=\"chat-date col-xl-2 col-3\">\r\n          <div className=\"bg-primary rounded-circle badge text-white\">{chat.unreadMessage}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ChatUserList = ({chatUsers, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {chatUsers.map((chat, index) =>\r\n        <UserCell key={index} chat={chat} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatUserList;","import React from 'react';\r\n\r\nconst UserCell = ({onSelectUser, selectedSectionId, user}) => {\r\n  return (\r\n    <div className={`chat-user-item ${selectedSectionId === user.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(user);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={user.thumb} className=\"rounded-circle size-40\" alt=\"Abbott\"/>\r\n            <span className={`chat-mode smallcal ${user.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-contact-col col-xl-10 col-9\">\r\n          <div className=\"h4 name\">{user.name}</div>\r\n          <div className=\"chat-info-des\">{user.mood.substring(0, 30) + \"...\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ContactList = ({onSelectUser, selectedSectionId, contactList}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {contactList.map((user, index) =>\r\n        <UserCell key={index} user={user} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContactList;","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {connect} from 'react-redux'\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Input from '@material-ui/core/Input'\r\nimport Moment from 'moment';\r\nimport ChatUserList from 'components/chatPanel/ChatUserList';\r\nimport conversationList from '../data/conversationList';\r\nimport Conversation from 'components/chatPanel/Conversation/index';\r\nimport users from '../data/chatUsers';\r\nimport ContactList from 'components/chatPanel/ContactList/index';\r\nimport SearchBox from 'components/SearchBox/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nclass ChatPanel extends Component {\r\n  filterContact = (userName) => {\r\n    if (userName === '') {\r\n      return users.filter(user => !user.recent);\r\n    }\r\n    return users.filter((user) =>\r\n      !user.recent && user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1\r\n    );\r\n  };\r\n  filterUsers = (userName) => {\r\n    if (userName === '') {\r\n      return users.filter(user => user.recent);\r\n    }\r\n    return users.filter((user) =>\r\n      user.recent && user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1\r\n    );\r\n  };\r\n  Communication = () => {\r\n    const {message, selectedUser, conversation} = this.state;\r\n    const {conversationData} = conversation;\r\n    return <div className=\"chat-main\">\r\n      <div className=\"chat-main-header\">\r\n        <IconButton className=\"d-block d-xl-none chat-btn\" aria-label=\"Menu\"\r\n                    onClick={this.onToggleDrawer.bind(this)}>\r\n          <i className=\"zmdi zmdi-comment-text\"/>\r\n        </IconButton>\r\n        <div className=\"chat-main-header-info\">\r\n\r\n          <div className=\"chat-avatar mr-2\">\r\n            <div className=\"chat-avatar-mode\">\r\n              <img src={selectedUser.thumb}\r\n                   className=\"rounded-circle size-60\"\r\n                   alt=\"\"/>\r\n\r\n              <span className={`chat-mode ${selectedUser.status}`}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat-contact-name\">\r\n            {selectedUser.name}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <CustomScrollbars className=\"chat-list-scroll scrollbar\"\r\n                        style={{height: this.props.width >= 1200 ? 'calc(100vh - 300px)' : 'calc(100vh - 269px)'}}>\r\n        <Conversation conversationData={conversationData}\r\n                      selectedUser={selectedUser}/>\r\n      </CustomScrollbars>\r\n\r\n      <div className=\"chat-main-footer\">\r\n        <div className=\"d-flex flex-row align-items-center\" style={{maxHeight: 51}}>\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n                            <textarea\r\n                              id=\"required\" className=\"border-0 form-control chat-textarea\"\r\n                              onKeyUp={this._handleKeyPress.bind(this)}\r\n                              onChange={this.updateMessageValue.bind(this)}\r\n                              value={message}\r\n                              placeholder=\"Type and hit enter to send message\"\r\n                            />\r\n            </div>\r\n          </div>\r\n          <div className=\"chat-sent\">\r\n            <IconButton\r\n              onClick={this.submitComment.bind(this)}\r\n              aria-label=\"Send message\">\r\n              <i className=\"zmdi  zmdi-mail-send\"/>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  AppUsersInfo = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"bg-grey lighten-5 chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd mb-0\">\r\n          <IconButton className=\"back-to-chats-button\" aria-label=\"back button\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          userState: 1\r\n                        });\r\n                      }}>\r\n            <i className=\"zmdi zmdi-arrow-back\"/>\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"chat-user chat-user-center\">\r\n          <div className=\"chat-avatar mx-auto\">\r\n            <img src={\"https://via.placeholder.com/150x150\"}\r\n                 className=\"avatar avatar-shadow rounded-circle size-60 huge\" alt=\"John Doe\"/>\r\n          </div>\r\n\r\n          <div className=\"user-name h4 my-2\">RM</div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-sidenav-content\">\r\n\r\n        <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 162px)'}}>\r\n          <form className=\"p-4\">\r\n            <div className=\"form-group mt-4\">\r\n              <label>Mood</label>\r\n\r\n              <Input\r\n                fullWidth={true}\r\n                id=\"exampleTextarea\"\r\n                multiline\r\n                rows={3}\r\n                onKeyUp={this._handleKeyPress.bind(this)}\r\n                onChange={this.updateMessageValue.bind(this)}\r\n                defaultValue=\"it's a status....not your diary...\"\r\n                placeholder=\"Status\"\r\n                margin=\"none\"/>\r\n\r\n            </div>\r\n          </form>\r\n        </CustomScrollbars>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  ChatUsers = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n\r\n      <div className=\"chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd\">\r\n\r\n          <div className=\"chat-avatar mr-3\" onClick={() => {\r\n            this.setState({\r\n              userState: 2\r\n            });\r\n          }}>\r\n            <div className=\"chat-avatar-mode\">\r\n              <img id=\"user-avatar-button\" src={\"https://via.placeholder.com/150x150\"}\r\n                   className=\"rounded-circle size-50\"\r\n                   alt=\"\"/>\r\n              <span className=\"chat-mode online\"/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"module-user-info d-flex flex-column justify-content-center\">\r\n            <div className=\"module-title\">\r\n              <h5 className=\"mb-0\">Robert Johnson</h5>\r\n            </div>\r\n            <div className=\"module-user-detail\">\r\n              <span className=\"jr-link text-grey\">robert@example.com</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-wrapper\">\r\n\r\n          <SearchBox placeholder=\"Search or start new chat\"\r\n                     onChange={this.updateSearchChatUser.bind(this)}\r\n                     value={this.state.searchChatUser}/>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-sidenav-content\">\r\n        <AppBar position=\"static\" className=\"no-shadow chat-tabs-header\">\r\n          <Tabs\r\n            className=\"chat-tabs\"\r\n            value={this.state.selectedTabIndex}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\">\r\n            <Tab label={<IntlMessages id=\"chat.chatUser\"/>}/>\r\n            <Tab label={<IntlMessages id=\"chat.contacts\"/>}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          index={this.state.selectedTabIndex}\r\n          onChangeIndex={this.handleChangeIndex}\r\n        >\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {this.state.chatUsers.length === 0 ?\r\n              <div className=\"p-5\">{this.state.userNotFound}</div>\r\n              :\r\n              <ChatUserList chatUsers={this.state.chatUsers}\r\n                            selectedSectionId={this.state.selectedSectionId}\r\n                            onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {\r\n              this.state.contactList.length === 0 ?\r\n                <div className=\"p-5\">{this.state.userNotFound}</div>\r\n                :\r\n                <ContactList contactList={this.state.contactList}\r\n                             selectedSectionId={this.state.selectedSectionId}\r\n                             onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n        </SwipeableViews>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.submitComment();\r\n    }\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({selectedTabIndex: value});\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({selectedTabIndex: index});\r\n  };\r\n  onSelectUser = (user) => {\r\n    this.setState({\r\n      loader: true,\r\n      selectedSectionId: user.id,\r\n      drawerState: this.props.drawerState,\r\n      selectedUser: user,\r\n      conversation: this.state.conversationList.find((data) => data.id === user.id)\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({loader: false});\r\n    }, 1500);\r\n  };\r\n  showCommunication = () => {\r\n    return (\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-box-main\">{\r\n          this.state.selectedUser === null ?\r\n            <div className=\"loader-view\" style={{height: 'calc(100vh - 120px)'}}>\r\n              <i className=\"zmdi zmdi-comment s-128 text-muted\"/>\r\n              <h1 className=\"text-muted\">{<IntlMessages id=\"chat.selectUserChat\"/>}</h1>\r\n              <Button className=\"d-block d-xl-none\" color=\"primary\"\r\n                      onClick={this.onToggleDrawer.bind(this)}>{<IntlMessages\r\n                id=\"chat.selectContactChat\"/>}</Button>\r\n            </div>\r\n            : this.Communication()}\r\n        </div>\r\n      </div>)\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loader: false,\r\n      userNotFound: 'No user found',\r\n      drawerState: false,\r\n      selectedSectionId: '',\r\n      selectedTabIndex: 0,\r\n      userState: 1,\r\n      searchChatUser: '',\r\n      contactList: users.filter((user) => !user.recent),\r\n      selectedUser: null,\r\n      message: '',\r\n      chatUsers: users.filter((user) => user.recent),\r\n      conversationList: conversationList,\r\n      conversation: null\r\n    }\r\n  }\r\n\r\n  submitComment() {\r\n    if (this.state.message !== '') {\r\n      const updatedConversation = this.state.conversation.conversationData.concat({\r\n        'type': 'sent',\r\n        'message': this.state.message,\r\n        'sentAt': Moment().format('hh:mm:ss A'),\r\n      });\r\n      this.setState({\r\n        conversation: {\r\n          ...this.state.conversation, conversationData: updatedConversation\r\n        },\r\n        message: '',\r\n        conversationList: this.state.conversationList.map(conversationData => {\r\n          if (conversationData.id === this.state.conversation.id) {\r\n            return {...this.state.conversation, conversationData: updatedConversation};\r\n          } else {\r\n            return conversationData;\r\n          }\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  updateMessageValue(evt) {\r\n    this.setState({\r\n      message: evt.target.value\r\n    });\r\n  }\r\n\r\n  updateSearchChatUser(evt) {\r\n    this.setState({\r\n      searchChatUser: evt.target.value,\r\n      contactList: this.filterContact(evt.target.value),\r\n      chatUsers: this.filterUsers(evt.target.value)\r\n    });\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {loader, userState, drawerState} = this.state;\r\n    return (\r\n      <div className=\"app-wrapper app-wrapper-module\">\r\n        <div className=\"app-module chat-module animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"chat-module-box\">\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer open={drawerState}\r\n                      onClose={this.onToggleDrawer.bind(this)}>\r\n                {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"chat-sidenav d-none d-xl-flex\">\r\n              {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n            </div>\r\n            {loader ?\r\n              <div className=\"loader-view w-100\"\r\n                   style={{height: 'calc(100vh - 120px)'}}>\r\n                <CircularProgress/>\r\n              </div> : this.showCommunication()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {width} = settings;\r\n  return {width}\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChatPanel);\r\n"],"sourceRoot":""}