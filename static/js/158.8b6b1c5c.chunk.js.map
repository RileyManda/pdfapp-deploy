{"version":3,"sources":["app/routes/editors/routes/WYSISWYG/index.js","components/ContainerHeader/index.js"],"names":["WYSISWYG","props","useState","EditorState","createEmpty","editorState","setEditorState","title","id","match","className","editorStyle","width","minHeight","borderWidth","borderStyle","borderColor","wrapperClassName","onEditorStateChange","style","height","disabled","value","draftToHtml","convertToRaw","getCurrentContent","getUrlString","path","sub","index","split","ContainerHeader","substr","subPath","tag","map","active","length","key","href","arr","charAt","toUpperCase","slice","getDisplayString"],"mappings":"2MAqCeA,UA5BE,SAACC,GAAW,IAAD,EAEYC,mBAASC,cAAYC,eAFjC,mBAEnBC,EAFmB,KAENC,EAFM,KAI1B,OACE,6BACE,kBAAC,IAAD,CAAiBC,MAAO,kBAAC,IAAD,CAAcC,GAAG,mCAAoCC,MAAOR,EAAMQ,QAC1F,yBAAKC,UAAU,WACb,kBAAC,SAAD,CAAQC,YAAa,CACnBC,MAAO,OACPC,UAAW,IACXC,YAAa,EACbC,YAAa,QACbC,YAAa,aAEPX,YAAaA,EACbY,iBAAiB,eACjBC,oBAAqB,SAACb,GAAD,OAAiBC,EAAeD,MAE7D,8BAAUc,MAAO,CAACP,MAAO,OAAQQ,OAAQ,KAC/BC,UAAQ,EACRC,MAAOC,IAAYC,uBAAanB,EAAYoB,4B,iCC9B9D,sCAYMC,EAAe,SAACC,EAAMC,EAAKC,GAC/B,OAAc,IAAVA,EACK,KAEA,KAAOF,EAAKG,MAAMF,GAAK,GAAKA,GAuBxBG,IAnBS,SAAC,GAAoB,IAAnBxB,EAAkB,EAAlBA,MAClBoB,EADoC,EAAXlB,MACZkB,KAAKK,OAAO,GACzBC,EAAUN,EAAKG,MAAM,KAC3B,OACE,yBAAKpB,UAAU,2EACb,wBAAIA,UAAU,sBAAsBH,GAEpC,kBAAC,IAAD,CAAYG,UAAU,OAAOwB,IAAI,OAC9BD,EAAQE,KAAI,SAACP,EAAKC,GACf,OAAO,kBAAC,IAAD,CAAgBO,OAAQH,EAAQI,SAAWR,EAAQ,EACnCK,IAAKD,EAAQI,SAAWR,EAAQ,EAAI,OAAS,IAAKS,IAAKT,EACvDU,KAAMb,EAAaC,EAAMC,EAAKC,IA5BxC,SAACD,GACxB,IAAMY,EAAMZ,EAAIE,MAAM,KACtB,OAAIU,EAAIH,OAAS,EACRG,EAAI,GAAGC,OAAO,GAAGC,cAAgBF,EAAI,GAAGG,MAAM,GAAK,IAAMH,EAAI,GAAGC,OAAO,GAAGC,cAAgBF,EAAI,GAAGG,MAAM,GAEvGf,EAAIa,OAAO,GAAGC,cAAgBd,EAAIe,MAAM,GAuBuBC,CAAiBhB","file":"static/js/158.8b6b1c5c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {convertToRaw, EditorState} from 'draft-js';\r\nimport {Editor} from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport ContainerHeader from 'components/ContainerHeader/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\n\r\nconst WYSISWYG = (props) => {\r\n\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n  return (\r\n    <div>\r\n      <ContainerHeader title={<IntlMessages id=\"sidebar.editors.WYSISWYGEditor\"/>} match={props.match}/>\r\n      <div className=\"jr-card\">\r\n        <Editor editorStyle={{\r\n          width: '100%',\r\n          minHeight: 100,\r\n          borderWidth: 1,\r\n          borderStyle: 'solid',\r\n          borderColor: 'lightgray'\r\n        }}\r\n                editorState={editorState}\r\n                wrapperClassName=\"demo-wrapper\"\r\n                onEditorStateChange={(editorState) => setEditorState(editorState)}\r\n        />\r\n        <textarea style={{width: '100%', height: 200}}\r\n                  disabled\r\n                  value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WYSISWYG;\r\n","import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n  const arr = sub.split(\"-\");\r\n  if (arr.length > 1) {\r\n    return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n  } else {\r\n    return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n  }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '#/';\r\n  } else {\r\n    return '#/' + path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  const path = match.path.substr(1);\r\n  const subPath = path.split('/');\r\n  return (\r\n    <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n      <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n      <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n        {subPath.map((sub, index) => {\r\n            return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                   tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                   href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n          }\r\n        )}\r\n      </Breadcrumb>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n"],"sourceRoot":""}